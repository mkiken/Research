grammar is ./scala.pegjs
parser built!
input length = 1030
whitespace invoked. pos = 0
singleLineComment invoked. pos = 0
multiLineComment invoked. pos = 0
comment invoked. pos = 0
star[false]: pos = 0, val = null
__ invoked. pos = 0
PACKAGE invoked. pos = 0
star[false]: pos = 0, val = null
AT invoked. pos = 0
Annotation invoked. pos = 0
star[false]: pos = 0, val = null
IMPLICIT invoked. pos = 0
LAZY invoked. pos = 0
LocalModifier invoked. pos = 0
AccessModifier invoked. pos = 0
Modifier invoked. pos = 0
star[false]: pos = 0, val = null
CASE invoked. pos = 0
OBJECT invoked. pos = 0
TmplDef invoked. pos = 0
whitespace invoked. pos = 6
---ret = 7
---val = " "
whitespace invoked. pos = 7
singleLineComment invoked. pos = 7
multiLineComment invoked. pos = 7
comment invoked. pos = 7
star[false]: pos = 7, val =  
__ invoked. pos = 6
---ret = 7
---val = " "
upper invoked. pos = 7
lower invoked. pos = 7
---ret = 8
---val = "j"
upper invoked. pos = 8
lower invoked. pos = 8
---ret = 9
---val = "a"
letter invoked. pos = 8
---ret = 9
---val = "a"
upper invoked. pos = 9
lower invoked. pos = 9
---ret = 10
---val = "v"
letter invoked. pos = 9
---ret = 10
---val = "v"
upper invoked. pos = 10
lower invoked. pos = 10
---ret = 11
---val = "a"
letter invoked. pos = 10
---ret = 11
---val = "a"
upper invoked. pos = 11
lower invoked. pos = 11
letter invoked. pos = 11
nonZeroDigit invoked. pos = 11
digit invoked. pos = 11
star[false]: pos = 11, val = a,v,a
whitespace invoked. pos = 11
singleLineComment invoked. pos = 11
multiLineComment invoked. pos = 11
comment invoked. pos = 11
star[false]: pos = 11, val = null
__ invoked. pos = 11
idrest invoked. pos = 8
---ret = 11
---val = ["a","v","a"]
varid invoked. pos = 7
---ret = 11
---val = ["j",["a","v","a"]]
plainid invoked. pos = 7
---ret = 11
---val = ["j",["a","v","a"]]
id invoked. pos = 7
---ret = 11
---val = ["j",["a","v","a"]]
whitespace invoked. pos = 12
singleLineComment invoked. pos = 12
multiLineComment invoked. pos = 12
comment invoked. pos = 12
star[false]: pos = 12, val = null
__ invoked. pos = 12
DOT invoked. pos = 11
---ret = 12
---val = "."
upper invoked. pos = 12
lower invoked. pos = 12
---ret = 13
---val = "u"
upper invoked. pos = 13
lower invoked. pos = 13
---ret = 14
---val = "t"
letter invoked. pos = 13
---ret = 14
---val = "t"
upper invoked. pos = 14
lower invoked. pos = 14
---ret = 15
---val = "i"
letter invoked. pos = 14
---ret = 15
---val = "i"
upper invoked. pos = 15
lower invoked. pos = 15
---ret = 16
---val = "l"
letter invoked. pos = 15
---ret = 16
---val = "l"
upper invoked. pos = 16
lower invoked. pos = 16
letter invoked. pos = 16
nonZeroDigit invoked. pos = 16
digit invoked. pos = 16
star[false]: pos = 16, val = t,i,l
whitespace invoked. pos = 16
singleLineComment invoked. pos = 16
multiLineComment invoked. pos = 16
comment invoked. pos = 16
star[false]: pos = 16, val = null
__ invoked. pos = 16
idrest invoked. pos = 13
---ret = 16
---val = ["t","i","l"]
varid invoked. pos = 12
---ret = 16
---val = ["u",["t","i","l"]]
plainid invoked. pos = 12
---ret = 16
---val = ["u",["t","i","l"]]
id invoked. pos = 12
---ret = 16
---val = ["u",["t","i","l"]]
whitespace invoked. pos = 17
singleLineComment invoked. pos = 17
multiLineComment invoked. pos = 17
comment invoked. pos = 17
star[false]: pos = 17, val = null
__ invoked. pos = 17
DOT invoked. pos = 16
---ret = 17
---val = "."
upper invoked. pos = 17
---ret = 18
---val = "S"
upper invoked. pos = 18
lower invoked. pos = 18
---ret = 19
---val = "c"
letter invoked. pos = 18
---ret = 19
---val = "c"
upper invoked. pos = 19
lower invoked. pos = 19
---ret = 20
---val = "a"
letter invoked. pos = 19
---ret = 20
---val = "a"
upper invoked. pos = 20
lower invoked. pos = 20
---ret = 21
---val = "n"
letter invoked. pos = 20
---ret = 21
---val = "n"
upper invoked. pos = 21
lower invoked. pos = 21
---ret = 22
---val = "n"
letter invoked. pos = 21
---ret = 22
---val = "n"
upper invoked. pos = 22
lower invoked. pos = 22
---ret = 23
---val = "e"
letter invoked. pos = 22
---ret = 23
---val = "e"
upper invoked. pos = 23
lower invoked. pos = 23
---ret = 24
---val = "r"
letter invoked. pos = 23
---ret = 24
---val = "r"
upper invoked. pos = 24
lower invoked. pos = 24
letter invoked. pos = 24
nonZeroDigit invoked. pos = 24
digit invoked. pos = 24
star[false]: pos = 24, val = c,a,n,n,e,r
whitespace invoked. pos = 24
singleLineComment invoked. pos = 24
multiLineComment invoked. pos = 24
comment invoked. pos = 24
star[false]: pos = 24, val = null
__ invoked. pos = 24
idrest invoked. pos = 18
---ret = 24
---val = ["c","a","n","n","e","r"]
plainid invoked. pos = 17
---ret = 24
---val = ["S",["c","a","n","n","e","r"]]
id invoked. pos = 17
---ret = 24
---val = ["S",["c","a","n","n","e","r"]]
DOT invoked. pos = 24
Empty invoked. pos = 24
_StableId invoked. pos = 24
_StableId invoked. pos = 16
---ret = 24
---val = [".",["S",["c","a","n","n","e","r"]]]
_StableId invoked. pos = 11
---ret = 24
---val = [".",["u",["t","i","l"]],[".",["S",["c","a","n","n","e","r"]]]]
StableId invoked. pos = 7
---ret = 24
---val = [["j",["a","v","a"]],[".",["u",["t","i","l"]],[".",["S",["c","a","n","n","e","r"]]]]]
ImportExpr invoked. pos = 7
---ret = 24
---val = [["j",["a","v","a"]],[".",["u",["t","i","l"]],[".",["S",["c","a","n","n","e","r"]]]]]
COMMA invoked. pos = 24
star[false]: pos = 24, val = null
Import invoked. pos = 0
---ret = 24
---val = ["import"," ",[["j",["a","v","a"]],[".",["u",["t","i","l"]],[".",["S",["c","a","n","n","e","r"]]]]]]
TopStat invoked. pos = 0
---ret = 24
---val = ["import"," ",[["j",["a","v","a"]],[".",["u",["t","i","l"]],[".",["S",["c","a","n","n","e","r"]]]]]]
SEMICOLON invoked. pos = 24
whitespace invoked. pos = 25
singleLineComment invoked. pos = 25
multiLineComment invoked. pos = 25
comment invoked. pos = 25
star[false]: pos = 25, val = null
__ invoked. pos = 25
nl invoked. pos = 24
---ret = 25
---val = "\n"
whitespace invoked. pos = 26
singleLineComment invoked. pos = 26
multiLineComment invoked. pos = 26
comment invoked. pos = 26
star[false]: pos = 26, val = null
__ invoked. pos = 26
nl invoked. pos = 25
---ret = 26
---val = "\n"
nl invoked. pos = 26
star[true]: pos = 26, val = 
,

semi invoked. pos = 24
---ret = 26
---val = ["\n","\n"]
AT invoked. pos = 26
Annotation invoked. pos = 26
star[false]: pos = 26, val = null
IMPLICIT invoked. pos = 26
LAZY invoked. pos = 26
LocalModifier invoked. pos = 26
AccessModifier invoked. pos = 26
Modifier invoked. pos = 26
star[false]: pos = 26, val = null
CASE invoked. pos = 26
whitespace invoked. pos = 32
---ret = 33
---val = " "
whitespace invoked. pos = 33
singleLineComment invoked. pos = 33
multiLineComment invoked. pos = 33
comment invoked. pos = 33
star[false]: pos = 33, val =  
__ invoked. pos = 32
---ret = 33
---val = " "
OBJECT invoked. pos = 26
---ret = 33
---val = ["object"," "]
upper invoked. pos = 33
---ret = 34
---val = "M"
upper invoked. pos = 34
lower invoked. pos = 34
---ret = 35
---val = "a"
letter invoked. pos = 34
---ret = 35
---val = "a"
upper invoked. pos = 35
lower invoked. pos = 35
---ret = 36
---val = "i"
letter invoked. pos = 35
---ret = 36
---val = "i"
upper invoked. pos = 36
lower invoked. pos = 36
---ret = 37
---val = "n"
letter invoked. pos = 36
---ret = 37
---val = "n"
upper invoked. pos = 37
lower invoked. pos = 37
letter invoked. pos = 37
nonZeroDigit invoked. pos = 37
digit invoked. pos = 37
star[false]: pos = 37, val = a,i,n
whitespace invoked. pos = 37
---ret = 38
---val = " "
whitespace invoked. pos = 38
singleLineComment invoked. pos = 38
multiLineComment invoked. pos = 38
comment invoked. pos = 38
star[false]: pos = 38, val =  
__ invoked. pos = 37
---ret = 38
---val = " "
idrest invoked. pos = 34
---ret = 38
---val = [["a","i","n"]," "]
plainid invoked. pos = 33
---ret = 38
---val = ["M",[["a","i","n"]," "]]
id invoked. pos = 33
---ret = 38
---val = ["M",[["a","i","n"]," "]]
EXTENDS invoked. pos = 38
nl invoked. pos = 38
whitespace invoked. pos = 39
singleLineComment invoked. pos = 39
multiLineComment invoked. pos = 39
comment invoked. pos = 39
star[false]: pos = 39, val = null
__ invoked. pos = 39
OPBRACE invoked. pos = 38
---ret = 39
---val = "{"
upper invoked. pos = 39
lower invoked. pos = 39
varid invoked. pos = 39
opchar invoked. pos = 39
star[true]: pos = -1, val = null
op invoked. pos = 39
plainid invoked. pos = 39
id invoked. pos = 39
THIS invoked. pos = 39
SelfType invoked. pos = 39
Import invoked. pos = 39
AT invoked. pos = 39
Annotation invoked. pos = 39
star[false]: pos = 39, val = null
IMPLICIT invoked. pos = 39
LAZY invoked. pos = 39
LocalModifier invoked. pos = 39
AccessModifier invoked. pos = 39
Modifier invoked. pos = 39
star[false]: pos = 39, val = null
VAL invoked. pos = 39
VAR invoked. pos = 39
PatVarDef invoked. pos = 39
DEF invoked. pos = 39
TYPE invoked. pos = 39
CASE invoked. pos = 39
OBJECT invoked. pos = 39
TmplDef invoked. pos = 39
Def invoked. pos = 39
star[false]: pos = 39, val = null
star[false]: pos = 39, val = null
Dcl invoked. pos = 39
OPPAREN invoked. pos = 39
Bindings invoked. pos = 39
UNDER invoked. pos = 39
IF invoked. pos = 39
WHILE invoked. pos = 39
NEW invoked. pos = 39
OPBRACE invoked. pos = 39
BlockExpr invoked. pos = 39
EmptyElemTag invoked. pos = 39
STag invoked. pos = 39
Element invoked. pos = 39
CDStart invoked. pos = 39
CDSect invoked. pos = 39
PI invoked. pos = 39
Comment invoked. pos = 39
XmlContent invoked. pos = 39
XmlExpr invoked. pos = 39
StableId invoked. pos = 39
Path invoked. pos = 39
HYPHEN invoked. pos = 39
nonZeroDigit invoked. pos = 39
decimalNumeral invoked. pos = 39
hexNumeral invoked. pos = 39
octalNumeral invoked. pos = 39
integerLiteral invoked. pos = 39
digit invoked. pos = 39
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 39
booleanLiteral invoked. pos = 39
characterLiteral invoked. pos = 39
stringLiteral invoked. pos = 39
symbolLiteral invoked. pos = 39
Literal invoked. pos = 39
SimpleExpr1 invoked. pos = 39
PLUS invoked. pos = 39
SimpleExpr invoked. pos = 39
PrefixExpr invoked. pos = 39
InfixExpr invoked. pos = 39
PostfixExpr invoked. pos = 39
Expr1 invoked. pos = 39
Expr invoked. pos = 39
Empty invoked. pos = 39
TemplateStat invoked. pos = 39
SEMICOLON invoked. pos = 39
whitespace invoked. pos = 40
singleLineComment invoked. pos = 40
multiLineComment invoked. pos = 40
comment invoked. pos = 40
star[false]: pos = 40, val = null
__ invoked. pos = 40
nl invoked. pos = 39
---ret = 40
---val = "\n"
whitespace invoked. pos = 41
---ret = 42
---val = " "
whitespace invoked. pos = 42
---ret = 43
---val = " "
whitespace invoked. pos = 43
singleLineComment invoked. pos = 43
multiLineComment invoked. pos = 43
comment invoked. pos = 43
star[false]: pos = 43, val =  , 
__ invoked. pos = 41
---ret = 43
---val = [" "," "]
nl invoked. pos = 40
---ret = 43
---val = ["\n",[" "," "]]
nl invoked. pos = 43
star[true]: pos = 43, val = 
,
, , 
semi invoked. pos = 39
---ret = 43
---val = ["\n",["\n",[" "," "]]]
Import invoked. pos = 43
AT invoked. pos = 43
Annotation invoked. pos = 43
star[false]: pos = 43, val = null
IMPLICIT invoked. pos = 43
LAZY invoked. pos = 43
LocalModifier invoked. pos = 43
AccessModifier invoked. pos = 43
Modifier invoked. pos = 43
star[false]: pos = 43, val = null
VAL invoked. pos = 43
VAR invoked. pos = 43
PatVarDef invoked. pos = 43
whitespace invoked. pos = 46
---ret = 47
---val = " "
whitespace invoked. pos = 47
singleLineComment invoked. pos = 47
multiLineComment invoked. pos = 47
comment invoked. pos = 47
star[false]: pos = 47, val =  
__ invoked. pos = 46
---ret = 47
---val = " "
DEF invoked. pos = 43
---ret = 47
---val = ["def"," "]
upper invoked. pos = 47
lower invoked. pos = 47
---ret = 48
---val = "m"
upper invoked. pos = 48
lower invoked. pos = 48
---ret = 49
---val = "a"
letter invoked. pos = 48
---ret = 49
---val = "a"
upper invoked. pos = 49
lower invoked. pos = 49
---ret = 50
---val = "i"
letter invoked. pos = 49
---ret = 50
---val = "i"
upper invoked. pos = 50
lower invoked. pos = 50
---ret = 51
---val = "n"
letter invoked. pos = 50
---ret = 51
---val = "n"
upper invoked. pos = 51
lower invoked. pos = 51
letter invoked. pos = 51
nonZeroDigit invoked. pos = 51
digit invoked. pos = 51
star[false]: pos = 51, val = a,i,n
whitespace invoked. pos = 51
singleLineComment invoked. pos = 51
multiLineComment invoked. pos = 51
comment invoked. pos = 51
star[false]: pos = 51, val = null
__ invoked. pos = 51
idrest invoked. pos = 48
---ret = 51
---val = ["a","i","n"]
varid invoked. pos = 47
---ret = 51
---val = ["m",["a","i","n"]]
plainid invoked. pos = 47
---ret = 51
---val = ["m",["a","i","n"]]
id invoked. pos = 47
---ret = 51
---val = ["m",["a","i","n"]]
OPBRACKET invoked. pos = 51
FunTypeParamClause invoked. pos = 51
nl invoked. pos = 51
whitespace invoked. pos = 52
singleLineComment invoked. pos = 52
multiLineComment invoked. pos = 52
comment invoked. pos = 52
star[false]: pos = 52, val = null
__ invoked. pos = 52
OPPAREN invoked. pos = 51
---ret = 52
---val = "("
AT invoked. pos = 52
Annotation invoked. pos = 52
star[false]: pos = 52, val = null
upper invoked. pos = 52
lower invoked. pos = 52
---ret = 53
---val = "a"
upper invoked. pos = 53
lower invoked. pos = 53
---ret = 54
---val = "r"
letter invoked. pos = 53
---ret = 54
---val = "r"
upper invoked. pos = 54
lower invoked. pos = 54
---ret = 55
---val = "g"
letter invoked. pos = 54
---ret = 55
---val = "g"
upper invoked. pos = 55
lower invoked. pos = 55
---ret = 56
---val = "s"
letter invoked. pos = 55
---ret = 56
---val = "s"
upper invoked. pos = 56
lower invoked. pos = 56
letter invoked. pos = 56
nonZeroDigit invoked. pos = 56
digit invoked. pos = 56
star[false]: pos = 56, val = r,g,s
whitespace invoked. pos = 56
singleLineComment invoked. pos = 56
multiLineComment invoked. pos = 56
comment invoked. pos = 56
star[false]: pos = 56, val = null
__ invoked. pos = 56
idrest invoked. pos = 53
---ret = 56
---val = ["r","g","s"]
varid invoked. pos = 52
---ret = 56
---val = ["a",["r","g","s"]]
plainid invoked. pos = 52
---ret = 56
---val = ["a",["r","g","s"]]
id invoked. pos = 52
---ret = 56
---val = ["a",["r","g","s"]]
whitespace invoked. pos = 57
---ret = 58
---val = " "
whitespace invoked. pos = 58
singleLineComment invoked. pos = 58
multiLineComment invoked. pos = 58
comment invoked. pos = 58
star[false]: pos = 58, val =  
__ invoked. pos = 57
---ret = 58
---val = " "
COLON invoked. pos = 56
---ret = 58
---val = [":"," "]
upper invoked. pos = 58
---ret = 59
---val = "A"
upper invoked. pos = 59
lower invoked. pos = 59
---ret = 60
---val = "r"
letter invoked. pos = 59
---ret = 60
---val = "r"
upper invoked. pos = 60
lower invoked. pos = 60
---ret = 61
---val = "r"
letter invoked. pos = 60
---ret = 61
---val = "r"
upper invoked. pos = 61
lower invoked. pos = 61
---ret = 62
---val = "a"
letter invoked. pos = 61
---ret = 62
---val = "a"
upper invoked. pos = 62
lower invoked. pos = 62
---ret = 63
---val = "y"
letter invoked. pos = 62
---ret = 63
---val = "y"
upper invoked. pos = 63
lower invoked. pos = 63
letter invoked. pos = 63
nonZeroDigit invoked. pos = 63
digit invoked. pos = 63
star[false]: pos = 63, val = r,r,a,y
whitespace invoked. pos = 63
singleLineComment invoked. pos = 63
multiLineComment invoked. pos = 63
comment invoked. pos = 63
star[false]: pos = 63, val = null
__ invoked. pos = 63
idrest invoked. pos = 59
---ret = 63
---val = ["r","r","a","y"]
plainid invoked. pos = 58
---ret = 63
---val = ["A",["r","r","a","y"]]
id invoked. pos = 58
---ret = 63
---val = ["A",["r","r","a","y"]]
DOT invoked. pos = 63
Empty invoked. pos = 63
_StableId invoked. pos = 63
StableId invoked. pos = 58
---ret = 63
---val = ["A",["r","r","a","y"]]
whitespace invoked. pos = 64
singleLineComment invoked. pos = 64
multiLineComment invoked. pos = 64
comment invoked. pos = 64
star[false]: pos = 64, val = null
__ invoked. pos = 64
OPBRACKET invoked. pos = 63
---ret = 64
---val = "["
upper invoked. pos = 64
---ret = 65
---val = "S"
upper invoked. pos = 65
lower invoked. pos = 65
---ret = 66
---val = "t"
letter invoked. pos = 65
---ret = 66
---val = "t"
upper invoked. pos = 66
lower invoked. pos = 66
---ret = 67
---val = "r"
letter invoked. pos = 66
---ret = 67
---val = "r"
upper invoked. pos = 67
lower invoked. pos = 67
---ret = 68
---val = "i"
letter invoked. pos = 67
---ret = 68
---val = "i"
upper invoked. pos = 68
lower invoked. pos = 68
---ret = 69
---val = "n"
letter invoked. pos = 68
---ret = 69
---val = "n"
upper invoked. pos = 69
lower invoked. pos = 69
---ret = 70
---val = "g"
letter invoked. pos = 69
---ret = 70
---val = "g"
upper invoked. pos = 70
lower invoked. pos = 70
letter invoked. pos = 70
nonZeroDigit invoked. pos = 70
digit invoked. pos = 70
star[false]: pos = 70, val = t,r,i,n,g
whitespace invoked. pos = 70
singleLineComment invoked. pos = 70
multiLineComment invoked. pos = 70
comment invoked. pos = 70
star[false]: pos = 70, val = null
__ invoked. pos = 70
idrest invoked. pos = 65
---ret = 70
---val = ["t","r","i","n","g"]
plainid invoked. pos = 64
---ret = 70
---val = ["S",["t","r","i","n","g"]]
id invoked. pos = 64
---ret = 70
---val = ["S",["t","r","i","n","g"]]
DOT invoked. pos = 70
Empty invoked. pos = 70
_StableId invoked. pos = 70
StableId invoked. pos = 64
---ret = 70
---val = ["S",["t","r","i","n","g"]]
OPBRACKET invoked. pos = 70
TypeArgs invoked. pos = 70
_SimpleType invoked. pos = 70
SimpleType invoked. pos = 64
---ret = 70
---val = ["S",["t","r","i","n","g"]]
AT invoked. pos = 70
Annotation invoked. pos = 70
star[false]: pos = 70, val = null
AnnotType invoked. pos = 64
---ret = 70
---val = ["S",["t","r","i","n","g"]]
WITH invoked. pos = 70
nl invoked. pos = 70
OPBRACE invoked. pos = 70
Refinement invoked. pos = 70
CompoundType invoked. pos = 64
---ret = 70
---val = ["S",["t","r","i","n","g"]]
varid invoked. pos = 70
opchar invoked. pos = 70
star[true]: pos = -1, val = null
op invoked. pos = 70
plainid invoked. pos = 70
id invoked. pos = 70
star[false]: pos = 70, val = null
InfixType invoked. pos = 64
---ret = 70
---val = ["S",["t","r","i","n","g"]]
FunctionArgTypes invoked. pos = 64
---ret = 70
---val = ["S",["t","r","i","n","g"]]
ARROW invoked. pos = 70
ExistentialClause invoked. pos = 70
Type invoked. pos = 64
---ret = 70
---val = ["S",["t","r","i","n","g"]]
COMMA invoked. pos = 70
star[false]: pos = 70, val = null
Types invoked. pos = 64
---ret = 70
---val = ["S",["t","r","i","n","g"]]
whitespace invoked. pos = 71
singleLineComment invoked. pos = 71
multiLineComment invoked. pos = 71
comment invoked. pos = 71
star[false]: pos = 71, val = null
__ invoked. pos = 71
CLBRACKET invoked. pos = 70
---ret = 71
---val = "]"
TypeArgs invoked. pos = 63
---ret = 71
---val = ["[",["S",["t","r","i","n","g"]],"]"]
_SimpleType invoked. pos = 63
---ret = 71
---val = ["[",["S",["t","r","i","n","g"]],"]"]
SimpleType invoked. pos = 58
---ret = 71
---val = [["A",["r","r","a","y"]],["[",["S",["t","r","i","n","g"]],"]"]]
AT invoked. pos = 71
Annotation invoked. pos = 71
star[false]: pos = 71, val = null
AnnotType invoked. pos = 58
---ret = 71
---val = [["A",["r","r","a","y"]],["[",["S",["t","r","i","n","g"]],"]"]]
WITH invoked. pos = 71
nl invoked. pos = 71
OPBRACE invoked. pos = 71
Refinement invoked. pos = 71
CompoundType invoked. pos = 58
---ret = 71
---val = [["A",["r","r","a","y"]],["[",["S",["t","r","i","n","g"]],"]"]]
upper invoked. pos = 71
lower invoked. pos = 71
varid invoked. pos = 71
opchar invoked. pos = 71
star[true]: pos = -1, val = null
op invoked. pos = 71
plainid invoked. pos = 71
id invoked. pos = 71
star[false]: pos = 71, val = null
InfixType invoked. pos = 58
---ret = 71
---val = [["A",["r","r","a","y"]],["[",["S",["t","r","i","n","g"]],"]"]]
FunctionArgTypes invoked. pos = 58
---ret = 71
---val = [["A",["r","r","a","y"]],["[",["S",["t","r","i","n","g"]],"]"]]
ARROW invoked. pos = 71
ExistentialClause invoked. pos = 71
Type invoked. pos = 58
---ret = 71
---val = [["A",["r","r","a","y"]],["[",["S",["t","r","i","n","g"]],"]"]]
ParamType invoked. pos = 58
---ret = 71
---val = [["A",["r","r","a","y"]],["[",["S",["t","r","i","n","g"]],"]"]]
EQUAL invoked. pos = 71
Param invoked. pos = 52
---ret = 71
---val = [["a",["r","g","s"]],[[":"," "],[["A",["r","r","a","y"]],["[",["S",["t","r","i","n","g"]],"]"]]]]
COMMA invoked. pos = 71
star[false]: pos = 71, val = null
Params invoked. pos = 52
---ret = 71
---val = [["a",["r","g","s"]],[[":"," "],[["A",["r","r","a","y"]],["[",["S",["t","r","i","n","g"]],"]"]]]]
whitespace invoked. pos = 72
singleLineComment invoked. pos = 72
multiLineComment invoked. pos = 72
comment invoked. pos = 72
star[false]: pos = 72, val = null
__ invoked. pos = 72
CLPAREN invoked. pos = 71
---ret = 72
---val = ")"
ParamClause invoked. pos = 51
---ret = 72
---val = ["(",[["a",["r","g","s"]],[[":"," "],[["A",["r","r","a","y"]],["[",["S",["t","r","i","n","g"]],"]"]]]],")"]
nl invoked. pos = 72
OPPAREN invoked. pos = 72
ParamClause invoked. pos = 72
star[false]: pos = 72, val = (,a,r,g,s,:, ,A,r,r,a,y,[,S,t,r,i,n,g,],)
ParamClauses invoked. pos = 51
---ret = 72
---val = ["(",[["a",["r","g","s"]],[[":"," "],[["A",["r","r","a","y"]],["[",["S",["t","r","i","n","g"]],"]"]]]],")"]
FunSig invoked. pos = 47
---ret = 72
---val = [["m",["a","i","n"]],["(",[["a",["r","g","s"]],[[":"," "],[["A",["r","r","a","y"]],["[",["S",["t","r","i","n","g"]],"]"]]]],")"]]
whitespace invoked. pos = 73
---ret = 74
---val = " "
whitespace invoked. pos = 74
singleLineComment invoked. pos = 74
multiLineComment invoked. pos = 74
comment invoked. pos = 74
star[false]: pos = 74, val =  
__ invoked. pos = 73
---ret = 74
---val = " "
COLON invoked. pos = 72
---ret = 74
---val = [":"," "]
upper invoked. pos = 74
---ret = 75
---val = "U"
upper invoked. pos = 75
lower invoked. pos = 75
---ret = 76
---val = "n"
letter invoked. pos = 75
---ret = 76
---val = "n"
upper invoked. pos = 76
lower invoked. pos = 76
---ret = 77
---val = "i"
letter invoked. pos = 76
---ret = 77
---val = "i"
upper invoked. pos = 77
lower invoked. pos = 77
---ret = 78
---val = "t"
letter invoked. pos = 77
---ret = 78
---val = "t"
upper invoked. pos = 78
lower invoked. pos = 78
letter invoked. pos = 78
nonZeroDigit invoked. pos = 78
digit invoked. pos = 78
star[false]: pos = 78, val = n,i,t
whitespace invoked. pos = 78
---ret = 79
---val = " "
whitespace invoked. pos = 79
singleLineComment invoked. pos = 79
multiLineComment invoked. pos = 79
comment invoked. pos = 79
star[false]: pos = 79, val =  
__ invoked. pos = 78
---ret = 79
---val = " "
idrest invoked. pos = 75
---ret = 79
---val = [["n","i","t"]," "]
plainid invoked. pos = 74
---ret = 79
---val = ["U",[["n","i","t"]," "]]
id invoked. pos = 74
---ret = 79
---val = ["U",[["n","i","t"]," "]]
DOT invoked. pos = 79
Empty invoked. pos = 79
_StableId invoked. pos = 79
StableId invoked. pos = 74
---ret = 79
---val = ["U",[["n","i","t"]," "]]
OPBRACKET invoked. pos = 79
TypeArgs invoked. pos = 79
_SimpleType invoked. pos = 79
SimpleType invoked. pos = 74
---ret = 79
---val = ["U",[["n","i","t"]," "]]
AT invoked. pos = 79
Annotation invoked. pos = 79
star[false]: pos = 79, val = null
AnnotType invoked. pos = 74
---ret = 79
---val = ["U",[["n","i","t"]," "]]
WITH invoked. pos = 79
nl invoked. pos = 79
OPBRACE invoked. pos = 79
Refinement invoked. pos = 79
CompoundType invoked. pos = 74
---ret = 79
---val = ["U",[["n","i","t"]," "]]
upper invoked. pos = 79
lower invoked. pos = 79
varid invoked. pos = 79
opchar invoked. pos = 79
---ret = 80
---val = "="
opchar invoked. pos = 80
star[true]: pos = 80, val = =
whitespace invoked. pos = 80
---ret = 81
---val = " "
whitespace invoked. pos = 81
singleLineComment invoked. pos = 81
multiLineComment invoked. pos = 81
comment invoked. pos = 81
star[false]: pos = 81, val =  
__ invoked. pos = 80
---ret = 81
---val = " "
op invoked. pos = 79
---ret = 81
---val = ["="," "]
plainid invoked. pos = 79
---ret = 81
---val = ["="," "]
id invoked. pos = 79
---ret = 81
---val = ["="," "]
nl invoked. pos = 81
upper invoked. pos = 81
lower invoked. pos = 81
varid invoked. pos = 81
opchar invoked. pos = 81
star[true]: pos = -1, val = null
op invoked. pos = 81
plainid invoked. pos = 81
id invoked. pos = 81
THIS invoked. pos = 81
StableId invoked. pos = 81
Path invoked. pos = 81
OPPAREN invoked. pos = 81
SimpleType invoked. pos = 81
AnnotType invoked. pos = 81
whitespace invoked. pos = 82
singleLineComment invoked. pos = 82
multiLineComment invoked. pos = 82
comment invoked. pos = 82
star[false]: pos = 82, val = null
__ invoked. pos = 82
OPBRACE invoked. pos = 81
---ret = 82
---val = "{"
VAL invoked. pos = 82
VAR invoked. pos = 82
DEF invoked. pos = 82
TYPE invoked. pos = 82
Dcl invoked. pos = 82
Empty invoked. pos = 82
RefineStat invoked. pos = 82
SEMICOLON invoked. pos = 82
nl invoked. pos = 82
star[true]: pos = -1, val = null
semi invoked. pos = 82
star[false]: pos = 82, val = null
CLBRACE invoked. pos = 82
Refinement invoked. pos = 81
CompoundType invoked. pos = 81
star[false]: pos = 79, val = null
InfixType invoked. pos = 74
---ret = 79
---val = ["U",[["n","i","t"]," "]]
FunctionArgTypes invoked. pos = 74
---ret = 79
---val = ["U",[["n","i","t"]," "]]
ARROW invoked. pos = 79
ExistentialClause invoked. pos = 79
Type invoked. pos = 74
---ret = 79
---val = ["U",[["n","i","t"]," "]]
EQUAL invoked. pos = 79
---ret = 81
---val = ["="," "]
Bindings invoked. pos = 81
IMPLICIT invoked. pos = 81
UNDER invoked. pos = 81
IF invoked. pos = 81
WHILE invoked. pos = 81
NEW invoked. pos = 81
CASE invoked. pos = 82
CaseClause invoked. pos = 82
star[true]: pos = -1, val = null
CaseClauses invoked. pos = 82
Import invoked. pos = 82
AT invoked. pos = 82
Annotation invoked. pos = 82
star[false]: pos = 82, val = null
IMPLICIT invoked. pos = 82
LAZY invoked. pos = 82
PatVarDef invoked. pos = 82
OBJECT invoked. pos = 82
TmplDef invoked. pos = 82
Def invoked. pos = 82
star[false]: pos = 82, val = null
LocalModifier invoked. pos = 82
star[false]: pos = 82, val = null
IF invoked. pos = 82
WHILE invoked. pos = 82
whitespace invoked. pos = 84
singleLineComment invoked. pos = 84
multiLineComment invoked. pos = 84
comment invoked. pos = 84
star[false]: pos = 84, val = null
__ invoked. pos = 84
OPPAREN invoked. pos = 84
Bindings invoked. pos = 84
IMPLICIT invoked. pos = 84
upper invoked. pos = 84
---ret = 85
---val = "I"
upper invoked. pos = 85
lower invoked. pos = 85
---ret = 86
---val = "t"
letter invoked. pos = 85
---ret = 86
---val = "t"
upper invoked. pos = 86
lower invoked. pos = 86
letter invoked. pos = 86
nonZeroDigit invoked. pos = 86
digit invoked. pos = 86
star[false]: pos = 86, val = t
whitespace invoked. pos = 86
singleLineComment invoked. pos = 86
multiLineComment invoked. pos = 86
comment invoked. pos = 86
star[false]: pos = 86, val = null
__ invoked. pos = 86
idrest invoked. pos = 85
---ret = 86
---val = "t"
plainid invoked. pos = 84
---ret = 86
---val = ["I","t"]
id invoked. pos = 84
---ret = 86
---val = ["I","t"]
ARROW invoked. pos = 86
IF invoked. pos = 84
WHILE invoked. pos = 84
NEW invoked. pos = 84
OPBRACE invoked. pos = 84
BlockExpr invoked. pos = 84
EmptyElemTag invoked. pos = 84
STag invoked. pos = 84
Element invoked. pos = 84
CDStart invoked. pos = 84
CDSect invoked. pos = 84
PI invoked. pos = 84
Comment invoked. pos = 84
XmlContent invoked. pos = 84
XmlExpr invoked. pos = 84
DOT invoked. pos = 86
Empty invoked. pos = 86
_StableId invoked. pos = 86
StableId invoked. pos = 84
---ret = 86
---val = ["I","t"]
Path invoked. pos = 84
---ret = 86
---val = ["I","t"]
UNDER invoked. pos = 86
OPBRACKET invoked. pos = 86
TypeArgs invoked. pos = 86
whitespace invoked. pos = 87
singleLineComment invoked. pos = 87
multiLineComment invoked. pos = 87
comment invoked. pos = 87
star[false]: pos = 87, val = null
__ invoked. pos = 87
OPPAREN invoked. pos = 86
---ret = 87
---val = "("
OPPAREN invoked. pos = 87
Bindings invoked. pos = 87
IMPLICIT invoked. pos = 87
upper invoked. pos = 87
lower invoked. pos = 87
varid invoked. pos = 87
opchar invoked. pos = 87
star[true]: pos = -1, val = null
op invoked. pos = 87
plainid invoked. pos = 87
id invoked. pos = 87
UNDER invoked. pos = 87
IF invoked. pos = 87
WHILE invoked. pos = 87
NEW invoked. pos = 87
OPBRACE invoked. pos = 87
BlockExpr invoked. pos = 87
EmptyElemTag invoked. pos = 87
STag invoked. pos = 87
Element invoked. pos = 87
CDStart invoked. pos = 87
CDSect invoked. pos = 87
PI invoked. pos = 87
Comment invoked. pos = 87
XmlContent invoked. pos = 87
XmlExpr invoked. pos = 87
THIS invoked. pos = 87
StableId invoked. pos = 87
Path invoked. pos = 87
HYPHEN invoked. pos = 87
nonZeroDigit invoked. pos = 87
decimalNumeral invoked. pos = 87
hexNumeral invoked. pos = 87
octalNumeral invoked. pos = 87
integerLiteral invoked. pos = 87
digit invoked. pos = 87
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 87
booleanLiteral invoked. pos = 87
characterLiteral invoked. pos = 87
stringLiteral invoked. pos = 87
symbolLiteral invoked. pos = 87
Literal invoked. pos = 87
SimpleExpr1 invoked. pos = 87
PLUS invoked. pos = 87
SimpleExpr invoked. pos = 87
PrefixExpr invoked. pos = 87
InfixExpr invoked. pos = 87
PostfixExpr invoked. pos = 87
Expr1 invoked. pos = 87
Expr invoked. pos = 87
Exprs invoked. pos = 87
whitespace invoked. pos = 88
singleLineComment invoked. pos = 88
multiLineComment invoked. pos = 88
comment invoked. pos = 88
star[false]: pos = 88, val = null
__ invoked. pos = 88
CLPAREN invoked. pos = 87
---ret = 88
---val = ")"
ArgumentExprs invoked. pos = 86
---ret = 88
---val = ["(",")"]
UNDER invoked. pos = 88
DOT invoked. pos = 88
OPBRACKET invoked. pos = 88
TypeArgs invoked. pos = 88
OPPAREN invoked. pos = 88
nl invoked. pos = 88
OPBRACE invoked. pos = 88
BlockExpr invoked. pos = 88
ArgumentExprs invoked. pos = 88
Empty invoked. pos = 88
_SimpleExpr1 invoked. pos = 88
_SimpleExpr1 invoked. pos = 86
---ret = 88
---val = ["(",")"]
SimpleExpr1 invoked. pos = 84
---ret = 88
---val = [["I","t"],["(",")"]]
HYPHEN invoked. pos = 84
PLUS invoked. pos = 84
SimpleExpr invoked. pos = 84
---ret = 88
---val = [["I","t"],["(",")"]]
PrefixExpr invoked. pos = 84
---ret = 88
---val = [["I","t"],["(",")"]]
upper invoked. pos = 88
lower invoked. pos = 88
varid invoked. pos = 88
opchar invoked. pos = 88
star[true]: pos = -1, val = null
op invoked. pos = 88
plainid invoked. pos = 88
id invoked. pos = 88
_InfixExpr invoked. pos = 88
InfixExpr invoked. pos = 84
---ret = 88
---val = [["I","t"],["(",")"]]
PostfixExpr invoked. pos = 84
---ret = 88
---val = [["I","t"],["(",")"]]
COLON invoked. pos = 88
Ascription invoked. pos = 88
Expr1 invoked. pos = 84
---ret = 88
---val = [["I","t"],["(",")"]]
Expr invoked. pos = 84
---ret = 88
---val = [["I","t"],["(",")"]]
SEMICOLON invoked. pos = 88
star[true]: pos = -1, val = null
semi invoked. pos = 88
WHILE invoked. pos = 88
OPPAREN invoked. pos = 82
NEW invoked. pos = 82
OPBRACE invoked. pos = 82
BlockExpr invoked. pos = 82
EmptyElemTag invoked. pos = 82
STag invoked. pos = 82
Element invoked. pos = 82
CDStart invoked. pos = 82
CDSect invoked. pos = 82
PI invoked. pos = 82
Comment invoked. pos = 82
XmlContent invoked. pos = 82
XmlExpr invoked. pos = 82
upper invoked. pos = 82
lower invoked. pos = 82
---ret = 83
---val = "d"
upper invoked. pos = 83
lower invoked. pos = 83
---ret = 84
---val = "o"
letter invoked. pos = 83
---ret = 84
---val = "o"
letter invoked. pos = 84
---ret = 85
---val = "I"
star[false]: pos = 86, val = o,I,t
idrest invoked. pos = 83
---ret = 86
---val = ["o","I","t"]
varid invoked. pos = 82
---ret = 86
---val = ["d",["o","I","t"]]
plainid invoked. pos = 82
---ret = 86
---val = ["d",["o","I","t"]]
id invoked. pos = 82
---ret = 86
---val = ["d",["o","I","t"]]
StableId invoked. pos = 82
---ret = 86
---val = ["d",["o","I","t"]]
Path invoked. pos = 82
---ret = 86
---val = ["d",["o","I","t"]]
SimpleExpr1 invoked. pos = 82
---ret = 88
---val = [["d",["o","I","t"]],["(",")"]]
HYPHEN invoked. pos = 82
PLUS invoked. pos = 82
SimpleExpr invoked. pos = 82
---ret = 88
---val = [["d",["o","I","t"]],["(",")"]]
PrefixExpr invoked. pos = 82
---ret = 88
---val = [["d",["o","I","t"]],["(",")"]]
InfixExpr invoked. pos = 82
---ret = 88
---val = [["d",["o","I","t"]],["(",")"]]
PostfixExpr invoked. pos = 82
---ret = 88
---val = [["d",["o","I","t"]],["(",")"]]
Expr1 invoked. pos = 82
---ret = 88
---val = [["d",["o","I","t"]],["(",")"]]
BlockStat invoked. pos = 82
---ret = 88
---val = [["d",["o","I","t"]],["(",")"]]
star[false]: pos = 82, val = null
ResultExpr invoked. pos = 82
---ret = 88
---val = [["d",["o","I","t"]],["(",")"]]
Block invoked. pos = 82
---ret = 88
---val = [["d",["o","I","t"]],["(",")"]]
whitespace invoked. pos = 89
singleLineComment invoked. pos = 89
multiLineComment invoked. pos = 89
comment invoked. pos = 89
star[false]: pos = 89, val = null
__ invoked. pos = 89
CLBRACE invoked. pos = 88
---ret = 89
---val = "}"
BlockExpr invoked. pos = 81
---ret = 89
---val = ["{",[["d",["o","I","t"]],["(",")"]],"}"]
DOT invoked. pos = 89
OPBRACKET invoked. pos = 89
TypeArgs invoked. pos = 89
EmptyElemTag invoked. pos = 81
STag invoked. pos = 81
Element invoked. pos = 81
CDStart invoked. pos = 81
CDSect invoked. pos = 81
PI invoked. pos = 81
Comment invoked. pos = 81
XmlContent invoked. pos = 81
XmlExpr invoked. pos = 81
HYPHEN invoked. pos = 81
nonZeroDigit invoked. pos = 81
decimalNumeral invoked. pos = 81
hexNumeral invoked. pos = 81
octalNumeral invoked. pos = 81
integerLiteral invoked. pos = 81
digit invoked. pos = 81
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 81
booleanLiteral invoked. pos = 81
characterLiteral invoked. pos = 81
stringLiteral invoked. pos = 81
symbolLiteral invoked. pos = 81
Literal invoked. pos = 81
SimpleExpr1 invoked. pos = 81
PLUS invoked. pos = 81
SimpleExpr invoked. pos = 81
---ret = 89
---val = ["{",[["d",["o","I","t"]],["(",")"]],"}"]
PrefixExpr invoked. pos = 81
---ret = 89
---val = ["{",[["d",["o","I","t"]],["(",")"]],"}"]
whitespace invoked. pos = 90
singleLineComment invoked. pos = 90
multiLineComment invoked. pos = 90
comment invoked. pos = 90
star[false]: pos = 90, val = null
__ invoked. pos = 90
nl invoked. pos = 89
---ret = 90
---val = "\n"
upper invoked. pos = 90
lower invoked. pos = 90
varid invoked. pos = 90
opchar invoked. pos = 90
star[true]: pos = -1, val = null
op invoked. pos = 90
plainid invoked. pos = 90
id invoked. pos = 90
Empty invoked. pos = 89
_InfixExpr invoked. pos = 89
InfixExpr invoked. pos = 81
---ret = 89
---val = ["{",[["d",["o","I","t"]],["(",")"]],"}"]
upper invoked. pos = 89
lower invoked. pos = 89
varid invoked. pos = 89
opchar invoked. pos = 89
star[true]: pos = -1, val = null
op invoked. pos = 89
plainid invoked. pos = 89
id invoked. pos = 89
PostfixExpr invoked. pos = 81
---ret = 89
---val = ["{",[["d",["o","I","t"]],["(",")"]],"}"]
COLON invoked. pos = 89
Ascription invoked. pos = 89
Expr1 invoked. pos = 81
---ret = 89
---val = ["{",[["d",["o","I","t"]],["(",")"]],"}"]
Expr invoked. pos = 81
---ret = 89
---val = ["{",[["d",["o","I","t"]],["(",")"]],"}"]
FunDef invoked. pos = 47
---ret = 89
---val = [[["m",["a","i","n"]],["(",[["a",["r","g","s"]],[[":"," "],[["A",["r","r","a","y"]],["[",["S",["t","r","i","n","g"]],"]"]]]],")"]],[[":"," "],["U",[["n","i","t"]," "]]],["="," "],["{",[["d",["o","I","t"]],["(",")"]],"}"]]
Def invoked. pos = 43
---ret = 89
---val = [["def"," "],[[["m",["a","i","n"]],["(",[["a",["r","g","s"]],[[":"," "],[["A",["r","r","a","y"]],["[",["S",["t","r","i","n","g"]],"]"]]]],")"]],[[":"," "],["U",[["n","i","t"]," "]]],["="," "],["{",[["d",["o","I","t"]],["(",")"]],"}"]]]
TemplateStat invoked. pos = 43
---ret = 89
---val = [["def"," "],[[["m",["a","i","n"]],["(",[["a",["r","g","s"]],[[":"," "],[["A",["r","r","a","y"]],["[",["S",["t","r","i","n","g"]],"]"]]]],")"]],[[":"," "],["U",[["n","i","t"]," "]]],["="," "],["{",[["d",["o","I","t"]],["(",")"]],"}"]]]
SEMICOLON invoked. pos = 89
whitespace invoked. pos = 91
---ret = 92
---val = " "
whitespace invoked. pos = 92
---ret = 93
---val = " "
whitespace invoked. pos = 93
singleLineComment invoked. pos = 93
multiLineComment invoked. pos = 93
comment invoked. pos = 93
star[false]: pos = 93, val =  , 
__ invoked. pos = 91
---ret = 93
---val = [" "," "]
nl invoked. pos = 90
---ret = 93
---val = ["\n",[" "," "]]
nl invoked. pos = 93
star[true]: pos = 93, val = 
,
, , 
semi invoked. pos = 89
---ret = 93
---val = ["\n",["\n",[" "," "]]]
Import invoked. pos = 93
AT invoked. pos = 93
Annotation invoked. pos = 93
star[false]: pos = 93, val = null
IMPLICIT invoked. pos = 93
LAZY invoked. pos = 93
LocalModifier invoked. pos = 93
AccessModifier invoked. pos = 93
Modifier invoked. pos = 93
star[false]: pos = 93, val = null
VAL invoked. pos = 93
VAR invoked. pos = 93
PatVarDef invoked. pos = 93
whitespace invoked. pos = 96
---ret = 97
---val = " "
whitespace invoked. pos = 97
singleLineComment invoked. pos = 97
multiLineComment invoked. pos = 97
comment invoked. pos = 97
star[false]: pos = 97, val =  
__ invoked. pos = 96
---ret = 97
---val = " "
DEF invoked. pos = 93
---ret = 97
---val = ["def"," "]
upper invoked. pos = 97
lower invoked. pos = 97
---ret = 98
---val = "d"
upper invoked. pos = 98
lower invoked. pos = 98
---ret = 99
---val = "o"
letter invoked. pos = 98
---ret = 99
---val = "o"
upper invoked. pos = 99
---ret = 100
---val = "I"
letter invoked. pos = 99
---ret = 100
---val = "I"
upper invoked. pos = 100
lower invoked. pos = 100
---ret = 101
---val = "t"
letter invoked. pos = 100
---ret = 101
---val = "t"
upper invoked. pos = 101
lower invoked. pos = 101
letter invoked. pos = 101
nonZeroDigit invoked. pos = 101
digit invoked. pos = 101
star[false]: pos = 101, val = o,I,t
whitespace invoked. pos = 101
singleLineComment invoked. pos = 101
multiLineComment invoked. pos = 101
comment invoked. pos = 101
star[false]: pos = 101, val = null
__ invoked. pos = 101
idrest invoked. pos = 98
---ret = 101
---val = ["o","I","t"]
varid invoked. pos = 97
---ret = 101
---val = ["d",["o","I","t"]]
plainid invoked. pos = 97
---ret = 101
---val = ["d",["o","I","t"]]
id invoked. pos = 97
---ret = 101
---val = ["d",["o","I","t"]]
OPBRACKET invoked. pos = 101
FunTypeParamClause invoked. pos = 101
nl invoked. pos = 101
whitespace invoked. pos = 102
singleLineComment invoked. pos = 102
multiLineComment invoked. pos = 102
comment invoked. pos = 102
star[false]: pos = 102, val = null
__ invoked. pos = 102
OPPAREN invoked. pos = 101
---ret = 102
---val = "("
AT invoked. pos = 102
Annotation invoked. pos = 102
star[false]: pos = 102, val = null
upper invoked. pos = 102
lower invoked. pos = 102
varid invoked. pos = 102
opchar invoked. pos = 102
star[true]: pos = -1, val = null
op invoked. pos = 102
plainid invoked. pos = 102
id invoked. pos = 102
Param invoked. pos = 102
Params invoked. pos = 102
whitespace invoked. pos = 103
singleLineComment invoked. pos = 103
multiLineComment invoked. pos = 103
comment invoked. pos = 103
star[false]: pos = 103, val = null
__ invoked. pos = 103
CLPAREN invoked. pos = 102
---ret = 103
---val = ")"
ParamClause invoked. pos = 101
---ret = 103
---val = ["(",")"]
nl invoked. pos = 103
OPPAREN invoked. pos = 103
ParamClause invoked. pos = 103
star[false]: pos = 103, val = (,)
ParamClauses invoked. pos = 101
---ret = 103
---val = ["(",")"]
FunSig invoked. pos = 97
---ret = 103
---val = [["d",["o","I","t"]],["(",")"]]
COLON invoked. pos = 103
EQUAL invoked. pos = 103
whitespace invoked. pos = 104
singleLineComment invoked. pos = 104
multiLineComment invoked. pos = 104
comment invoked. pos = 104
star[false]: pos = 104, val = null
__ invoked. pos = 104
OPBRACE invoked. pos = 103
---ret = 104
---val = "{"
Import invoked. pos = 104
AT invoked. pos = 104
Annotation invoked. pos = 104
star[false]: pos = 104, val = null
IMPLICIT invoked. pos = 104
LAZY invoked. pos = 104
VAL invoked. pos = 104
VAR invoked. pos = 104
PatVarDef invoked. pos = 104
DEF invoked. pos = 104
TYPE invoked. pos = 104
CASE invoked. pos = 104
OBJECT invoked. pos = 104
TmplDef invoked. pos = 104
Def invoked. pos = 104
star[false]: pos = 104, val = null
LocalModifier invoked. pos = 104
star[false]: pos = 104, val = null
IF invoked. pos = 104
WHILE invoked. pos = 104
OPPAREN invoked. pos = 104
NEW invoked. pos = 104
OPBRACE invoked. pos = 104
BlockExpr invoked. pos = 104
EmptyElemTag invoked. pos = 104
STag invoked. pos = 104
Element invoked. pos = 104
CDStart invoked. pos = 104
CDSect invoked. pos = 104
PI invoked. pos = 104
Comment invoked. pos = 104
XmlContent invoked. pos = 104
XmlExpr invoked. pos = 104
upper invoked. pos = 104
lower invoked. pos = 104
varid invoked. pos = 104
opchar invoked. pos = 104
star[true]: pos = -1, val = null
op invoked. pos = 104
plainid invoked. pos = 104
id invoked. pos = 104
THIS invoked. pos = 104
StableId invoked. pos = 104
Path invoked. pos = 104
HYPHEN invoked. pos = 104
nonZeroDigit invoked. pos = 104
decimalNumeral invoked. pos = 104
hexNumeral invoked. pos = 104
octalNumeral invoked. pos = 104
integerLiteral invoked. pos = 104
digit invoked. pos = 104
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 104
booleanLiteral invoked. pos = 104
characterLiteral invoked. pos = 104
stringLiteral invoked. pos = 104
symbolLiteral invoked. pos = 104
Literal invoked. pos = 104
UNDER invoked. pos = 104
SimpleExpr1 invoked. pos = 104
PLUS invoked. pos = 104
SimpleExpr invoked. pos = 104
PrefixExpr invoked. pos = 104
InfixExpr invoked. pos = 104
PostfixExpr invoked. pos = 104
Expr1 invoked. pos = 104
Empty invoked. pos = 104
BlockStat invoked. pos = 104
SEMICOLON invoked. pos = 104
whitespace invoked. pos = 105
singleLineComment invoked. pos = 105
multiLineComment invoked. pos = 105
comment invoked. pos = 105
star[false]: pos = 105, val = null
__ invoked. pos = 105
nl invoked. pos = 104
---ret = 105
---val = "\n"
whitespace invoked. pos = 106
---ret = 107
---val = " "
whitespace invoked. pos = 107
---ret = 108
---val = " "
whitespace invoked. pos = 108
---ret = 109
---val = " "
whitespace invoked. pos = 109
---ret = 110
---val = " "
whitespace invoked. pos = 110
singleLineComment invoked. pos = 110
multiLineComment invoked. pos = 110
comment invoked. pos = 110
star[false]: pos = 110, val =  , , , 
__ invoked. pos = 106
---ret = 110
---val = [" "," "," "," "]
nl invoked. pos = 105
---ret = 110
---val = ["\n",[" "," "," "," "]]
nl invoked. pos = 110
star[true]: pos = 110, val = 
,
, , , , 
semi invoked. pos = 104
---ret = 110
---val = ["\n",["\n",[" "," "," "," "]]]
Import invoked. pos = 110
AT invoked. pos = 110
Annotation invoked. pos = 110
star[false]: pos = 110, val = null
IMPLICIT invoked. pos = 110
LAZY invoked. pos = 110
whitespace invoked. pos = 113
---ret = 114
---val = " "
whitespace invoked. pos = 114
singleLineComment invoked. pos = 114
multiLineComment invoked. pos = 114
comment invoked. pos = 114
star[false]: pos = 114, val =  
__ invoked. pos = 113
---ret = 114
---val = " "
VAL invoked. pos = 110
---ret = 114
---val = ["val"," "]
lower invoked. pos = 114
---ret = 115
---val = "m"
upper invoked. pos = 115
lower invoked. pos = 115
letter invoked. pos = 115
nonZeroDigit invoked. pos = 115
digit invoked. pos = 115
star[false]: pos = 115, val = null
whitespace invoked. pos = 115
---ret = 116
---val = " "
whitespace invoked. pos = 116
singleLineComment invoked. pos = 116
multiLineComment invoked. pos = 116
comment invoked. pos = 116
star[false]: pos = 116, val =  
__ invoked. pos = 115
---ret = 116
---val = " "
idrest invoked. pos = 115
---ret = 116
---val = " "
varid invoked. pos = 114
---ret = 116
---val = ["m"," "]
AT invoked. pos = 116
Pattern2 invoked. pos = 114
---ret = 116
---val = ["m"," "]
COMMA invoked. pos = 116
star[false]: pos = 116, val = null
COLON invoked. pos = 116
whitespace invoked. pos = 117
---ret = 118
---val = " "
whitespace invoked. pos = 118
singleLineComment invoked. pos = 118
multiLineComment invoked. pos = 118
comment invoked. pos = 118
star[false]: pos = 118, val =  
__ invoked. pos = 117
---ret = 118
---val = " "
EQUAL invoked. pos = 116
---ret = 118
---val = ["="," "]
OPPAREN invoked. pos = 118
Bindings invoked. pos = 118
IMPLICIT invoked. pos = 118
upper invoked. pos = 118
lower invoked. pos = 118
---ret = 119
---val = "s"
upper invoked. pos = 119
lower invoked. pos = 119
---ret = 120
---val = "c"
letter invoked. pos = 119
---ret = 120
---val = "c"
upper invoked. pos = 120
lower invoked. pos = 120
letter invoked. pos = 120
nonZeroDigit invoked. pos = 120
digit invoked. pos = 120
star[false]: pos = 120, val = c
whitespace invoked. pos = 120
singleLineComment invoked. pos = 120
multiLineComment invoked. pos = 120
comment invoked. pos = 120
star[false]: pos = 120, val = null
__ invoked. pos = 120
idrest invoked. pos = 119
---ret = 120
---val = "c"
varid invoked. pos = 118
---ret = 120
---val = ["s","c"]
plainid invoked. pos = 118
---ret = 120
---val = ["s","c"]
id invoked. pos = 118
---ret = 120
---val = ["s","c"]
ARROW invoked. pos = 120
IF invoked. pos = 118
WHILE invoked. pos = 118
NEW invoked. pos = 118
OPBRACE invoked. pos = 118
BlockExpr invoked. pos = 118
EmptyElemTag invoked. pos = 118
STag invoked. pos = 118
Element invoked. pos = 118
CDStart invoked. pos = 118
CDSect invoked. pos = 118
PI invoked. pos = 118
Comment invoked. pos = 118
XmlContent invoked. pos = 118
XmlExpr invoked. pos = 118
whitespace invoked. pos = 121
singleLineComment invoked. pos = 121
multiLineComment invoked. pos = 121
comment invoked. pos = 121
star[false]: pos = 121, val = null
__ invoked. pos = 121
DOT invoked. pos = 120
---ret = 121
---val = "."
upper invoked. pos = 121
lower invoked. pos = 121
---ret = 122
---val = "n"
upper invoked. pos = 122
lower invoked. pos = 122
---ret = 123
---val = "e"
letter invoked. pos = 122
---ret = 123
---val = "e"
upper invoked. pos = 123
lower invoked. pos = 123
---ret = 124
---val = "x"
letter invoked. pos = 123
---ret = 124
---val = "x"
upper invoked. pos = 124
lower invoked. pos = 124
---ret = 125
---val = "t"
letter invoked. pos = 124
---ret = 125
---val = "t"
upper invoked. pos = 125
lower invoked. pos = 125
letter invoked. pos = 125
nonZeroDigit invoked. pos = 125
digit invoked. pos = 125
star[false]: pos = 125, val = e,x,t
whitespace invoked. pos = 125
singleLineComment invoked. pos = 125
multiLineComment invoked. pos = 125
comment invoked. pos = 125
star[false]: pos = 125, val = null
__ invoked. pos = 125
idrest invoked. pos = 122
---ret = 125
---val = ["e","x","t"]
varid invoked. pos = 121
---ret = 125
---val = ["n",["e","x","t"]]
plainid invoked. pos = 121
---ret = 125
---val = ["n",["e","x","t"]]
id invoked. pos = 121
---ret = 125
---val = ["n",["e","x","t"]]
DOT invoked. pos = 125
Empty invoked. pos = 125
_StableId invoked. pos = 125
_StableId invoked. pos = 120
---ret = 125
---val = [".",["n",["e","x","t"]]]
StableId invoked. pos = 118
---ret = 125
---val = [["s","c"],[".",["n",["e","x","t"]]]]
Path invoked. pos = 118
---ret = 125
---val = [["s","c"],[".",["n",["e","x","t"]]]]
UNDER invoked. pos = 125
OPBRACKET invoked. pos = 125
TypeArgs invoked. pos = 125
whitespace invoked. pos = 126
singleLineComment invoked. pos = 126
multiLineComment invoked. pos = 126
comment invoked. pos = 126
star[false]: pos = 126, val = null
__ invoked. pos = 126
OPPAREN invoked. pos = 125
---ret = 126
---val = "("
OPPAREN invoked. pos = 126
Bindings invoked. pos = 126
IMPLICIT invoked. pos = 126
upper invoked. pos = 126
lower invoked. pos = 126
varid invoked. pos = 126
opchar invoked. pos = 126
star[true]: pos = -1, val = null
op invoked. pos = 126
plainid invoked. pos = 126
id invoked. pos = 126
UNDER invoked. pos = 126
IF invoked. pos = 126
WHILE invoked. pos = 126
NEW invoked. pos = 126
OPBRACE invoked. pos = 126
BlockExpr invoked. pos = 126
EmptyElemTag invoked. pos = 126
STag invoked. pos = 126
Element invoked. pos = 126
CDStart invoked. pos = 126
CDSect invoked. pos = 126
PI invoked. pos = 126
Comment invoked. pos = 126
XmlContent invoked. pos = 126
XmlExpr invoked. pos = 126
THIS invoked. pos = 126
StableId invoked. pos = 126
Path invoked. pos = 126
HYPHEN invoked. pos = 126
nonZeroDigit invoked. pos = 126
decimalNumeral invoked. pos = 126
hexNumeral invoked. pos = 126
octalNumeral invoked. pos = 126
integerLiteral invoked. pos = 126
digit invoked. pos = 126
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 126
booleanLiteral invoked. pos = 126
characterLiteral invoked. pos = 126
stringLiteral invoked. pos = 126
symbolLiteral invoked. pos = 126
Literal invoked. pos = 126
SimpleExpr1 invoked. pos = 126
PLUS invoked. pos = 126
SimpleExpr invoked. pos = 126
PrefixExpr invoked. pos = 126
InfixExpr invoked. pos = 126
PostfixExpr invoked. pos = 126
Expr1 invoked. pos = 126
Expr invoked. pos = 126
Exprs invoked. pos = 126
whitespace invoked. pos = 127
singleLineComment invoked. pos = 127
multiLineComment invoked. pos = 127
comment invoked. pos = 127
star[false]: pos = 127, val = null
__ invoked. pos = 127
CLPAREN invoked. pos = 126
---ret = 127
---val = ")"
ArgumentExprs invoked. pos = 125
---ret = 127
---val = ["(",")"]
UNDER invoked. pos = 127
whitespace invoked. pos = 128
singleLineComment invoked. pos = 128
multiLineComment invoked. pos = 128
comment invoked. pos = 128
star[false]: pos = 128, val = null
__ invoked. pos = 128
DOT invoked. pos = 127
---ret = 128
---val = "."
upper invoked. pos = 128
lower invoked. pos = 128
---ret = 129
---val = "t"
upper invoked. pos = 129
lower invoked. pos = 129
---ret = 130
---val = "o"
letter invoked. pos = 129
---ret = 130
---val = "o"
upper invoked. pos = 130
---ret = 131
---val = "C"
letter invoked. pos = 130
---ret = 131
---val = "C"
upper invoked. pos = 131
lower invoked. pos = 131
---ret = 132
---val = "h"
letter invoked. pos = 131
---ret = 132
---val = "h"
upper invoked. pos = 132
lower invoked. pos = 132
---ret = 133
---val = "a"
letter invoked. pos = 132
---ret = 133
---val = "a"
upper invoked. pos = 133
lower invoked. pos = 133
---ret = 134
---val = "r"
letter invoked. pos = 133
---ret = 134
---val = "r"
upper invoked. pos = 134
---ret = 135
---val = "A"
letter invoked. pos = 134
---ret = 135
---val = "A"
upper invoked. pos = 135
lower invoked. pos = 135
---ret = 136
---val = "r"
letter invoked. pos = 135
---ret = 136
---val = "r"
upper invoked. pos = 136
lower invoked. pos = 136
---ret = 137
---val = "r"
letter invoked. pos = 136
---ret = 137
---val = "r"
upper invoked. pos = 137
lower invoked. pos = 137
---ret = 138
---val = "a"
letter invoked. pos = 137
---ret = 138
---val = "a"
upper invoked. pos = 138
lower invoked. pos = 138
---ret = 139
---val = "y"
letter invoked. pos = 138
---ret = 139
---val = "y"
upper invoked. pos = 139
lower invoked. pos = 139
letter invoked. pos = 139
nonZeroDigit invoked. pos = 139
digit invoked. pos = 139
star[false]: pos = 139, val = o,C,h,a,r,A,r,r,a,y
whitespace invoked. pos = 139
singleLineComment invoked. pos = 139
multiLineComment invoked. pos = 139
comment invoked. pos = 139
star[false]: pos = 139, val = null
__ invoked. pos = 139
idrest invoked. pos = 129
---ret = 139
---val = ["o","C","h","a","r","A","r","r","a","y"]
varid invoked. pos = 128
---ret = 139
---val = ["t",["o","C","h","a","r","A","r","r","a","y"]]
plainid invoked. pos = 128
---ret = 139
---val = ["t",["o","C","h","a","r","A","r","r","a","y"]]
id invoked. pos = 128
---ret = 139
---val = ["t",["o","C","h","a","r","A","r","r","a","y"]]
UNDER invoked. pos = 139
DOT invoked. pos = 139
OPBRACKET invoked. pos = 139
TypeArgs invoked. pos = 139
whitespace invoked. pos = 140
singleLineComment invoked. pos = 140
multiLineComment invoked. pos = 140
comment invoked. pos = 140
star[false]: pos = 140, val = null
__ invoked. pos = 140
OPPAREN invoked. pos = 139
---ret = 140
---val = "("
OPPAREN invoked. pos = 140
Bindings invoked. pos = 140
IMPLICIT invoked. pos = 140
upper invoked. pos = 140
lower invoked. pos = 140
varid invoked. pos = 140
opchar invoked. pos = 140
star[true]: pos = -1, val = null
op invoked. pos = 140
plainid invoked. pos = 140
id invoked. pos = 140
UNDER invoked. pos = 140
IF invoked. pos = 140
WHILE invoked. pos = 140
NEW invoked. pos = 140
OPBRACE invoked. pos = 140
BlockExpr invoked. pos = 140
EmptyElemTag invoked. pos = 140
STag invoked. pos = 140
Element invoked. pos = 140
CDStart invoked. pos = 140
CDSect invoked. pos = 140
PI invoked. pos = 140
Comment invoked. pos = 140
XmlContent invoked. pos = 140
XmlExpr invoked. pos = 140
THIS invoked. pos = 140
StableId invoked. pos = 140
Path invoked. pos = 140
HYPHEN invoked. pos = 140
nonZeroDigit invoked. pos = 140
decimalNumeral invoked. pos = 140
hexNumeral invoked. pos = 140
octalNumeral invoked. pos = 140
integerLiteral invoked. pos = 140
digit invoked. pos = 140
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 140
booleanLiteral invoked. pos = 140
characterLiteral invoked. pos = 140
stringLiteral invoked. pos = 140
symbolLiteral invoked. pos = 140
Literal invoked. pos = 140
SimpleExpr1 invoked. pos = 140
PLUS invoked. pos = 140
SimpleExpr invoked. pos = 140
PrefixExpr invoked. pos = 140
InfixExpr invoked. pos = 140
PostfixExpr invoked. pos = 140
Expr1 invoked. pos = 140
Expr invoked. pos = 140
Exprs invoked. pos = 140
whitespace invoked. pos = 141
singleLineComment invoked. pos = 141
multiLineComment invoked. pos = 141
comment invoked. pos = 141
star[false]: pos = 141, val = null
__ invoked. pos = 141
CLPAREN invoked. pos = 140
---ret = 141
---val = ")"
ArgumentExprs invoked. pos = 139
---ret = 141
---val = ["(",")"]
UNDER invoked. pos = 141
DOT invoked. pos = 141
OPBRACKET invoked. pos = 141
TypeArgs invoked. pos = 141
OPPAREN invoked. pos = 141
nl invoked. pos = 141
OPBRACE invoked. pos = 141
BlockExpr invoked. pos = 141
ArgumentExprs invoked. pos = 141
Empty invoked. pos = 141
_SimpleExpr1 invoked. pos = 141
_SimpleExpr1 invoked. pos = 139
---ret = 141
---val = ["(",")"]
_SimpleExpr1 invoked. pos = 127
---ret = 141
---val = [".",["t",["o","C","h","a","r","A","r","r","a","y"]],["(",")"]]
_SimpleExpr1 invoked. pos = 125
---ret = 141
---val = [["(",")"],[".",["t",["o","C","h","a","r","A","r","r","a","y"]],["(",")"]]]
SimpleExpr1 invoked. pos = 118
---ret = 141
---val = [[["s","c"],[".",["n",["e","x","t"]]]],[["(",")"],[".",["t",["o","C","h","a","r","A","r","r","a","y"]],["(",")"]]]]
HYPHEN invoked. pos = 118
PLUS invoked. pos = 118
SimpleExpr invoked. pos = 118
---ret = 141
---val = [[["s","c"],[".",["n",["e","x","t"]]]],[["(",")"],[".",["t",["o","C","h","a","r","A","r","r","a","y"]],["(",")"]]]]
PrefixExpr invoked. pos = 118
---ret = 141
---val = [[["s","c"],[".",["n",["e","x","t"]]]],[["(",")"],[".",["t",["o","C","h","a","r","A","r","r","a","y"]],["(",")"]]]]
upper invoked. pos = 141
lower invoked. pos = 141
varid invoked. pos = 141
opchar invoked. pos = 141
star[true]: pos = -1, val = null
op invoked. pos = 141
plainid invoked. pos = 141
id invoked. pos = 141
_InfixExpr invoked. pos = 141
InfixExpr invoked. pos = 118
---ret = 141
---val = [[["s","c"],[".",["n",["e","x","t"]]]],[["(",")"],[".",["t",["o","C","h","a","r","A","r","r","a","y"]],["(",")"]]]]
PostfixExpr invoked. pos = 118
---ret = 141
---val = [[["s","c"],[".",["n",["e","x","t"]]]],[["(",")"],[".",["t",["o","C","h","a","r","A","r","r","a","y"]],["(",")"]]]]
COLON invoked. pos = 141
Ascription invoked. pos = 141
Expr1 invoked. pos = 118
---ret = 141
---val = [[["s","c"],[".",["n",["e","x","t"]]]],[["(",")"],[".",["t",["o","C","h","a","r","A","r","r","a","y"]],["(",")"]]]]
Expr invoked. pos = 118
---ret = 141
---val = [[["s","c"],[".",["n",["e","x","t"]]]],[["(",")"],[".",["t",["o","C","h","a","r","A","r","r","a","y"]],["(",")"]]]]
PatDef invoked. pos = 114
---ret = 141
---val = [["m"," "],["="," "],[[["s","c"],[".",["n",["e","x","t"]]]],[["(",")"],[".",["t",["o","C","h","a","r","A","r","r","a","y"]],["(",")"]]]]]
PatVarDef invoked. pos = 110
---ret = 141
---val = [["val"," "],[["m"," "],["="," "],[[["s","c"],[".",["n",["e","x","t"]]]],[["(",")"],[".",["t",["o","C","h","a","r","A","r","r","a","y"]],["(",")"]]]]]]
Def invoked. pos = 110
---ret = 141
---val = [["val"," "],[["m"," "],["="," "],[[["s","c"],[".",["n",["e","x","t"]]]],[["(",")"],[".",["t",["o","C","h","a","r","A","r","r","a","y"]],["(",")"]]]]]]
BlockStat invoked. pos = 110
---ret = 141
---val = [["val"," "],[["m"," "],["="," "],[[["s","c"],[".",["n",["e","x","t"]]]],[["(",")"],[".",["t",["o","C","h","a","r","A","r","r","a","y"]],["(",")"]]]]]]
whitespace invoked. pos = 142
singleLineComment invoked. pos = 142
multiLineComment invoked. pos = 142
comment invoked. pos = 142
star[false]: pos = 142, val = null
__ invoked. pos = 142
SEMICOLON invoked. pos = 141
---ret = 142
---val = ";"
semi invoked. pos = 141
---ret = 142
---val = ";"
Import invoked. pos = 142
AT invoked. pos = 142
Annotation invoked. pos = 142
star[false]: pos = 142, val = null
IMPLICIT invoked. pos = 142
LAZY invoked. pos = 142
VAL invoked. pos = 142
VAR invoked. pos = 142
PatVarDef invoked. pos = 142
DEF invoked. pos = 142
TYPE invoked. pos = 142
CASE invoked. pos = 142
OBJECT invoked. pos = 142
TmplDef invoked. pos = 142
Def invoked. pos = 142
star[false]: pos = 142, val = null
LocalModifier invoked. pos = 142
star[false]: pos = 142, val = null
IF invoked. pos = 142
WHILE invoked. pos = 142
OPPAREN invoked. pos = 142
NEW invoked. pos = 142
OPBRACE invoked. pos = 142
BlockExpr invoked. pos = 142
EmptyElemTag invoked. pos = 142
STag invoked. pos = 142
Element invoked. pos = 142
CDStart invoked. pos = 142
CDSect invoked. pos = 142
PI invoked. pos = 142
Comment invoked. pos = 142
XmlContent invoked. pos = 142
XmlExpr invoked. pos = 142
upper invoked. pos = 142
lower invoked. pos = 142
varid invoked. pos = 142
opchar invoked. pos = 142
star[true]: pos = -1, val = null
op invoked. pos = 142
plainid invoked. pos = 142
id invoked. pos = 142
THIS invoked. pos = 142
StableId invoked. pos = 142
Path invoked. pos = 142
HYPHEN invoked. pos = 142
nonZeroDigit invoked. pos = 142
decimalNumeral invoked. pos = 142
hexNumeral invoked. pos = 142
octalNumeral invoked. pos = 142
integerLiteral invoked. pos = 142
digit invoked. pos = 142
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 142
booleanLiteral invoked. pos = 142
characterLiteral invoked. pos = 142
stringLiteral invoked. pos = 142
symbolLiteral invoked. pos = 142
Literal invoked. pos = 142
UNDER invoked. pos = 142
SimpleExpr1 invoked. pos = 142
PLUS invoked. pos = 142
SimpleExpr invoked. pos = 142
PrefixExpr invoked. pos = 142
InfixExpr invoked. pos = 142
PostfixExpr invoked. pos = 142
Expr1 invoked. pos = 142
Empty invoked. pos = 142
BlockStat invoked. pos = 142
SEMICOLON invoked. pos = 142
whitespace invoked. pos = 143
---ret = 144
---val = " "
whitespace invoked. pos = 144
---ret = 145
---val = " "
whitespace invoked. pos = 145
---ret = 146
---val = " "
whitespace invoked. pos = 146
---ret = 147
---val = " "
whitespace invoked. pos = 147
singleLineComment invoked. pos = 147
multiLineComment invoked. pos = 147
comment invoked. pos = 147
star[false]: pos = 147, val =  , , , 
__ invoked. pos = 143
---ret = 147
---val = [" "," "," "," "]
nl invoked. pos = 142
---ret = 147
---val = ["\n",[" "," "," "," "]]
nl invoked. pos = 147
star[true]: pos = 147, val = 
, , , , 
semi invoked. pos = 142
---ret = 147
---val = ["\n",[" "," "," "," "]]
Import invoked. pos = 147
AT invoked. pos = 147
Annotation invoked. pos = 147
star[false]: pos = 147, val = null
IMPLICIT invoked. pos = 147
LAZY invoked. pos = 147
whitespace invoked. pos = 150
---ret = 151
---val = " "
whitespace invoked. pos = 151
singleLineComment invoked. pos = 151
multiLineComment invoked. pos = 151
comment invoked. pos = 151
star[false]: pos = 151, val =  
__ invoked. pos = 150
---ret = 151
---val = " "
VAL invoked. pos = 147
---ret = 151
---val = ["val"," "]
lower invoked. pos = 151
---ret = 152
---val = "s"
upper invoked. pos = 152
lower invoked. pos = 152
---ret = 153
---val = "c"
letter invoked. pos = 152
---ret = 153
---val = "c"
upper invoked. pos = 153
lower invoked. pos = 153
letter invoked. pos = 153
nonZeroDigit invoked. pos = 153
digit invoked. pos = 153
star[false]: pos = 153, val = c
whitespace invoked. pos = 153
---ret = 154
---val = " "
whitespace invoked. pos = 154
singleLineComment invoked. pos = 154
multiLineComment invoked. pos = 154
comment invoked. pos = 154
star[false]: pos = 154, val =  
__ invoked. pos = 153
---ret = 154
---val = " "
idrest invoked. pos = 152
---ret = 154
---val = ["c"," "]
varid invoked. pos = 151
---ret = 154
---val = ["s",["c"," "]]
AT invoked. pos = 154
Pattern2 invoked. pos = 151
---ret = 154
---val = ["s",["c"," "]]
COMMA invoked. pos = 154
star[false]: pos = 154, val = null
COLON invoked. pos = 154
whitespace invoked. pos = 155
---ret = 156
---val = " "
whitespace invoked. pos = 156
singleLineComment invoked. pos = 156
multiLineComment invoked. pos = 156
comment invoked. pos = 156
star[false]: pos = 156, val =  
__ invoked. pos = 155
---ret = 156
---val = " "
EQUAL invoked. pos = 154
---ret = 156
---val = ["="," "]
OPPAREN invoked. pos = 156
Bindings invoked. pos = 156
IMPLICIT invoked. pos = 156
upper invoked. pos = 156
lower invoked. pos = 156
---ret = 157
---val = "n"
upper invoked. pos = 157
lower invoked. pos = 157
---ret = 158
---val = "e"
letter invoked. pos = 157
---ret = 158
---val = "e"
upper invoked. pos = 158
lower invoked. pos = 158
---ret = 159
---val = "w"
letter invoked. pos = 158
---ret = 159
---val = "w"
upper invoked. pos = 159
lower invoked. pos = 159
letter invoked. pos = 159
nonZeroDigit invoked. pos = 159
digit invoked. pos = 159
star[false]: pos = 159, val = e,w
whitespace invoked. pos = 159
---ret = 160
---val = " "
whitespace invoked. pos = 160
singleLineComment invoked. pos = 160
multiLineComment invoked. pos = 160
comment invoked. pos = 160
star[false]: pos = 160, val =  
__ invoked. pos = 159
---ret = 160
---val = " "
idrest invoked. pos = 157
---ret = 160
---val = [["e","w"]," "]
varid invoked. pos = 156
---ret = 160
---val = ["n",[["e","w"]," "]]
plainid invoked. pos = 156
---ret = 160
---val = ["n",[["e","w"]," "]]
id invoked. pos = 156
---ret = 160
---val = ["n",[["e","w"]," "]]
ARROW invoked. pos = 160
IF invoked. pos = 156
WHILE invoked. pos = 156
NEW invoked. pos = 156
---ret = 160
---val = ["new"," "]
OPBRACE invoked. pos = 160
EarlyDefs invoked. pos = 160
upper invoked. pos = 160
---ret = 161
---val = "S"
upper invoked. pos = 161
lower invoked. pos = 161
---ret = 162
---val = "c"
letter invoked. pos = 161
---ret = 162
---val = "c"
upper invoked. pos = 162
lower invoked. pos = 162
---ret = 163
---val = "a"
letter invoked. pos = 162
---ret = 163
---val = "a"
upper invoked. pos = 163
lower invoked. pos = 163
---ret = 164
---val = "n"
letter invoked. pos = 163
---ret = 164
---val = "n"
upper invoked. pos = 164
lower invoked. pos = 164
---ret = 165
---val = "n"
letter invoked. pos = 164
---ret = 165
---val = "n"
upper invoked. pos = 165
lower invoked. pos = 165
---ret = 166
---val = "e"
letter invoked. pos = 165
---ret = 166
---val = "e"
upper invoked. pos = 166
lower invoked. pos = 166
---ret = 167
---val = "r"
letter invoked. pos = 166
---ret = 167
---val = "r"
upper invoked. pos = 167
lower invoked. pos = 167
letter invoked. pos = 167
nonZeroDigit invoked. pos = 167
digit invoked. pos = 167
star[false]: pos = 167, val = c,a,n,n,e,r
whitespace invoked. pos = 167
singleLineComment invoked. pos = 167
multiLineComment invoked. pos = 167
comment invoked. pos = 167
star[false]: pos = 167, val = null
__ invoked. pos = 167
idrest invoked. pos = 161
---ret = 167
---val = ["c","a","n","n","e","r"]
plainid invoked. pos = 160
---ret = 167
---val = ["S",["c","a","n","n","e","r"]]
id invoked. pos = 160
---ret = 167
---val = ["S",["c","a","n","n","e","r"]]
DOT invoked. pos = 167
Empty invoked. pos = 167
_StableId invoked. pos = 167
StableId invoked. pos = 160
---ret = 167
---val = ["S",["c","a","n","n","e","r"]]
OPBRACKET invoked. pos = 167
TypeArgs invoked. pos = 167
_SimpleType invoked. pos = 167
SimpleType invoked. pos = 160
---ret = 167
---val = ["S",["c","a","n","n","e","r"]]
AT invoked. pos = 167
Annotation invoked. pos = 167
star[false]: pos = 167, val = null
AnnotType invoked. pos = 160
---ret = 167
---val = ["S",["c","a","n","n","e","r"]]
whitespace invoked. pos = 168
singleLineComment invoked. pos = 168
multiLineComment invoked. pos = 168
comment invoked. pos = 168
star[false]: pos = 168, val = null
__ invoked. pos = 168
OPPAREN invoked. pos = 167
---ret = 168
---val = "("
OPPAREN invoked. pos = 168
Bindings invoked. pos = 168
IMPLICIT invoked. pos = 168
upper invoked. pos = 168
---ret = 169
---val = "S"
upper invoked. pos = 169
lower invoked. pos = 169
---ret = 170
---val = "y"
letter invoked. pos = 169
---ret = 170
---val = "y"
upper invoked. pos = 170
lower invoked. pos = 170
---ret = 171
---val = "s"
letter invoked. pos = 170
---ret = 171
---val = "s"
upper invoked. pos = 171
lower invoked. pos = 171
---ret = 172
---val = "t"
letter invoked. pos = 171
---ret = 172
---val = "t"
upper invoked. pos = 172
lower invoked. pos = 172
---ret = 173
---val = "e"
letter invoked. pos = 172
---ret = 173
---val = "e"
upper invoked. pos = 173
lower invoked. pos = 173
---ret = 174
---val = "m"
letter invoked. pos = 173
---ret = 174
---val = "m"
upper invoked. pos = 174
lower invoked. pos = 174
letter invoked. pos = 174
nonZeroDigit invoked. pos = 174
digit invoked. pos = 174
star[false]: pos = 174, val = y,s,t,e,m
whitespace invoked. pos = 174
singleLineComment invoked. pos = 174
multiLineComment invoked. pos = 174
comment invoked. pos = 174
star[false]: pos = 174, val = null
__ invoked. pos = 174
idrest invoked. pos = 169
---ret = 174
---val = ["y","s","t","e","m"]
plainid invoked. pos = 168
---ret = 174
---val = ["S",["y","s","t","e","m"]]
id invoked. pos = 168
---ret = 174
---val = ["S",["y","s","t","e","m"]]
ARROW invoked. pos = 174
IF invoked. pos = 168
WHILE invoked. pos = 168
NEW invoked. pos = 168
OPBRACE invoked. pos = 168
BlockExpr invoked. pos = 168
EmptyElemTag invoked. pos = 168
STag invoked. pos = 168
Element invoked. pos = 168
CDStart invoked. pos = 168
CDSect invoked. pos = 168
PI invoked. pos = 168
Comment invoked. pos = 168
XmlContent invoked. pos = 168
XmlExpr invoked. pos = 168
whitespace invoked. pos = 175
singleLineComment invoked. pos = 175
multiLineComment invoked. pos = 175
comment invoked. pos = 175
star[false]: pos = 175, val = null
__ invoked. pos = 175
DOT invoked. pos = 174
---ret = 175
---val = "."
upper invoked. pos = 175
lower invoked. pos = 175
---ret = 176
---val = "i"
upper invoked. pos = 176
lower invoked. pos = 176
---ret = 177
---val = "n"
letter invoked. pos = 176
---ret = 177
---val = "n"
upper invoked. pos = 177
lower invoked. pos = 177
letter invoked. pos = 177
nonZeroDigit invoked. pos = 177
digit invoked. pos = 177
star[false]: pos = 177, val = n
whitespace invoked. pos = 177
singleLineComment invoked. pos = 177
multiLineComment invoked. pos = 177
comment invoked. pos = 177
star[false]: pos = 177, val = null
__ invoked. pos = 177
idrest invoked. pos = 176
---ret = 177
---val = "n"
varid invoked. pos = 175
---ret = 177
---val = ["i","n"]
plainid invoked. pos = 175
---ret = 177
---val = ["i","n"]
id invoked. pos = 175
---ret = 177
---val = ["i","n"]
DOT invoked. pos = 177
Empty invoked. pos = 177
_StableId invoked. pos = 177
_StableId invoked. pos = 174
---ret = 177
---val = [".",["i","n"]]
StableId invoked. pos = 168
---ret = 177
---val = [["S",["y","s","t","e","m"]],[".",["i","n"]]]
Path invoked. pos = 168
---ret = 177
---val = [["S",["y","s","t","e","m"]],[".",["i","n"]]]
UNDER invoked. pos = 177
OPBRACKET invoked. pos = 177
TypeArgs invoked. pos = 177
OPPAREN invoked. pos = 177
nl invoked. pos = 177
OPBRACE invoked. pos = 177
BlockExpr invoked. pos = 177
ArgumentExprs invoked. pos = 177
_SimpleExpr1 invoked. pos = 177
SimpleExpr1 invoked. pos = 168
---ret = 177
---val = [["S",["y","s","t","e","m"]],[".",["i","n"]]]
HYPHEN invoked. pos = 168
PLUS invoked. pos = 168
SimpleExpr invoked. pos = 168
---ret = 177
---val = [["S",["y","s","t","e","m"]],[".",["i","n"]]]
PrefixExpr invoked. pos = 168
---ret = 177
---val = [["S",["y","s","t","e","m"]],[".",["i","n"]]]
varid invoked. pos = 177
opchar invoked. pos = 177
star[true]: pos = -1, val = null
op invoked. pos = 177
plainid invoked. pos = 177
id invoked. pos = 177
_InfixExpr invoked. pos = 177
InfixExpr invoked. pos = 168
---ret = 177
---val = [["S",["y","s","t","e","m"]],[".",["i","n"]]]
PostfixExpr invoked. pos = 168
---ret = 177
---val = [["S",["y","s","t","e","m"]],[".",["i","n"]]]
COLON invoked. pos = 177
Ascription invoked. pos = 177
Expr1 invoked. pos = 168
---ret = 177
---val = [["S",["y","s","t","e","m"]],[".",["i","n"]]]
Expr invoked. pos = 168
---ret = 177
---val = [["S",["y","s","t","e","m"]],[".",["i","n"]]]
COMMA invoked. pos = 177
star[false]: pos = 177, val = null
Exprs invoked. pos = 168
---ret = 177
---val = [["S",["y","s","t","e","m"]],[".",["i","n"]]]
whitespace invoked. pos = 178
singleLineComment invoked. pos = 178
multiLineComment invoked. pos = 178
comment invoked. pos = 178
star[false]: pos = 178, val = null
__ invoked. pos = 178
CLPAREN invoked. pos = 177
---ret = 178
---val = ")"
ArgumentExprs invoked. pos = 167
---ret = 178
---val = ["(",[["S",["y","s","t","e","m"]],[".",["i","n"]]],")"]
OPPAREN invoked. pos = 178
nl invoked. pos = 178
OPBRACE invoked. pos = 178
BlockExpr invoked. pos = 178
ArgumentExprs invoked. pos = 178
star[false]: pos = 178, val = (,S,y,s,t,e,m,.,i,n,)
Constr invoked. pos = 160
---ret = 178
---val = [["S",["c","a","n","n","e","r"]],["(",[["S",["y","s","t","e","m"]],[".",["i","n"]]],")"]]
WITH invoked. pos = 178
star[false]: pos = 178, val = null
ClassParents invoked. pos = 160
---ret = 178
---val = [["S",["c","a","n","n","e","r"]],["(",[["S",["y","s","t","e","m"]],[".",["i","n"]]],")"]]
TemplateBody invoked. pos = 178
ClassTemplate invoked. pos = 160
---ret = 178
---val = [["S",["c","a","n","n","e","r"]],["(",[["S",["y","s","t","e","m"]],[".",["i","n"]]],")"]]
DOT invoked. pos = 178
OPBRACE invoked. pos = 156
BlockExpr invoked. pos = 156
OPBRACKET invoked. pos = 178
TypeArgs invoked. pos = 178
EmptyElemTag invoked. pos = 156
STag invoked. pos = 156
Element invoked. pos = 156
CDStart invoked. pos = 156
CDSect invoked. pos = 156
PI invoked. pos = 156
Comment invoked. pos = 156
XmlContent invoked. pos = 156
XmlExpr invoked. pos = 156
DOT invoked. pos = 160
Empty invoked. pos = 160
_StableId invoked. pos = 160
StableId invoked. pos = 156
---ret = 160
---val = ["n",[["e","w"]," "]]
Path invoked. pos = 156
---ret = 160
---val = ["n",[["e","w"]," "]]
UNDER invoked. pos = 160
OPBRACKET invoked. pos = 160
TypeArgs invoked. pos = 160
OPPAREN invoked. pos = 160
nl invoked. pos = 160
BlockExpr invoked. pos = 160
ArgumentExprs invoked. pos = 160
_SimpleExpr1 invoked. pos = 160
SimpleExpr1 invoked. pos = 156
---ret = 160
---val = ["n",[["e","w"]," "]]
HYPHEN invoked. pos = 156
PLUS invoked. pos = 156
SimpleExpr invoked. pos = 156
---ret = 178
---val = [["new"," "],[["S",["c","a","n","n","e","r"]],["(",[["S",["y","s","t","e","m"]],[".",["i","n"]]],")"]]]
PrefixExpr invoked. pos = 156
---ret = 178
---val = [["new"," "],[["S",["c","a","n","n","e","r"]],["(",[["S",["y","s","t","e","m"]],[".",["i","n"]]],")"]]]
upper invoked. pos = 178
lower invoked. pos = 178
varid invoked. pos = 178
opchar invoked. pos = 178
star[true]: pos = -1, val = null
op invoked. pos = 178
plainid invoked. pos = 178
id invoked. pos = 178
Empty invoked. pos = 178
_InfixExpr invoked. pos = 178
InfixExpr invoked. pos = 156
---ret = 178
---val = [["new"," "],[["S",["c","a","n","n","e","r"]],["(",[["S",["y","s","t","e","m"]],[".",["i","n"]]],")"]]]
PostfixExpr invoked. pos = 156
---ret = 178
---val = [["new"," "],[["S",["c","a","n","n","e","r"]],["(",[["S",["y","s","t","e","m"]],[".",["i","n"]]],")"]]]
COLON invoked. pos = 178
Ascription invoked. pos = 178
Expr1 invoked. pos = 156
---ret = 178
---val = [["new"," "],[["S",["c","a","n","n","e","r"]],["(",[["S",["y","s","t","e","m"]],[".",["i","n"]]],")"]]]
Expr invoked. pos = 156
---ret = 178
---val = [["new"," "],[["S",["c","a","n","n","e","r"]],["(",[["S",["y","s","t","e","m"]],[".",["i","n"]]],")"]]]
PatDef invoked. pos = 151
---ret = 178
---val = [["s",["c"," "]],["="," "],[["new"," "],[["S",["c","a","n","n","e","r"]],["(",[["S",["y","s","t","e","m"]],[".",["i","n"]]],")"]]]]
PatVarDef invoked. pos = 147
---ret = 178
---val = [["val"," "],[["s",["c"," "]],["="," "],[["new"," "],[["S",["c","a","n","n","e","r"]],["(",[["S",["y","s","t","e","m"]],[".",["i","n"]]],")"]]]]]
Def invoked. pos = 147
---ret = 178
---val = [["val"," "],[["s",["c"," "]],["="," "],[["new"," "],[["S",["c","a","n","n","e","r"]],["(",[["S",["y","s","t","e","m"]],[".",["i","n"]]],")"]]]]]
BlockStat invoked. pos = 147
---ret = 178
---val = [["val"," "],[["s",["c"," "]],["="," "],[["new"," "],[["S",["c","a","n","n","e","r"]],["(",[["S",["y","s","t","e","m"]],[".",["i","n"]]],")"]]]]]
whitespace invoked. pos = 179
singleLineComment invoked. pos = 179
multiLineComment invoked. pos = 179
comment invoked. pos = 179
star[false]: pos = 179, val = null
__ invoked. pos = 179
SEMICOLON invoked. pos = 178
---ret = 179
---val = ";"
semi invoked. pos = 178
---ret = 179
---val = ";"
Import invoked. pos = 179
AT invoked. pos = 179
Annotation invoked. pos = 179
star[false]: pos = 179, val = null
IMPLICIT invoked. pos = 179
LAZY invoked. pos = 179
VAL invoked. pos = 179
VAR invoked. pos = 179
PatVarDef invoked. pos = 179
DEF invoked. pos = 179
TYPE invoked. pos = 179
CASE invoked. pos = 179
OBJECT invoked. pos = 179
TmplDef invoked. pos = 179
Def invoked. pos = 179
star[false]: pos = 179, val = null
LocalModifier invoked. pos = 179
star[false]: pos = 179, val = null
IF invoked. pos = 179
WHILE invoked. pos = 179
OPPAREN invoked. pos = 179
NEW invoked. pos = 179
OPBRACE invoked. pos = 179
BlockExpr invoked. pos = 179
EmptyElemTag invoked. pos = 179
STag invoked. pos = 179
Element invoked. pos = 179
CDStart invoked. pos = 179
CDSect invoked. pos = 179
PI invoked. pos = 179
Comment invoked. pos = 179
XmlContent invoked. pos = 179
XmlExpr invoked. pos = 179
upper invoked. pos = 179
lower invoked. pos = 179
varid invoked. pos = 179
opchar invoked. pos = 179
star[true]: pos = -1, val = null
op invoked. pos = 179
plainid invoked. pos = 179
id invoked. pos = 179
THIS invoked. pos = 179
StableId invoked. pos = 179
Path invoked. pos = 179
HYPHEN invoked. pos = 179
nonZeroDigit invoked. pos = 179
decimalNumeral invoked. pos = 179
hexNumeral invoked. pos = 179
octalNumeral invoked. pos = 179
integerLiteral invoked. pos = 179
digit invoked. pos = 179
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 179
booleanLiteral invoked. pos = 179
characterLiteral invoked. pos = 179
stringLiteral invoked. pos = 179
symbolLiteral invoked. pos = 179
Literal invoked. pos = 179
UNDER invoked. pos = 179
SimpleExpr1 invoked. pos = 179
PLUS invoked. pos = 179
SimpleExpr invoked. pos = 179
PrefixExpr invoked. pos = 179
InfixExpr invoked. pos = 179
PostfixExpr invoked. pos = 179
Expr1 invoked. pos = 179
Empty invoked. pos = 179
BlockStat invoked. pos = 179
SEMICOLON invoked. pos = 179
whitespace invoked. pos = 180
---ret = 181
---val = " "
whitespace invoked. pos = 181
---ret = 182
---val = " "
whitespace invoked. pos = 182
---ret = 183
---val = " "
whitespace invoked. pos = 183
---ret = 184
---val = " "
whitespace invoked. pos = 184
nl invoked. pos = 186
nl invoked. pos = 187
nl invoked. pos = 188
nl invoked. pos = 189
nl invoked. pos = 190
nl invoked. pos = 191
nl invoked. pos = 192
nl invoked. pos = 193
nl invoked. pos = 194
nl invoked. pos = 195
nl invoked. pos = 196
nl invoked. pos = 197
nl invoked. pos = 198
nl invoked. pos = 199
nl invoked. pos = 200
nl invoked. pos = 201
nl invoked. pos = 202
nl invoked. pos = 203
nl invoked. pos = 204
nl invoked. pos = 205
nl invoked. pos = 206
nl invoked. pos = 207
whitespace invoked. pos = 209
---ret = 210
---val = " "
whitespace invoked. pos = 210
---ret = 211
---val = " "
whitespace invoked. pos = 211
---ret = 212
---val = " "
whitespace invoked. pos = 212
---ret = 213
---val = " "
whitespace invoked. pos = 213
singleLineComment invoked. pos = 213
multiLineComment invoked. pos = 213
comment invoked. pos = 213
star[false]: pos = 213, val =  , , , 
__ invoked. pos = 209
---ret = 213
---val = [" "," "," "," "]
nl invoked. pos = 208
---ret = 213
---val = ["\n",[" "," "," "," "]]
star[false]: pos = 208, val =  ,v,a,l, ,t, ,=, ,s,c,.,n,e,x,t,I,n,t,(,),;
nl invoked. pos = 213
star[true]: pos = 213, val = 
, , , , 
singleLineComment invoked. pos = 184
---ret = 213
---val = ["//",[" ","v","a","l"," ","t"," ","="," ","s","c",".","n","e","x","t","I","n","t","(",")",";"],["\n",[" "," "," "," "]]]
comment invoked. pos = 184
---ret = 213
---val = ["//",[" ","v","a","l"," ","t"," ","="," ","s","c",".","n","e","x","t","I","n","t","(",")",";"],["\n",[" "," "," "," "]]]
star[false]: pos = 213, val =  , , , ,//, ,v,a,l, ,t, ,=, ,s,c,.,n,e,x,t,I,n,t,(,),;,
, , , , 
__ invoked. pos = 180
---ret = 213
---val = [" "," "," "," ",["//",[" ","v","a","l"," ","t"," ","="," ","s","c",".","n","e","x","t","I","n","t","(",")",";"],["\n",[" "," "," "," "]]]]
nl invoked. pos = 179
---ret = 213
---val = ["\n",[" "," "," "," ",["//",[" ","v","a","l"," ","t"," ","="," ","s","c",".","n","e","x","t","I","n","t","(",")",";"],["\n",[" "," "," "," "]]]]]
star[true]: pos = 213, val = 
, , , , ,//, ,v,a,l, ,t, ,=, ,s,c,.,n,e,x,t,I,n,t,(,),;,
, , , , 
semi invoked. pos = 179
---ret = 213
---val = ["\n",[" "," "," "," ",["//",[" ","v","a","l"," ","t"," ","="," ","s","c",".","n","e","x","t","I","n","t","(",")",";"],["\n",[" "," "," "," "]]]]]
Import invoked. pos = 213
AT invoked. pos = 213
Annotation invoked. pos = 213
star[false]: pos = 213, val = null
IMPLICIT invoked. pos = 213
LAZY invoked. pos = 213
whitespace invoked. pos = 216
---ret = 217
---val = " "
whitespace invoked. pos = 217
singleLineComment invoked. pos = 217
multiLineComment invoked. pos = 217
comment invoked. pos = 217
star[false]: pos = 217, val =  
__ invoked. pos = 216
---ret = 217
---val = " "
VAL invoked. pos = 213
---ret = 217
---val = ["val"," "]
lower invoked. pos = 217
---ret = 218
---val = "l"
upper invoked. pos = 218
lower invoked. pos = 218
---ret = 219
---val = "i"
letter invoked. pos = 218
---ret = 219
---val = "i"
upper invoked. pos = 219
lower invoked. pos = 219
---ret = 220
---val = "s"
letter invoked. pos = 219
---ret = 220
---val = "s"
upper invoked. pos = 220
lower invoked. pos = 220
---ret = 221
---val = "t"
letter invoked. pos = 220
---ret = 221
---val = "t"
upper invoked. pos = 221
lower invoked. pos = 221
letter invoked. pos = 221
nonZeroDigit invoked. pos = 221
digit invoked. pos = 221
star[false]: pos = 221, val = i,s,t
whitespace invoked. pos = 221
---ret = 222
---val = " "
whitespace invoked. pos = 222
singleLineComment invoked. pos = 222
multiLineComment invoked. pos = 222
comment invoked. pos = 222
star[false]: pos = 222, val =  
__ invoked. pos = 221
---ret = 222
---val = " "
idrest invoked. pos = 218
---ret = 222
---val = [["i","s","t"]," "]
varid invoked. pos = 217
---ret = 222
---val = ["l",[["i","s","t"]," "]]
AT invoked. pos = 222
Pattern2 invoked. pos = 217
---ret = 222
---val = ["l",[["i","s","t"]," "]]
COMMA invoked. pos = 222
star[false]: pos = 222, val = null
COLON invoked. pos = 222
whitespace invoked. pos = 223
---ret = 224
---val = " "
whitespace invoked. pos = 224
singleLineComment invoked. pos = 224
multiLineComment invoked. pos = 224
comment invoked. pos = 224
star[false]: pos = 224, val =  
__ invoked. pos = 223
---ret = 224
---val = " "
EQUAL invoked. pos = 222
---ret = 224
---val = ["="," "]
OPPAREN invoked. pos = 224
Bindings invoked. pos = 224
IMPLICIT invoked. pos = 224
upper invoked. pos = 224
---ret = 225
---val = "L"
upper invoked. pos = 225
lower invoked. pos = 225
---ret = 226
---val = "i"
letter invoked. pos = 225
---ret = 226
---val = "i"
upper invoked. pos = 226
lower invoked. pos = 226
---ret = 227
---val = "s"
letter invoked. pos = 226
---ret = 227
---val = "s"
upper invoked. pos = 227
lower invoked. pos = 227
---ret = 228
---val = "t"
letter invoked. pos = 227
---ret = 228
---val = "t"
upper invoked. pos = 228
lower invoked. pos = 228
letter invoked. pos = 228
nonZeroDigit invoked. pos = 228
digit invoked. pos = 228
star[false]: pos = 228, val = i,s,t
whitespace invoked. pos = 228
singleLineComment invoked. pos = 228
multiLineComment invoked. pos = 228
comment invoked. pos = 228
star[false]: pos = 228, val = null
__ invoked. pos = 228
idrest invoked. pos = 225
---ret = 228
---val = ["i","s","t"]
plainid invoked. pos = 224
---ret = 228
---val = ["L",["i","s","t"]]
id invoked. pos = 224
---ret = 228
---val = ["L",["i","s","t"]]
ARROW invoked. pos = 228
IF invoked. pos = 224
WHILE invoked. pos = 224
NEW invoked. pos = 224
OPBRACE invoked. pos = 224
BlockExpr invoked. pos = 224
EmptyElemTag invoked. pos = 224
STag invoked. pos = 224
Element invoked. pos = 224
CDStart invoked. pos = 224
CDSect invoked. pos = 224
PI invoked. pos = 224
Comment invoked. pos = 224
XmlContent invoked. pos = 224
XmlExpr invoked. pos = 224
DOT invoked. pos = 228
Empty invoked. pos = 228
_StableId invoked. pos = 228
StableId invoked. pos = 224
---ret = 228
---val = ["L",["i","s","t"]]
Path invoked. pos = 224
---ret = 228
---val = ["L",["i","s","t"]]
UNDER invoked. pos = 228
OPBRACKET invoked. pos = 228
TypeArgs invoked. pos = 228
whitespace invoked. pos = 229
singleLineComment invoked. pos = 229
multiLineComment invoked. pos = 229
comment invoked. pos = 229
star[false]: pos = 229, val = null
__ invoked. pos = 229
OPPAREN invoked. pos = 228
---ret = 229
---val = "("
OPPAREN invoked. pos = 229
Bindings invoked. pos = 229
IMPLICIT invoked. pos = 229
upper invoked. pos = 229
lower invoked. pos = 229
varid invoked. pos = 229
opchar invoked. pos = 229
---ret = 230
---val = "3"
opchar invoked. pos = 230
star[true]: pos = 230, val = 3
whitespace invoked. pos = 230
singleLineComment invoked. pos = 230
multiLineComment invoked. pos = 230
comment invoked. pos = 230
star[false]: pos = 230, val = null
__ invoked. pos = 230
op invoked. pos = 229
---ret = 230
---val = "3"
plainid invoked. pos = 229
---ret = 230
---val = "3"
id invoked. pos = 229
---ret = 230
---val = "3"
ARROW invoked. pos = 230
IF invoked. pos = 229
WHILE invoked. pos = 229
NEW invoked. pos = 229
OPBRACE invoked. pos = 229
BlockExpr invoked. pos = 229
EmptyElemTag invoked. pos = 229
STag invoked. pos = 229
Element invoked. pos = 229
CDStart invoked. pos = 229
CDSect invoked. pos = 229
PI invoked. pos = 229
Comment invoked. pos = 229
XmlContent invoked. pos = 229
XmlExpr invoked. pos = 229
DOT invoked. pos = 230
Empty invoked. pos = 230
_StableId invoked. pos = 230
StableId invoked. pos = 229
---ret = 230
---val = "3"
Path invoked. pos = 229
---ret = 230
---val = "3"
UNDER invoked. pos = 230
OPBRACKET invoked. pos = 230
TypeArgs invoked. pos = 230
OPPAREN invoked. pos = 230
nl invoked. pos = 230
OPBRACE invoked. pos = 230
BlockExpr invoked. pos = 230
ArgumentExprs invoked. pos = 230
_SimpleExpr1 invoked. pos = 230
SimpleExpr1 invoked. pos = 229
---ret = 230
---val = "3"
HYPHEN invoked. pos = 229
PLUS invoked. pos = 229
SimpleExpr invoked. pos = 229
---ret = 230
---val = "3"
PrefixExpr invoked. pos = 229
---ret = 230
---val = "3"
upper invoked. pos = 230
lower invoked. pos = 230
varid invoked. pos = 230
star[true]: pos = -1, val = null
op invoked. pos = 230
plainid invoked. pos = 230
id invoked. pos = 230
_InfixExpr invoked. pos = 230
InfixExpr invoked. pos = 229
---ret = 230
---val = "3"
PostfixExpr invoked. pos = 229
---ret = 230
---val = "3"
COLON invoked. pos = 230
Ascription invoked. pos = 230
Expr1 invoked. pos = 229
---ret = 230
---val = "3"
Expr invoked. pos = 229
---ret = 230
---val = "3"
whitespace invoked. pos = 231
singleLineComment invoked. pos = 231
multiLineComment invoked. pos = 231
comment invoked. pos = 231
star[false]: pos = 231, val = null
__ invoked. pos = 231
COMMA invoked. pos = 230
---ret = 231
---val = ","
OPPAREN invoked. pos = 231
Bindings invoked. pos = 231
IMPLICIT invoked. pos = 231
upper invoked. pos = 231
lower invoked. pos = 231
varid invoked. pos = 231
opchar invoked. pos = 231
---ret = 232
---val = "4"
opchar invoked. pos = 232
star[true]: pos = 232, val = 4
whitespace invoked. pos = 232
singleLineComment invoked. pos = 232
multiLineComment invoked. pos = 232
comment invoked. pos = 232
star[false]: pos = 232, val = null
__ invoked. pos = 232
op invoked. pos = 231
---ret = 232
---val = "4"
plainid invoked. pos = 231
---ret = 232
---val = "4"
id invoked. pos = 231
---ret = 232
---val = "4"
ARROW invoked. pos = 232
IF invoked. pos = 231
WHILE invoked. pos = 231
NEW invoked. pos = 231
OPBRACE invoked. pos = 231
BlockExpr invoked. pos = 231
EmptyElemTag invoked. pos = 231
STag invoked. pos = 231
Element invoked. pos = 231
CDStart invoked. pos = 231
CDSect invoked. pos = 231
PI invoked. pos = 231
Comment invoked. pos = 231
XmlContent invoked. pos = 231
XmlExpr invoked. pos = 231
DOT invoked. pos = 232
Empty invoked. pos = 232
_StableId invoked. pos = 232
StableId invoked. pos = 231
---ret = 232
---val = "4"
Path invoked. pos = 231
---ret = 232
---val = "4"
UNDER invoked. pos = 232
OPBRACKET invoked. pos = 232
TypeArgs invoked. pos = 232
OPPAREN invoked. pos = 232
nl invoked. pos = 232
OPBRACE invoked. pos = 232
BlockExpr invoked. pos = 232
ArgumentExprs invoked. pos = 232
_SimpleExpr1 invoked. pos = 232
SimpleExpr1 invoked. pos = 231
---ret = 232
---val = "4"
HYPHEN invoked. pos = 231
PLUS invoked. pos = 231
SimpleExpr invoked. pos = 231
---ret = 232
---val = "4"
PrefixExpr invoked. pos = 231
---ret = 232
---val = "4"
upper invoked. pos = 232
lower invoked. pos = 232
varid invoked. pos = 232
star[true]: pos = -1, val = null
op invoked. pos = 232
plainid invoked. pos = 232
id invoked. pos = 232
_InfixExpr invoked. pos = 232
InfixExpr invoked. pos = 231
---ret = 232
---val = "4"
PostfixExpr invoked. pos = 231
---ret = 232
---val = "4"
COLON invoked. pos = 232
Ascription invoked. pos = 232
Expr1 invoked. pos = 231
---ret = 232
---val = "4"
Expr invoked. pos = 231
---ret = 232
---val = "4"
whitespace invoked. pos = 233
singleLineComment invoked. pos = 233
multiLineComment invoked. pos = 233
comment invoked. pos = 233
star[false]: pos = 233, val = null
__ invoked. pos = 233
COMMA invoked. pos = 232
---ret = 233
---val = ","
OPPAREN invoked. pos = 233
Bindings invoked. pos = 233
IMPLICIT invoked. pos = 233
upper invoked. pos = 233
lower invoked. pos = 233
varid invoked. pos = 233
opchar invoked. pos = 233
---ret = 234
---val = "5"
opchar invoked. pos = 234
star[true]: pos = 234, val = 5
whitespace invoked. pos = 234
singleLineComment invoked. pos = 234
multiLineComment invoked. pos = 234
comment invoked. pos = 234
star[false]: pos = 234, val = null
__ invoked. pos = 234
op invoked. pos = 233
---ret = 234
---val = "5"
plainid invoked. pos = 233
---ret = 234
---val = "5"
id invoked. pos = 233
---ret = 234
---val = "5"
ARROW invoked. pos = 234
IF invoked. pos = 233
WHILE invoked. pos = 233
NEW invoked. pos = 233
OPBRACE invoked. pos = 233
BlockExpr invoked. pos = 233
EmptyElemTag invoked. pos = 233
STag invoked. pos = 233
Element invoked. pos = 233
CDStart invoked. pos = 233
CDSect invoked. pos = 233
PI invoked. pos = 233
Comment invoked. pos = 233
XmlContent invoked. pos = 233
XmlExpr invoked. pos = 233
DOT invoked. pos = 234
Empty invoked. pos = 234
_StableId invoked. pos = 234
StableId invoked. pos = 233
---ret = 234
---val = "5"
Path invoked. pos = 233
---ret = 234
---val = "5"
UNDER invoked. pos = 234
OPBRACKET invoked. pos = 234
TypeArgs invoked. pos = 234
OPPAREN invoked. pos = 234
nl invoked. pos = 234
OPBRACE invoked. pos = 234
BlockExpr invoked. pos = 234
ArgumentExprs invoked. pos = 234
_SimpleExpr1 invoked. pos = 234
SimpleExpr1 invoked. pos = 233
---ret = 234
---val = "5"
HYPHEN invoked. pos = 233
PLUS invoked. pos = 233
SimpleExpr invoked. pos = 233
---ret = 234
---val = "5"
PrefixExpr invoked. pos = 233
---ret = 234
---val = "5"
upper invoked. pos = 234
lower invoked. pos = 234
varid invoked. pos = 234
star[true]: pos = -1, val = null
op invoked. pos = 234
plainid invoked. pos = 234
id invoked. pos = 234
_InfixExpr invoked. pos = 234
InfixExpr invoked. pos = 233
---ret = 234
---val = "5"
PostfixExpr invoked. pos = 233
---ret = 234
---val = "5"
COLON invoked. pos = 234
Ascription invoked. pos = 234
Expr1 invoked. pos = 233
---ret = 234
---val = "5"
Expr invoked. pos = 233
---ret = 234
---val = "5"
COMMA invoked. pos = 234
star[false]: pos = 234, val = ,,4,,,5
Exprs invoked. pos = 229
---ret = 234
---val = ["3",[[",","4"],[",","5"]]]
whitespace invoked. pos = 235
singleLineComment invoked. pos = 235
multiLineComment invoked. pos = 235
comment invoked. pos = 235
star[false]: pos = 235, val = null
__ invoked. pos = 235
CLPAREN invoked. pos = 234
---ret = 235
---val = ")"
ArgumentExprs invoked. pos = 228
---ret = 235
---val = ["(",["3",[[",","4"],[",","5"]]],")"]
UNDER invoked. pos = 235
DOT invoked. pos = 235
OPBRACKET invoked. pos = 235
TypeArgs invoked. pos = 235
OPPAREN invoked. pos = 235
whitespace invoked. pos = 236
---ret = 237
---val = " "
whitespace invoked. pos = 237
---ret = 238
---val = " "
whitespace invoked. pos = 238
---ret = 239
---val = " "
whitespace invoked. pos = 239
---ret = 240
---val = " "
whitespace invoked. pos = 240
singleLineComment invoked. pos = 240
multiLineComment invoked. pos = 240
comment invoked. pos = 240
star[false]: pos = 240, val =  , , , 
__ invoked. pos = 236
---ret = 240
---val = [" "," "," "," "]
nl invoked. pos = 235
---ret = 240
---val = ["\n",[" "," "," "," "]]
OPBRACE invoked. pos = 240
BlockExpr invoked. pos = 240
ArgumentExprs invoked. pos = 235
Empty invoked. pos = 235
_SimpleExpr1 invoked. pos = 235
_SimpleExpr1 invoked. pos = 228
---ret = 235
---val = ["(",["3",[[",","4"],[",","5"]]],")"]
SimpleExpr1 invoked. pos = 224
---ret = 235
---val = [["L",["i","s","t"]],["(",["3",[[",","4"],[",","5"]]],")"]]
HYPHEN invoked. pos = 224
PLUS invoked. pos = 224
SimpleExpr invoked. pos = 224
---ret = 235
---val = [["L",["i","s","t"]],["(",["3",[[",","4"],[",","5"]]],")"]]
PrefixExpr invoked. pos = 224
---ret = 235
---val = [["L",["i","s","t"]],["(",["3",[[",","4"],[",","5"]]],")"]]
upper invoked. pos = 240
lower invoked. pos = 240
---ret = 241
---val = "v"
upper invoked. pos = 241
lower invoked. pos = 241
---ret = 242
---val = "a"
letter invoked. pos = 241
---ret = 242
---val = "a"
upper invoked. pos = 242
lower invoked. pos = 242
---ret = 243
---val = "l"
letter invoked. pos = 242
---ret = 243
---val = "l"
upper invoked. pos = 243
lower invoked. pos = 243
letter invoked. pos = 243
nonZeroDigit invoked. pos = 243
digit invoked. pos = 243
star[false]: pos = 243, val = a,l
whitespace invoked. pos = 243
---ret = 244
---val = " "
whitespace invoked. pos = 244
singleLineComment invoked. pos = 244
multiLineComment invoked. pos = 244
comment invoked. pos = 244
star[false]: pos = 244, val =  
__ invoked. pos = 243
---ret = 244
---val = " "
idrest invoked. pos = 241
---ret = 244
---val = [["a","l"]," "]
varid invoked. pos = 240
---ret = 244
---val = ["v",[["a","l"]," "]]
plainid invoked. pos = 240
---ret = 244
---val = ["v",[["a","l"]," "]]
id invoked. pos = 240
---ret = 244
---val = ["v",[["a","l"]," "]]
nl invoked. pos = 244
HYPHEN invoked. pos = 244
whitespace invoked. pos = 245
singleLineComment invoked. pos = 245
multiLineComment invoked. pos = 245
comment invoked. pos = 245
star[false]: pos = 245, val = null
__ invoked. pos = 245
PLUS invoked. pos = 244
---ret = 245
---val = "+"
NEW invoked. pos = 245
OPBRACE invoked. pos = 245
BlockExpr invoked. pos = 245
OPPAREN invoked. pos = 245
EmptyElemTag invoked. pos = 245
STag invoked. pos = 245
Element invoked. pos = 245
CDStart invoked. pos = 245
CDSect invoked. pos = 245
PI invoked. pos = 245
Comment invoked. pos = 245
XmlContent invoked. pos = 245
XmlExpr invoked. pos = 245
upper invoked. pos = 245
lower invoked. pos = 245
varid invoked. pos = 245
opchar invoked. pos = 245
---ret = 246
---val = "+"
opchar invoked. pos = 246
---ret = 247
---val = "+"
opchar invoked. pos = 247
star[true]: pos = 247, val = +,+
whitespace invoked. pos = 247
---ret = 248
---val = " "
whitespace invoked. pos = 248
singleLineComment invoked. pos = 248
multiLineComment invoked. pos = 248
comment invoked. pos = 248
star[false]: pos = 248, val =  
__ invoked. pos = 247
---ret = 248
---val = " "
op invoked. pos = 245
---ret = 248
---val = [["+","+"]," "]
plainid invoked. pos = 245
---ret = 248
---val = [["+","+"]," "]
id invoked. pos = 245
---ret = 248
---val = [["+","+"]," "]
DOT invoked. pos = 248
Empty invoked. pos = 248
_StableId invoked. pos = 248
StableId invoked. pos = 245
---ret = 248
---val = [["+","+"]," "]
Path invoked. pos = 245
---ret = 248
---val = [["+","+"]," "]
UNDER invoked. pos = 248
OPBRACKET invoked. pos = 248
TypeArgs invoked. pos = 248
OPPAREN invoked. pos = 248
nl invoked. pos = 248
OPBRACE invoked. pos = 248
BlockExpr invoked. pos = 248
ArgumentExprs invoked. pos = 248
_SimpleExpr1 invoked. pos = 248
SimpleExpr1 invoked. pos = 245
---ret = 248
---val = [["+","+"]," "]
SimpleExpr invoked. pos = 245
---ret = 248
---val = [["+","+"]," "]
PrefixExpr invoked. pos = 244
---ret = 248
---val = ["+",[["+","+"]," "]]
upper invoked. pos = 248
lower invoked. pos = 248
varid invoked. pos = 248
opchar invoked. pos = 248
---ret = 249
---val = "="
opchar invoked. pos = 249
star[true]: pos = 249, val = =
whitespace invoked. pos = 249
---ret = 250
---val = " "
whitespace invoked. pos = 250
singleLineComment invoked. pos = 250
multiLineComment invoked. pos = 250
comment invoked. pos = 250
star[false]: pos = 250, val =  
__ invoked. pos = 249
---ret = 250
---val = " "
op invoked. pos = 248
---ret = 250
---val = ["="," "]
plainid invoked. pos = 248
---ret = 250
---val = ["="," "]
id invoked. pos = 248
---ret = 250
---val = ["="," "]
nl invoked. pos = 250
HYPHEN invoked. pos = 250
PLUS invoked. pos = 250
NEW invoked. pos = 250
OPBRACE invoked. pos = 250
BlockExpr invoked. pos = 250
OPPAREN invoked. pos = 250
EmptyElemTag invoked. pos = 250
STag invoked. pos = 250
Element invoked. pos = 250
CDStart invoked. pos = 250
CDSect invoked. pos = 250
PI invoked. pos = 250
Comment invoked. pos = 250
XmlContent invoked. pos = 250
XmlExpr invoked. pos = 250
upper invoked. pos = 250
lower invoked. pos = 250
varid invoked. pos = 250
opchar invoked. pos = 250
---ret = 251
---val = "1"
opchar invoked. pos = 251
star[true]: pos = 251, val = 1
whitespace invoked. pos = 251
singleLineComment invoked. pos = 251
multiLineComment invoked. pos = 251
comment invoked. pos = 251
star[false]: pos = 251, val = null
__ invoked. pos = 251
op invoked. pos = 250
---ret = 251
---val = "1"
plainid invoked. pos = 250
---ret = 251
---val = "1"
id invoked. pos = 250
---ret = 251
---val = "1"
DOT invoked. pos = 251
Empty invoked. pos = 251
_StableId invoked. pos = 251
StableId invoked. pos = 250
---ret = 251
---val = "1"
Path invoked. pos = 250
---ret = 251
---val = "1"
UNDER invoked. pos = 251
OPBRACKET invoked. pos = 251
TypeArgs invoked. pos = 251
OPPAREN invoked. pos = 251
nl invoked. pos = 251
OPBRACE invoked. pos = 251
BlockExpr invoked. pos = 251
ArgumentExprs invoked. pos = 251
_SimpleExpr1 invoked. pos = 251
SimpleExpr1 invoked. pos = 250
---ret = 251
---val = "1"
SimpleExpr invoked. pos = 250
---ret = 251
---val = "1"
PrefixExpr invoked. pos = 250
---ret = 251
---val = "1"
upper invoked. pos = 251
lower invoked. pos = 251
varid invoked. pos = 251
star[true]: pos = -1, val = null
op invoked. pos = 251
plainid invoked. pos = 251
id invoked. pos = 251
_InfixExpr invoked. pos = 251
InfixExpr invoked. pos = 250
---ret = 251
---val = "1"
_InfixExpr invoked. pos = 248
---ret = 251
---val = [["="," "],"1"]
InfixExpr invoked. pos = 244
---ret = 251
---val = [["+",[["+","+"]," "]],[["="," "],"1"]]
_InfixExpr invoked. pos = 235
---ret = 251
---val = [["\n",[" "," "," "," "]],["v",[["a","l"]," "]],[["+",[["+","+"]," "]],[["="," "],"1"]]]
InfixExpr invoked. pos = 224
---ret = 251
---val = [[["L",["i","s","t"]],["(",["3",[[",","4"],[",","5"]]],")"]],[["\n",[" "," "," "," "]],["v",[["a","l"]," "]],[["+",[["+","+"]," "]],[["="," "],"1"]]]]
PostfixExpr invoked. pos = 224
---ret = 251
---val = [[["L",["i","s","t"]],["(",["3",[[",","4"],[",","5"]]],")"]],[["\n",[" "," "," "," "]],["v",[["a","l"]," "]],[["+",[["+","+"]," "]],[["="," "],"1"]]]]
COLON invoked. pos = 251
Ascription invoked. pos = 251
Expr1 invoked. pos = 224
---ret = 251
---val = [[["L",["i","s","t"]],["(",["3",[[",","4"],[",","5"]]],")"]],[["\n",[" "," "," "," "]],["v",[["a","l"]," "]],[["+",[["+","+"]," "]],[["="," "],"1"]]]]
Expr invoked. pos = 224
---ret = 251
---val = [[["L",["i","s","t"]],["(",["3",[[",","4"],[",","5"]]],")"]],[["\n",[" "," "," "," "]],["v",[["a","l"]," "]],[["+",[["+","+"]," "]],[["="," "],"1"]]]]
PatDef invoked. pos = 217
---ret = 251
---val = [["l",[["i","s","t"]," "]],["="," "],[[["L",["i","s","t"]],["(",["3",[[",","4"],[",","5"]]],")"]],[["\n",[" "," "," "," "]],["v",[["a","l"]," "]],[["+",[["+","+"]," "]],[["="," "],"1"]]]]]
PatVarDef invoked. pos = 213
---ret = 251
---val = [["val"," "],[["l",[["i","s","t"]," "]],["="," "],[[["L",["i","s","t"]],["(",["3",[[",","4"],[",","5"]]],")"]],[["\n",[" "," "," "," "]],["v",[["a","l"]," "]],[["+",[["+","+"]," "]],[["="," "],"1"]]]]]]
Def invoked. pos = 213
---ret = 251
---val = [["val"," "],[["l",[["i","s","t"]," "]],["="," "],[[["L",["i","s","t"]],["(",["3",[[",","4"],[",","5"]]],")"]],[["\n",[" "," "," "," "]],["v",[["a","l"]," "]],[["+",[["+","+"]," "]],[["="," "],"1"]]]]]]
BlockStat invoked. pos = 213
---ret = 251
---val = [["val"," "],[["l",[["i","s","t"]," "]],["="," "],[[["L",["i","s","t"]],["(",["3",[[",","4"],[",","5"]]],")"]],[["\n",[" "," "," "," "]],["v",[["a","l"]," "]],[["+",[["+","+"]," "]],[["="," "],"1"]]]]]]
whitespace invoked. pos = 252
singleLineComment invoked. pos = 252
multiLineComment invoked. pos = 252
comment invoked. pos = 252
star[false]: pos = 252, val = null
__ invoked. pos = 252
SEMICOLON invoked. pos = 251
---ret = 252
---val = ";"
semi invoked. pos = 251
---ret = 252
---val = ";"
Import invoked. pos = 252
AT invoked. pos = 252
Annotation invoked. pos = 252
star[false]: pos = 252, val = null
IMPLICIT invoked. pos = 252
LAZY invoked. pos = 252
VAL invoked. pos = 252
VAR invoked. pos = 252
PatVarDef invoked. pos = 252
DEF invoked. pos = 252
TYPE invoked. pos = 252
CASE invoked. pos = 252
OBJECT invoked. pos = 252
TmplDef invoked. pos = 252
Def invoked. pos = 252
star[false]: pos = 252, val = null
LocalModifier invoked. pos = 252
star[false]: pos = 252, val = null
IF invoked. pos = 252
WHILE invoked. pos = 252
OPPAREN invoked. pos = 252
NEW invoked. pos = 252
OPBRACE invoked. pos = 252
BlockExpr invoked. pos = 252
EmptyElemTag invoked. pos = 252
STag invoked. pos = 252
Element invoked. pos = 252
CDStart invoked. pos = 252
CDSect invoked. pos = 252
PI invoked. pos = 252
Comment invoked. pos = 252
XmlContent invoked. pos = 252
XmlExpr invoked. pos = 252
upper invoked. pos = 252
lower invoked. pos = 252
varid invoked. pos = 252
opchar invoked. pos = 252
star[true]: pos = -1, val = null
op invoked. pos = 252
plainid invoked. pos = 252
id invoked. pos = 252
THIS invoked. pos = 252
StableId invoked. pos = 252
Path invoked. pos = 252
HYPHEN invoked. pos = 252
nonZeroDigit invoked. pos = 252
decimalNumeral invoked. pos = 252
hexNumeral invoked. pos = 252
octalNumeral invoked. pos = 252
integerLiteral invoked. pos = 252
digit invoked. pos = 252
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 252
booleanLiteral invoked. pos = 252
characterLiteral invoked. pos = 252
stringLiteral invoked. pos = 252
symbolLiteral invoked. pos = 252
Literal invoked. pos = 252
UNDER invoked. pos = 252
SimpleExpr1 invoked. pos = 252
PLUS invoked. pos = 252
SimpleExpr invoked. pos = 252
PrefixExpr invoked. pos = 252
InfixExpr invoked. pos = 252
PostfixExpr invoked. pos = 252
Expr1 invoked. pos = 252
Empty invoked. pos = 252
BlockStat invoked. pos = 252
SEMICOLON invoked. pos = 252
whitespace invoked. pos = 253
---ret = 254
---val = " "
whitespace invoked. pos = 254
---ret = 255
---val = " "
whitespace invoked. pos = 255
---ret = 256
---val = " "
whitespace invoked. pos = 256
---ret = 257
---val = " "
whitespace invoked. pos = 257
nl invoked. pos = 259
nl invoked. pos = 260
nl invoked. pos = 261
nl invoked. pos = 262
nl invoked. pos = 263
nl invoked. pos = 264
nl invoked. pos = 265
nl invoked. pos = 266
nl invoked. pos = 267
nl invoked. pos = 268
nl invoked. pos = 269
nl invoked. pos = 270
whitespace invoked. pos = 272
---ret = 273
---val = " "
whitespace invoked. pos = 273
---ret = 274
---val = " "
whitespace invoked. pos = 274
---ret = 275
---val = " "
whitespace invoked. pos = 275
---ret = 276
---val = " "
whitespace invoked. pos = 276
singleLineComment invoked. pos = 276
multiLineComment invoked. pos = 276
comment invoked. pos = 276
star[false]: pos = 276, val =  , , , 
__ invoked. pos = 272
---ret = 276
---val = [" "," "," "," "]
nl invoked. pos = 271
---ret = 276
---val = ["\n",[" "," "," "," "]]
star[false]: pos = 271, val = v,a,l, ,;,;,;, ,=, ,1,;
nl invoked. pos = 276
star[true]: pos = 276, val = 
, , , , 
singleLineComment invoked. pos = 257
---ret = 276
---val = ["//",["v","a","l"," ",";",";",";"," ","="," ","1",";"],["\n",[" "," "," "," "]]]
comment invoked. pos = 257
---ret = 276
---val = ["//",["v","a","l"," ",";",";",";"," ","="," ","1",";"],["\n",[" "," "," "," "]]]
star[false]: pos = 276, val =  , , , ,//,v,a,l, ,;,;,;, ,=, ,1,;,
, , , , 
__ invoked. pos = 253
---ret = 276
---val = [" "," "," "," ",["//",["v","a","l"," ",";",";",";"," ","="," ","1",";"],["\n",[" "," "," "," "]]]]
nl invoked. pos = 252
---ret = 276
---val = ["\n",[" "," "," "," ",["//",["v","a","l"," ",";",";",";"," ","="," ","1",";"],["\n",[" "," "," "," "]]]]]
star[true]: pos = 276, val = 
, , , , ,//,v,a,l, ,;,;,;, ,=, ,1,;,
, , , , 
semi invoked. pos = 252
---ret = 276
---val = ["\n",[" "," "," "," ",["//",["v","a","l"," ",";",";",";"," ","="," ","1",";"],["\n",[" "," "," "," "]]]]]
Import invoked. pos = 276
AT invoked. pos = 276
Annotation invoked. pos = 276
star[false]: pos = 276, val = null
IMPLICIT invoked. pos = 276
LAZY invoked. pos = 276
whitespace invoked. pos = 279
---ret = 280
---val = " "
whitespace invoked. pos = 280
singleLineComment invoked. pos = 280
multiLineComment invoked. pos = 280
comment invoked. pos = 280
star[false]: pos = 280, val =  
__ invoked. pos = 279
---ret = 280
---val = " "
VAL invoked. pos = 276
---ret = 280
---val = ["val"," "]
lower invoked. pos = 280
varid invoked. pos = 280
UNDER invoked. pos = 280
HYPHEN invoked. pos = 280
nonZeroDigit invoked. pos = 280
decimalNumeral invoked. pos = 280
hexNumeral invoked. pos = 280
octalNumeral invoked. pos = 280
integerLiteral invoked. pos = 280
digit invoked. pos = 280
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 280
booleanLiteral invoked. pos = 280
characterLiteral invoked. pos = 280
stringLiteral invoked. pos = 280
symbolLiteral invoked. pos = 280
Literal invoked. pos = 280
upper invoked. pos = 280
opchar invoked. pos = 280
star[true]: pos = -1, val = null
op invoked. pos = 280
plainid invoked. pos = 280
charEscapeSeq invoked. pos = 282
printableChar invoked. pos = 282
---ret = 283
---val = "a"
printableCharNoDoubleQuote invoked. pos = 282
---ret = 283
---val = "a"
stringElement invoked. pos = 282
---ret = 283
---val = "a"
printableCharNoDoubleQuote invoked. pos = 283
charEscapeSeq invoked. pos = 283
stringElement invoked. pos = 283
star[false]: pos = 283, val = a
whitespace invoked. pos = 284
singleLineComment invoked. pos = 284
multiLineComment invoked. pos = 284
comment invoked. pos = 284
star[false]: pos = 284, val = null
__ invoked. pos = 284
stringLiteral invoked. pos = 281
---ret = 284
---val = ["\"","a","\""]
whitespace invoked. pos = 285
---ret = 286
---val = " "
whitespace invoked. pos = 286
singleLineComment invoked. pos = 286
multiLineComment invoked. pos = 286
comment invoked. pos = 286
star[false]: pos = 286, val =  
__ invoked. pos = 285
---ret = 286
---val = " "
id invoked. pos = 280
---ret = 286
---val = ["`",["\"","a","\""],"`"," "]
DOT invoked. pos = 286
Empty invoked. pos = 286
_StableId invoked. pos = 286
StableId invoked. pos = 280
---ret = 286
---val = ["`",["\"","a","\""],"`"," "]
SimplePattern invoked. pos = 280
---ret = 286
---val = ["`",["\"","a","\""],"`"," "]
Pattern3 invoked. pos = 280
---ret = 286
---val = ["`",["\"","a","\""],"`"," "]
Pattern2 invoked. pos = 280
---ret = 286
---val = ["`",["\"","a","\""],"`"," "]
COMMA invoked. pos = 286
star[false]: pos = 286, val = null
COLON invoked. pos = 286
whitespace invoked. pos = 287
---ret = 288
---val = " "
whitespace invoked. pos = 288
singleLineComment invoked. pos = 288
multiLineComment invoked. pos = 288
comment invoked. pos = 288
star[false]: pos = 288, val =  
__ invoked. pos = 287
---ret = 288
---val = " "
EQUAL invoked. pos = 286
---ret = 288
---val = ["="," "]
OPPAREN invoked. pos = 288
Bindings invoked. pos = 288
IMPLICIT invoked. pos = 288
upper invoked. pos = 288
lower invoked. pos = 288
varid invoked. pos = 288
opchar invoked. pos = 288
---ret = 289
---val = "1"
opchar invoked. pos = 289
---ret = 290
---val = "0"
opchar invoked. pos = 290
---ret = 291
---val = "0"
opchar invoked. pos = 291
---ret = 292
---val = "0"
opchar invoked. pos = 292
star[true]: pos = 292, val = 1,0,0,0
whitespace invoked. pos = 292
singleLineComment invoked. pos = 292
multiLineComment invoked. pos = 292
comment invoked. pos = 292
star[false]: pos = 292, val = null
__ invoked. pos = 292
op invoked. pos = 288
---ret = 292
---val = ["1","0","0","0"]
plainid invoked. pos = 288
---ret = 292
---val = ["1","0","0","0"]
id invoked. pos = 288
---ret = 292
---val = ["1","0","0","0"]
ARROW invoked. pos = 292
IF invoked. pos = 288
WHILE invoked. pos = 288
NEW invoked. pos = 288
OPBRACE invoked. pos = 288
BlockExpr invoked. pos = 288
EmptyElemTag invoked. pos = 288
STag invoked. pos = 288
Element invoked. pos = 288
CDStart invoked. pos = 288
CDSect invoked. pos = 288
PI invoked. pos = 288
Comment invoked. pos = 288
XmlContent invoked. pos = 288
XmlExpr invoked. pos = 288
DOT invoked. pos = 292
Empty invoked. pos = 292
_StableId invoked. pos = 292
StableId invoked. pos = 288
---ret = 292
---val = ["1","0","0","0"]
Path invoked. pos = 288
---ret = 292
---val = ["1","0","0","0"]
UNDER invoked. pos = 292
OPBRACKET invoked. pos = 292
TypeArgs invoked. pos = 292
OPPAREN invoked. pos = 292
nl invoked. pos = 292
OPBRACE invoked. pos = 292
BlockExpr invoked. pos = 292
ArgumentExprs invoked. pos = 292
_SimpleExpr1 invoked. pos = 292
SimpleExpr1 invoked. pos = 288
---ret = 292
---val = ["1","0","0","0"]
HYPHEN invoked. pos = 288
PLUS invoked. pos = 288
SimpleExpr invoked. pos = 288
---ret = 292
---val = ["1","0","0","0"]
PrefixExpr invoked. pos = 288
---ret = 292
---val = ["1","0","0","0"]
upper invoked. pos = 292
lower invoked. pos = 292
varid invoked. pos = 292
star[true]: pos = -1, val = null
op invoked. pos = 292
plainid invoked. pos = 292
id invoked. pos = 292
_InfixExpr invoked. pos = 292
InfixExpr invoked. pos = 288
---ret = 292
---val = ["1","0","0","0"]
PostfixExpr invoked. pos = 288
---ret = 292
---val = ["1","0","0","0"]
COLON invoked. pos = 292
Ascription invoked. pos = 292
Expr1 invoked. pos = 288
---ret = 292
---val = ["1","0","0","0"]
Expr invoked. pos = 288
---ret = 292
---val = ["1","0","0","0"]
PatDef invoked. pos = 280
---ret = 292
---val = [["`",["\"","a","\""],"`"," "],["="," "],["1","0","0","0"]]
PatVarDef invoked. pos = 276
---ret = 292
---val = [["val"," "],[["`",["\"","a","\""],"`"," "],["="," "],["1","0","0","0"]]]
Def invoked. pos = 276
---ret = 292
---val = [["val"," "],[["`",["\"","a","\""],"`"," "],["="," "],["1","0","0","0"]]]
BlockStat invoked. pos = 276
---ret = 292
---val = [["val"," "],[["`",["\"","a","\""],"`"," "],["="," "],["1","0","0","0"]]]
whitespace invoked. pos = 293
singleLineComment invoked. pos = 293
multiLineComment invoked. pos = 293
comment invoked. pos = 293
star[false]: pos = 293, val = null
__ invoked. pos = 293
SEMICOLON invoked. pos = 292
---ret = 293
---val = ";"
semi invoked. pos = 292
---ret = 293
---val = ";"
Import invoked. pos = 293
AT invoked. pos = 293
Annotation invoked. pos = 293
star[false]: pos = 293, val = null
IMPLICIT invoked. pos = 293
LAZY invoked. pos = 293
VAL invoked. pos = 293
VAR invoked. pos = 293
PatVarDef invoked. pos = 293
DEF invoked. pos = 293
TYPE invoked. pos = 293
CASE invoked. pos = 293
OBJECT invoked. pos = 293
TmplDef invoked. pos = 293
Def invoked. pos = 293
star[false]: pos = 293, val = null
LocalModifier invoked. pos = 293
star[false]: pos = 293, val = null
IF invoked. pos = 293
WHILE invoked. pos = 293
OPPAREN invoked. pos = 293
NEW invoked. pos = 293
OPBRACE invoked. pos = 293
BlockExpr invoked. pos = 293
EmptyElemTag invoked. pos = 293
STag invoked. pos = 293
Element invoked. pos = 293
CDStart invoked. pos = 293
CDSect invoked. pos = 293
PI invoked. pos = 293
Comment invoked. pos = 293
XmlContent invoked. pos = 293
XmlExpr invoked. pos = 293
upper invoked. pos = 293
lower invoked. pos = 293
varid invoked. pos = 293
opchar invoked. pos = 293
star[true]: pos = -1, val = null
op invoked. pos = 293
plainid invoked. pos = 293
id invoked. pos = 293
THIS invoked. pos = 293
StableId invoked. pos = 293
Path invoked. pos = 293
HYPHEN invoked. pos = 293
nonZeroDigit invoked. pos = 293
decimalNumeral invoked. pos = 293
hexNumeral invoked. pos = 293
octalNumeral invoked. pos = 293
integerLiteral invoked. pos = 293
digit invoked. pos = 293
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 293
booleanLiteral invoked. pos = 293
characterLiteral invoked. pos = 293
stringLiteral invoked. pos = 293
symbolLiteral invoked. pos = 293
Literal invoked. pos = 293
UNDER invoked. pos = 293
SimpleExpr1 invoked. pos = 293
PLUS invoked. pos = 293
SimpleExpr invoked. pos = 293
PrefixExpr invoked. pos = 293
InfixExpr invoked. pos = 293
PostfixExpr invoked. pos = 293
Expr1 invoked. pos = 293
Empty invoked. pos = 293
BlockStat invoked. pos = 293
SEMICOLON invoked. pos = 293
whitespace invoked. pos = 294
---ret = 295
---val = " "
whitespace invoked. pos = 295
---ret = 296
---val = " "
whitespace invoked. pos = 296
---ret = 297
---val = " "
whitespace invoked. pos = 297
---ret = 298
---val = " "
whitespace invoked. pos = 298
nl invoked. pos = 300
nl invoked. pos = 301
nl invoked. pos = 302
nl invoked. pos = 303
nl invoked. pos = 304
nl invoked. pos = 305
nl invoked. pos = 306
nl invoked. pos = 307
nl invoked. pos = 308
nl invoked. pos = 309
nl invoked. pos = 310
nl invoked. pos = 311
nl invoked. pos = 312
nl invoked. pos = 313
nl invoked. pos = 314
nl invoked. pos = 315
nl invoked. pos = 316
nl invoked. pos = 317
nl invoked. pos = 318
nl invoked. pos = 319
nl invoked. pos = 320
nl invoked. pos = 321
nl invoked. pos = 322
nl invoked. pos = 323
nl invoked. pos = 324
nl invoked. pos = 325
whitespace invoked. pos = 327
---ret = 328
---val = " "
whitespace invoked. pos = 328
---ret = 329
---val = " "
whitespace invoked. pos = 329
---ret = 330
---val = " "
whitespace invoked. pos = 330
---ret = 331
---val = " "
whitespace invoked. pos = 331
nl invoked. pos = 333
nl invoked. pos = 334
nl invoked. pos = 335
nl invoked. pos = 336
nl invoked. pos = 337
nl invoked. pos = 338
nl invoked. pos = 339
nl invoked. pos = 340
nl invoked. pos = 341
nl invoked. pos = 342
nl invoked. pos = 343
nl invoked. pos = 344
nl invoked. pos = 345
nl invoked. pos = 346
nl invoked. pos = 347
nl invoked. pos = 348
nl invoked. pos = 349
nl invoked. pos = 350
nl invoked. pos = 351
nl invoked. pos = 352
nl invoked. pos = 353
nl invoked. pos = 354
nl invoked. pos = 355
nl invoked. pos = 356
whitespace invoked. pos = 358
---ret = 359
---val = " "
whitespace invoked. pos = 359
---ret = 360
---val = " "
whitespace invoked. pos = 360
---ret = 361
---val = " "
whitespace invoked. pos = 361
---ret = 362
---val = " "
whitespace invoked. pos = 362
nl invoked. pos = 364
nl invoked. pos = 365
nl invoked. pos = 366
nl invoked. pos = 367
nl invoked. pos = 368
nl invoked. pos = 369
nl invoked. pos = 370
nl invoked. pos = 371
nl invoked. pos = 372
nl invoked. pos = 373
nl invoked. pos = 374
nl invoked. pos = 375
nl invoked. pos = 376
nl invoked. pos = 377
nl invoked. pos = 378
nl invoked. pos = 379
nl invoked. pos = 380
nl invoked. pos = 381
nl invoked. pos = 382
nl invoked. pos = 383
nl invoked. pos = 384
nl invoked. pos = 385
nl invoked. pos = 386
nl invoked. pos = 387
nl invoked. pos = 388
nl invoked. pos = 389
nl invoked. pos = 390
nl invoked. pos = 391
nl invoked. pos = 392
nl invoked. pos = 393
nl invoked. pos = 394
nl invoked. pos = 395
nl invoked. pos = 396
nl invoked. pos = 397
nl invoked. pos = 398
nl invoked. pos = 399
nl invoked. pos = 400
nl invoked. pos = 401
nl invoked. pos = 402
nl invoked. pos = 403
nl invoked. pos = 404
nl invoked. pos = 405
nl invoked. pos = 406
nl invoked. pos = 407
nl invoked. pos = 408
nl invoked. pos = 409
whitespace invoked. pos = 411
---ret = 412
---val = " "
whitespace invoked. pos = 412
---ret = 413
---val = " "
whitespace invoked. pos = 413
---ret = 414
---val = " "
whitespace invoked. pos = 414
---ret = 415
---val = " "
whitespace invoked. pos = 415
nl invoked. pos = 417
nl invoked. pos = 418
nl invoked. pos = 419
nl invoked. pos = 420
nl invoked. pos = 421
nl invoked. pos = 422
nl invoked. pos = 423
nl invoked. pos = 424
nl invoked. pos = 425
nl invoked. pos = 426
nl invoked. pos = 427
nl invoked. pos = 428
nl invoked. pos = 429
nl invoked. pos = 430
nl invoked. pos = 431
nl invoked. pos = 432
nl invoked. pos = 433
nl invoked. pos = 434
nl invoked. pos = 435
nl invoked. pos = 436
nl invoked. pos = 437
nl invoked. pos = 438
nl invoked. pos = 439
nl invoked. pos = 440
nl invoked. pos = 441
nl invoked. pos = 442
nl invoked. pos = 443
nl invoked. pos = 444
nl invoked. pos = 445
nl invoked. pos = 446
nl invoked. pos = 447
nl invoked. pos = 448
nl invoked. pos = 449
nl invoked. pos = 450
nl invoked. pos = 451
nl invoked. pos = 452
nl invoked. pos = 453
nl invoked. pos = 454
whitespace invoked. pos = 456
---ret = 457
---val = " "
whitespace invoked. pos = 457
---ret = 458
---val = " "
whitespace invoked. pos = 458
---ret = 459
---val = " "
whitespace invoked. pos = 459
---ret = 460
---val = " "
whitespace invoked. pos = 460
nl invoked. pos = 462
nl invoked. pos = 463
nl invoked. pos = 464
nl invoked. pos = 465
nl invoked. pos = 466
nl invoked. pos = 467
nl invoked. pos = 468
nl invoked. pos = 469
nl invoked. pos = 470
nl invoked. pos = 471
nl invoked. pos = 472
nl invoked. pos = 473
nl invoked. pos = 474
nl invoked. pos = 475
nl invoked. pos = 476
nl invoked. pos = 477
whitespace invoked. pos = 479
---ret = 480
---val = " "
whitespace invoked. pos = 480
---ret = 481
---val = " "
whitespace invoked. pos = 481
---ret = 482
---val = " "
whitespace invoked. pos = 482
---ret = 483
---val = " "
whitespace invoked. pos = 483
nl invoked. pos = 485
nl invoked. pos = 486
nl invoked. pos = 487
nl invoked. pos = 488
nl invoked. pos = 489
nl invoked. pos = 490
nl invoked. pos = 491
nl invoked. pos = 492
nl invoked. pos = 493
nl invoked. pos = 494
nl invoked. pos = 495
nl invoked. pos = 496
nl invoked. pos = 497
nl invoked. pos = 498
nl invoked. pos = 499
nl invoked. pos = 500
nl invoked. pos = 501
nl invoked. pos = 502
nl invoked. pos = 503
nl invoked. pos = 504
nl invoked. pos = 505
nl invoked. pos = 506
nl invoked. pos = 507
nl invoked. pos = 508
whitespace invoked. pos = 510
---ret = 511
---val = " "
whitespace invoked. pos = 511
---ret = 512
---val = " "
whitespace invoked. pos = 512
---ret = 513
---val = " "
whitespace invoked. pos = 513
---ret = 514
---val = " "
whitespace invoked. pos = 514
singleLineComment invoked. pos = 514
multiLineComment invoked. pos = 514
comment invoked. pos = 514
star[false]: pos = 514, val =  , , , 
__ invoked. pos = 510
---ret = 514
---val = [" "," "," "," "]
nl invoked. pos = 509
---ret = 514
---val = ["\n",[" "," "," "," "]]
star[false]: pos = 509, val = p,r,i,n,t,l,n,(,`,',a,',`,),;, ,/,/,c,a,n,n,o,t
nl invoked. pos = 514
star[true]: pos = 514, val = 
, , , , 
singleLineComment invoked. pos = 483
---ret = 514
---val = ["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]
comment invoked. pos = 483
---ret = 514
---val = ["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]
star[false]: pos = 514, val =  , , , ,//,p,r,i,n,t,l,n,(,`,',a,',`,),;, ,/,/,c,a,n,n,o,t,
, , , , 
__ invoked. pos = 479
---ret = 514
---val = [" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]
nl invoked. pos = 478
---ret = 514
---val = ["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]
star[false]: pos = 478, val = p,r,i,n,t,l,n,(,`,',e,a,',`,),;
star[true]: pos = 514, val = 
, , , , ,//,p,r,i,n,t,l,n,(,`,',a,',`,),;, ,/,/,c,a,n,n,o,t,
, , , , 
singleLineComment invoked. pos = 460
---ret = 514
---val = ["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]
comment invoked. pos = 460
---ret = 514
---val = ["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]
star[false]: pos = 514, val =  , , , ,//,p,r,i,n,t,l,n,(,`,',e,a,',`,),;,
, , , , ,//,p,r,i,n,t,l,n,(,`,',a,',`,),;, ,/,/,c,a,n,n,o,t,
, , , , 
__ invoked. pos = 456
---ret = 514
---val = [" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]
nl invoked. pos = 455
---ret = 514
---val = ["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]
star[false]: pos = 455, val = v,a,l, ,`,',e,a,',`, ,=, ,4,0,0,0,;, ,/,/,動,く,け,ど,、,仕,様,上,は,駄,目,な,は,ず,・,・,・
star[true]: pos = 514, val = 
, , , , ,//,p,r,i,n,t,l,n,(,`,',e,a,',`,),;,
, , , , ,//,p,r,i,n,t,l,n,(,`,',a,',`,),;, ,/,/,c,a,n,n,o,t,
, , , , 
singleLineComment invoked. pos = 415
---ret = 514
---val = ["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]
comment invoked. pos = 415
---ret = 514
---val = ["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]
star[false]: pos = 514, val =  , , , ,//,v,a,l, ,`,',e,a,',`, ,=, ,4,0,0,0,;, ,/,/,動,く,け,ど,、,仕,様,上,は,駄,目,な,は,ず,・,・,・,
, , , , ,//,p,r,i,n,t,l,n,(,`,',e,a,',`,),;,
, , , , ,//,p,r,i,n,t,l,n,(,`,',a,',`,),;, ,/,/,c,a,n,n,o,t,
, , , , 
__ invoked. pos = 411
---ret = 514
---val = [" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]
nl invoked. pos = 410
---ret = 514
---val = ["\n",[" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]]
star[false]: pos = 410, val = v,a,l, ,',d,', ,=, ,3,0,0,0,;, ,/,/,c,a,n, ,c,o,m,p,i,l,e,,, ,b,u,t, ,c,a,n,n,o,t, ,u,s,e,?
star[true]: pos = 514, val = 
, , , , ,//,v,a,l, ,`,',e,a,',`, ,=, ,4,0,0,0,;, ,/,/,動,く,け,ど,、,仕,様,上,は,駄,目,な,は,ず,・,・,・,
, , , , ,//,p,r,i,n,t,l,n,(,`,',e,a,',`,),;,
, , , , ,//,p,r,i,n,t,l,n,(,`,',a,',`,),;, ,/,/,c,a,n,n,o,t,
, , , , 
singleLineComment invoked. pos = 362
---ret = 514
---val = ["//",["v","a","l"," ","'","d","'"," ","="," ","3","0","0","0",";"," ","/","/","c","a","n"," ","c","o","m","p","i","l","e",","," ","b","u","t"," ","c","a","n","n","o","t"," ","u","s","e","?"],["\n",[" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]]]
comment invoked. pos = 362
---ret = 514
---val = ["//",["v","a","l"," ","'","d","'"," ","="," ","3","0","0","0",";"," ","/","/","c","a","n"," ","c","o","m","p","i","l","e",","," ","b","u","t"," ","c","a","n","n","o","t"," ","u","s","e","?"],["\n",[" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]]]
star[false]: pos = 514, val =  , , , ,//,v,a,l, ,',d,', ,=, ,3,0,0,0,;, ,/,/,c,a,n, ,c,o,m,p,i,l,e,,, ,b,u,t, ,c,a,n,n,o,t, ,u,s,e,?,
, , , , ,//,v,a,l, ,`,',e,a,',`, ,=, ,4,0,0,0,;, ,/,/,動,く,け,ど,、,仕,様,上,は,駄,目,な,は,ず,・,・,・,
, , , , ,//,p,r,i,n,t,l,n,(,`,',e,a,',`,),;,
, , , , ,//,p,r,i,n,t,l,n,(,`,',a,',`,),;, ,/,/,c,a,n,n,o,t,
, , , , 
__ invoked. pos = 358
---ret = 514
---val = [" "," "," "," ",["//",["v","a","l"," ","'","d","'"," ","="," ","3","0","0","0",";"," ","/","/","c","a","n"," ","c","o","m","p","i","l","e",","," ","b","u","t"," ","c","a","n","n","o","t"," ","u","s","e","?"],["\n",[" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]]]]
nl invoked. pos = 357
---ret = 514
---val = ["\n",[" "," "," "," ",["//",["v","a","l"," ","'","d","'"," ","="," ","3","0","0","0",";"," ","/","/","c","a","n"," ","c","o","m","p","i","l","e",","," ","b","u","t"," ","c","a","n","n","o","t"," ","u","s","e","?"],["\n",[" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]]]]]
star[false]: pos = 357, val = v,a,l, ,",c,", ,=, ,2,0,0,0,;, ,/,/,c,a,n,n,o,t
star[true]: pos = 514, val = 
, , , , ,//,v,a,l, ,',d,', ,=, ,3,0,0,0,;, ,/,/,c,a,n, ,c,o,m,p,i,l,e,,, ,b,u,t, ,c,a,n,n,o,t, ,u,s,e,?,
, , , , ,//,v,a,l, ,`,',e,a,',`, ,=, ,4,0,0,0,;, ,/,/,動,く,け,ど,、,仕,様,上,は,駄,目,な,は,ず,・,・,・,
, , , , ,//,p,r,i,n,t,l,n,(,`,',e,a,',`,),;,
, , , , ,//,p,r,i,n,t,l,n,(,`,',a,',`,),;, ,/,/,c,a,n,n,o,t,
, , , , 
singleLineComment invoked. pos = 331
---ret = 514
---val = ["//",["v","a","l"," ","\"","c","\""," ","="," ","2","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","'","d","'"," ","="," ","3","0","0","0",";"," ","/","/","c","a","n"," ","c","o","m","p","i","l","e",","," ","b","u","t"," ","c","a","n","n","o","t"," ","u","s","e","?"],["\n",[" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]]]]]]
comment invoked. pos = 331
---ret = 514
---val = ["//",["v","a","l"," ","\"","c","\""," ","="," ","2","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","'","d","'"," ","="," ","3","0","0","0",";"," ","/","/","c","a","n"," ","c","o","m","p","i","l","e",","," ","b","u","t"," ","c","a","n","n","o","t"," ","u","s","e","?"],["\n",[" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]]]]]]
star[false]: pos = 514, val =  , , , ,//,v,a,l, ,",c,", ,=, ,2,0,0,0,;, ,/,/,c,a,n,n,o,t,
, , , , ,//,v,a,l, ,',d,', ,=, ,3,0,0,0,;, ,/,/,c,a,n, ,c,o,m,p,i,l,e,,, ,b,u,t, ,c,a,n,n,o,t, ,u,s,e,?,
, , , , ,//,v,a,l, ,`,',e,a,',`, ,=, ,4,0,0,0,;, ,/,/,動,く,け,ど,、,仕,様,上,は,駄,目,な,は,ず,・,・,・,
, , , , ,//,p,r,i,n,t,l,n,(,`,',e,a,',`,),;,
, , , , ,//,p,r,i,n,t,l,n,(,`,',a,',`,),;, ,/,/,c,a,n,n,o,t,
, , , , 
__ invoked. pos = 327
---ret = 514
---val = [" "," "," "," ",["//",["v","a","l"," ","\"","c","\""," ","="," ","2","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","'","d","'"," ","="," ","3","0","0","0",";"," ","/","/","c","a","n"," ","c","o","m","p","i","l","e",","," ","b","u","t"," ","c","a","n","n","o","t"," ","u","s","e","?"],["\n",[" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]]]]]]]
nl invoked. pos = 326
---ret = 514
---val = ["\n",[" "," "," "," ",["//",["v","a","l"," ","\"","c","\""," ","="," ","2","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","'","d","'"," ","="," ","3","0","0","0",";"," ","/","/","c","a","n"," ","c","o","m","p","i","l","e",","," ","b","u","t"," ","c","a","n","n","o","t"," ","u","s","e","?"],["\n",[" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]]]]]]]]
star[false]: pos = 326, val = v,a,l, ,',",b,",', ,=, ,1,0,0,0,;, ,/,/,c,a,n,n,o,t
star[true]: pos = 514, val = 
, , , , ,//,v,a,l, ,",c,", ,=, ,2,0,0,0,;, ,/,/,c,a,n,n,o,t,
, , , , ,//,v,a,l, ,',d,', ,=, ,3,0,0,0,;, ,/,/,c,a,n, ,c,o,m,p,i,l,e,,, ,b,u,t, ,c,a,n,n,o,t, ,u,s,e,?,
, , , , ,//,v,a,l, ,`,',e,a,',`, ,=, ,4,0,0,0,;, ,/,/,動,く,け,ど,、,仕,様,上,は,駄,目,な,は,ず,・,・,・,
, , , , ,//,p,r,i,n,t,l,n,(,`,',e,a,',`,),;,
, , , , ,//,p,r,i,n,t,l,n,(,`,',a,',`,),;, ,/,/,c,a,n,n,o,t,
, , , , 
singleLineComment invoked. pos = 298
---ret = 514
---val = ["//",["v","a","l"," ","'","\"","b","\"","'"," ","="," ","1","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","\"","c","\""," ","="," ","2","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","'","d","'"," ","="," ","3","0","0","0",";"," ","/","/","c","a","n"," ","c","o","m","p","i","l","e",","," ","b","u","t"," ","c","a","n","n","o","t"," ","u","s","e","?"],["\n",[" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]]]]]]]]]
comment invoked. pos = 298
---ret = 514
---val = ["//",["v","a","l"," ","'","\"","b","\"","'"," ","="," ","1","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","\"","c","\""," ","="," ","2","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","'","d","'"," ","="," ","3","0","0","0",";"," ","/","/","c","a","n"," ","c","o","m","p","i","l","e",","," ","b","u","t"," ","c","a","n","n","o","t"," ","u","s","e","?"],["\n",[" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]]]]]]]]]
star[false]: pos = 514, val =  , , , ,//,v,a,l, ,',",b,",', ,=, ,1,0,0,0,;, ,/,/,c,a,n,n,o,t,
, , , , ,//,v,a,l, ,",c,", ,=, ,2,0,0,0,;, ,/,/,c,a,n,n,o,t,
, , , , ,//,v,a,l, ,',d,', ,=, ,3,0,0,0,;, ,/,/,c,a,n, ,c,o,m,p,i,l,e,,, ,b,u,t, ,c,a,n,n,o,t, ,u,s,e,?,
, , , , ,//,v,a,l, ,`,',e,a,',`, ,=, ,4,0,0,0,;, ,/,/,動,く,け,ど,、,仕,様,上,は,駄,目,な,は,ず,・,・,・,
, , , , ,//,p,r,i,n,t,l,n,(,`,',e,a,',`,),;,
, , , , ,//,p,r,i,n,t,l,n,(,`,',a,',`,),;, ,/,/,c,a,n,n,o,t,
, , , , 
__ invoked. pos = 294
---ret = 514
---val = [" "," "," "," ",["//",["v","a","l"," ","'","\"","b","\"","'"," ","="," ","1","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","\"","c","\""," ","="," ","2","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","'","d","'"," ","="," ","3","0","0","0",";"," ","/","/","c","a","n"," ","c","o","m","p","i","l","e",","," ","b","u","t"," ","c","a","n","n","o","t"," ","u","s","e","?"],["\n",[" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]]]]]]]]]]
nl invoked. pos = 293
---ret = 514
---val = ["\n",[" "," "," "," ",["//",["v","a","l"," ","'","\"","b","\"","'"," ","="," ","1","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","\"","c","\""," ","="," ","2","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","'","d","'"," ","="," ","3","0","0","0",";"," ","/","/","c","a","n"," ","c","o","m","p","i","l","e",","," ","b","u","t"," ","c","a","n","n","o","t"," ","u","s","e","?"],["\n",[" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]]]]]]]]]]]
star[true]: pos = 514, val = 
, , , , ,//,v,a,l, ,',",b,",', ,=, ,1,0,0,0,;, ,/,/,c,a,n,n,o,t,
, , , , ,//,v,a,l, ,",c,", ,=, ,2,0,0,0,;, ,/,/,c,a,n,n,o,t,
, , , , ,//,v,a,l, ,',d,', ,=, ,3,0,0,0,;, ,/,/,c,a,n, ,c,o,m,p,i,l,e,,, ,b,u,t, ,c,a,n,n,o,t, ,u,s,e,?,
, , , , ,//,v,a,l, ,`,',e,a,',`, ,=, ,4,0,0,0,;, ,/,/,動,く,け,ど,、,仕,様,上,は,駄,目,な,は,ず,・,・,・,
, , , , ,//,p,r,i,n,t,l,n,(,`,',e,a,',`,),;,
, , , , ,//,p,r,i,n,t,l,n,(,`,',a,',`,),;, ,/,/,c,a,n,n,o,t,
, , , , 
semi invoked. pos = 293
---ret = 514
---val = ["\n",[" "," "," "," ",["//",["v","a","l"," ","'","\"","b","\"","'"," ","="," ","1","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","\"","c","\""," ","="," ","2","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","'","d","'"," ","="," ","3","0","0","0",";"," ","/","/","c","a","n"," ","c","o","m","p","i","l","e",","," ","b","u","t"," ","c","a","n","n","o","t"," ","u","s","e","?"],["\n",[" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]]]]]]]]]]]
Import invoked. pos = 514
AT invoked. pos = 514
Annotation invoked. pos = 514
star[false]: pos = 514, val = null
IMPLICIT invoked. pos = 514
LAZY invoked. pos = 514
VAL invoked. pos = 514
VAR invoked. pos = 514
PatVarDef invoked. pos = 514
DEF invoked. pos = 514
TYPE invoked. pos = 514
CASE invoked. pos = 514
OBJECT invoked. pos = 514
TmplDef invoked. pos = 514
Def invoked. pos = 514
star[false]: pos = 514, val = null
LocalModifier invoked. pos = 514
star[false]: pos = 514, val = null
IF invoked. pos = 514
WHILE invoked. pos = 514
OPPAREN invoked. pos = 514
NEW invoked. pos = 514
OPBRACE invoked. pos = 514
BlockExpr invoked. pos = 514
EmptyElemTag invoked. pos = 514
STag invoked. pos = 514
Element invoked. pos = 514
CDStart invoked. pos = 514
CDSect invoked. pos = 514
PI invoked. pos = 514
Comment invoked. pos = 514
XmlContent invoked. pos = 514
XmlExpr invoked. pos = 514
upper invoked. pos = 514
lower invoked. pos = 514
---ret = 515
---val = "p"
upper invoked. pos = 515
lower invoked. pos = 515
---ret = 516
---val = "r"
letter invoked. pos = 515
---ret = 516
---val = "r"
upper invoked. pos = 516
lower invoked. pos = 516
---ret = 517
---val = "i"
letter invoked. pos = 516
---ret = 517
---val = "i"
upper invoked. pos = 517
lower invoked. pos = 517
---ret = 518
---val = "n"
letter invoked. pos = 517
---ret = 518
---val = "n"
upper invoked. pos = 518
lower invoked. pos = 518
---ret = 519
---val = "t"
letter invoked. pos = 518
---ret = 519
---val = "t"
upper invoked. pos = 519
lower invoked. pos = 519
---ret = 520
---val = "l"
letter invoked. pos = 519
---ret = 520
---val = "l"
upper invoked. pos = 520
lower invoked. pos = 520
---ret = 521
---val = "n"
letter invoked. pos = 520
---ret = 521
---val = "n"
upper invoked. pos = 521
lower invoked. pos = 521
letter invoked. pos = 521
nonZeroDigit invoked. pos = 521
digit invoked. pos = 521
star[false]: pos = 521, val = r,i,n,t,l,n
whitespace invoked. pos = 521
singleLineComment invoked. pos = 521
multiLineComment invoked. pos = 521
comment invoked. pos = 521
star[false]: pos = 521, val = null
__ invoked. pos = 521
idrest invoked. pos = 515
---ret = 521
---val = ["r","i","n","t","l","n"]
varid invoked. pos = 514
---ret = 521
---val = ["p",["r","i","n","t","l","n"]]
plainid invoked. pos = 514
---ret = 521
---val = ["p",["r","i","n","t","l","n"]]
id invoked. pos = 514
---ret = 521
---val = ["p",["r","i","n","t","l","n"]]
DOT invoked. pos = 521
Empty invoked. pos = 521
_StableId invoked. pos = 521
StableId invoked. pos = 514
---ret = 521
---val = ["p",["r","i","n","t","l","n"]]
Path invoked. pos = 514
---ret = 521
---val = ["p",["r","i","n","t","l","n"]]
UNDER invoked. pos = 521
OPBRACKET invoked. pos = 521
TypeArgs invoked. pos = 521
whitespace invoked. pos = 522
singleLineComment invoked. pos = 522
multiLineComment invoked. pos = 522
comment invoked. pos = 522
star[false]: pos = 522, val = null
__ invoked. pos = 522
OPPAREN invoked. pos = 521
---ret = 522
---val = "("
OPPAREN invoked. pos = 522
Bindings invoked. pos = 522
IMPLICIT invoked. pos = 522
upper invoked. pos = 522
lower invoked. pos = 522
varid invoked. pos = 522
opchar invoked. pos = 522
star[true]: pos = -1, val = null
op invoked. pos = 522
plainid invoked. pos = 522
id invoked. pos = 522
UNDER invoked. pos = 522
IF invoked. pos = 522
WHILE invoked. pos = 522
NEW invoked. pos = 522
OPBRACE invoked. pos = 522
BlockExpr invoked. pos = 522
EmptyElemTag invoked. pos = 522
STag invoked. pos = 522
Element invoked. pos = 522
CDStart invoked. pos = 522
CDSect invoked. pos = 522
PI invoked. pos = 522
Comment invoked. pos = 522
XmlContent invoked. pos = 522
XmlExpr invoked. pos = 522
THIS invoked. pos = 522
StableId invoked. pos = 522
Path invoked. pos = 522
HYPHEN invoked. pos = 522
nonZeroDigit invoked. pos = 522
decimalNumeral invoked. pos = 522
hexNumeral invoked. pos = 522
octalNumeral invoked. pos = 522
integerLiteral invoked. pos = 522
digit invoked. pos = 522
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 522
booleanLiteral invoked. pos = 522
characterLiteral invoked. pos = 522
charEscapeSeq invoked. pos = 523
printableChar invoked. pos = 523
---ret = 524
---val = "a"
printableCharNoDoubleQuote invoked. pos = 523
---ret = 524
---val = "a"
stringElement invoked. pos = 523
---ret = 524
---val = "a"
charEscapeSeq invoked. pos = 524
printableChar invoked. pos = 524
---ret = 525
---val = " "
printableCharNoDoubleQuote invoked. pos = 524
---ret = 525
---val = " "
stringElement invoked. pos = 524
---ret = 525
---val = " "
charEscapeSeq invoked. pos = 525
printableChar invoked. pos = 525
---ret = 526
---val = "="
printableCharNoDoubleQuote invoked. pos = 525
---ret = 526
---val = "="
stringElement invoked. pos = 525
---ret = 526
---val = "="
charEscapeSeq invoked. pos = 526
printableChar invoked. pos = 526
---ret = 527
---val = " "
printableCharNoDoubleQuote invoked. pos = 526
---ret = 527
---val = " "
stringElement invoked. pos = 526
---ret = 527
---val = " "
printableCharNoDoubleQuote invoked. pos = 527
charEscapeSeq invoked. pos = 527
stringElement invoked. pos = 527
star[false]: pos = 527, val = a, ,=, 
whitespace invoked. pos = 528
---ret = 529
---val = " "
whitespace invoked. pos = 529
singleLineComment invoked. pos = 529
multiLineComment invoked. pos = 529
comment invoked. pos = 529
star[false]: pos = 529, val =  
__ invoked. pos = 528
---ret = 529
---val = " "
stringLiteral invoked. pos = 522
---ret = 529
---val = [["\"",["a"," ","="," "],"\""]," "]
Literal invoked. pos = 522
---ret = 529
---val = [["\"",["a"," ","="," "],"\""]," "]
UNDER invoked. pos = 529
DOT invoked. pos = 529
OPBRACKET invoked. pos = 529
TypeArgs invoked. pos = 529
OPPAREN invoked. pos = 529
nl invoked. pos = 529
OPBRACE invoked. pos = 529
BlockExpr invoked. pos = 529
ArgumentExprs invoked. pos = 529
Empty invoked. pos = 529
_SimpleExpr1 invoked. pos = 529
SimpleExpr1 invoked. pos = 522
---ret = 529
---val = [["\"",["a"," ","="," "],"\""]," "]
PLUS invoked. pos = 522
SimpleExpr invoked. pos = 522
---ret = 529
---val = [["\"",["a"," ","="," "],"\""]," "]
PrefixExpr invoked. pos = 522
---ret = 529
---val = [["\"",["a"," ","="," "],"\""]," "]
upper invoked. pos = 529
lower invoked. pos = 529
varid invoked. pos = 529
opchar invoked. pos = 529
---ret = 530
---val = "+"
opchar invoked. pos = 530
star[true]: pos = 530, val = +
whitespace invoked. pos = 530
---ret = 531
---val = " "
whitespace invoked. pos = 531
singleLineComment invoked. pos = 531
multiLineComment invoked. pos = 531
comment invoked. pos = 531
star[false]: pos = 531, val =  
__ invoked. pos = 530
---ret = 531
---val = " "
op invoked. pos = 529
---ret = 531
---val = ["+"," "]
plainid invoked. pos = 529
---ret = 531
---val = ["+"," "]
id invoked. pos = 529
---ret = 531
---val = ["+"," "]
nl invoked. pos = 531
HYPHEN invoked. pos = 531
PLUS invoked. pos = 531
NEW invoked. pos = 531
OPBRACE invoked. pos = 531
BlockExpr invoked. pos = 531
OPPAREN invoked. pos = 531
EmptyElemTag invoked. pos = 531
STag invoked. pos = 531
Element invoked. pos = 531
CDStart invoked. pos = 531
CDSect invoked. pos = 531
PI invoked. pos = 531
Comment invoked. pos = 531
XmlContent invoked. pos = 531
XmlExpr invoked. pos = 531
upper invoked. pos = 531
lower invoked. pos = 531
varid invoked. pos = 531
opchar invoked. pos = 531
star[true]: pos = -1, val = null
op invoked. pos = 531
plainid invoked. pos = 531
charEscapeSeq invoked. pos = 533
printableChar invoked. pos = 533
---ret = 534
---val = "a"
printableCharNoDoubleQuote invoked. pos = 533
---ret = 534
---val = "a"
stringElement invoked. pos = 533
---ret = 534
---val = "a"
printableCharNoDoubleQuote invoked. pos = 534
charEscapeSeq invoked. pos = 534
stringElement invoked. pos = 534
star[false]: pos = 534, val = a
whitespace invoked. pos = 535
singleLineComment invoked. pos = 535
multiLineComment invoked. pos = 535
comment invoked. pos = 535
star[false]: pos = 535, val = null
__ invoked. pos = 535
stringLiteral invoked. pos = 532
---ret = 535
---val = ["\"","a","\""]
whitespace invoked. pos = 536
singleLineComment invoked. pos = 536
multiLineComment invoked. pos = 536
comment invoked. pos = 536
star[false]: pos = 536, val = null
__ invoked. pos = 536
id invoked. pos = 531
---ret = 536
---val = ["`",["\"","a","\""],"`"]
DOT invoked. pos = 536
Empty invoked. pos = 536
_StableId invoked. pos = 536
StableId invoked. pos = 531
---ret = 536
---val = ["`",["\"","a","\""],"`"]
Path invoked. pos = 531
---ret = 536
---val = ["`",["\"","a","\""],"`"]
UNDER invoked. pos = 536
OPBRACKET invoked. pos = 536
TypeArgs invoked. pos = 536
OPPAREN invoked. pos = 536
nl invoked. pos = 536
OPBRACE invoked. pos = 536
BlockExpr invoked. pos = 536
ArgumentExprs invoked. pos = 536
_SimpleExpr1 invoked. pos = 536
SimpleExpr1 invoked. pos = 531
---ret = 536
---val = ["`",["\"","a","\""],"`"]
SimpleExpr invoked. pos = 531
---ret = 536
---val = ["`",["\"","a","\""],"`"]
PrefixExpr invoked. pos = 531
---ret = 536
---val = ["`",["\"","a","\""],"`"]
upper invoked. pos = 536
lower invoked. pos = 536
varid invoked. pos = 536
opchar invoked. pos = 536
star[true]: pos = -1, val = null
op invoked. pos = 536
plainid invoked. pos = 536
id invoked. pos = 536
_InfixExpr invoked. pos = 536
InfixExpr invoked. pos = 531
---ret = 536
---val = ["`",["\"","a","\""],"`"]
_InfixExpr invoked. pos = 529
---ret = 536
---val = [["+"," "],["`",["\"","a","\""],"`"]]
InfixExpr invoked. pos = 522
---ret = 536
---val = [[["\"",["a"," ","="," "],"\""]," "],[["+"," "],["`",["\"","a","\""],"`"]]]
PostfixExpr invoked. pos = 522
---ret = 536
---val = [[["\"",["a"," ","="," "],"\""]," "],[["+"," "],["`",["\"","a","\""],"`"]]]
COLON invoked. pos = 536
Ascription invoked. pos = 536
Expr1 invoked. pos = 522
---ret = 536
---val = [[["\"",["a"," ","="," "],"\""]," "],[["+"," "],["`",["\"","a","\""],"`"]]]
Expr invoked. pos = 522
---ret = 536
---val = [[["\"",["a"," ","="," "],"\""]," "],[["+"," "],["`",["\"","a","\""],"`"]]]
COMMA invoked. pos = 536
star[false]: pos = 536, val = null
Exprs invoked. pos = 522
---ret = 536
---val = [[["\"",["a"," ","="," "],"\""]," "],[["+"," "],["`",["\"","a","\""],"`"]]]
whitespace invoked. pos = 537
singleLineComment invoked. pos = 537
multiLineComment invoked. pos = 537
comment invoked. pos = 537
star[false]: pos = 537, val = null
__ invoked. pos = 537
CLPAREN invoked. pos = 536
---ret = 537
---val = ")"
ArgumentExprs invoked. pos = 521
---ret = 537
---val = ["(",[[["\"",["a"," ","="," "],"\""]," "],[["+"," "],["`",["\"","a","\""],"`"]]],")"]
UNDER invoked. pos = 537
DOT invoked. pos = 537
OPBRACKET invoked. pos = 537
TypeArgs invoked. pos = 537
OPPAREN invoked. pos = 537
nl invoked. pos = 537
OPBRACE invoked. pos = 537
BlockExpr invoked. pos = 537
ArgumentExprs invoked. pos = 537
Empty invoked. pos = 537
_SimpleExpr1 invoked. pos = 537
_SimpleExpr1 invoked. pos = 521
---ret = 537
---val = ["(",[[["\"",["a"," ","="," "],"\""]," "],[["+"," "],["`",["\"","a","\""],"`"]]],")"]
SimpleExpr1 invoked. pos = 514
---ret = 537
---val = [["p",["r","i","n","t","l","n"]],["(",[[["\"",["a"," ","="," "],"\""]," "],[["+"," "],["`",["\"","a","\""],"`"]]],")"]]
HYPHEN invoked. pos = 514
PLUS invoked. pos = 514
SimpleExpr invoked. pos = 514
---ret = 537
---val = [["p",["r","i","n","t","l","n"]],["(",[[["\"",["a"," ","="," "],"\""]," "],[["+"," "],["`",["\"","a","\""],"`"]]],")"]]
PrefixExpr invoked. pos = 514
---ret = 537
---val = [["p",["r","i","n","t","l","n"]],["(",[[["\"",["a"," ","="," "],"\""]," "],[["+"," "],["`",["\"","a","\""],"`"]]],")"]]
upper invoked. pos = 537
lower invoked. pos = 537
varid invoked. pos = 537
opchar invoked. pos = 537
star[true]: pos = -1, val = null
op invoked. pos = 537
plainid invoked. pos = 537
id invoked. pos = 537
_InfixExpr invoked. pos = 537
InfixExpr invoked. pos = 514
---ret = 537
---val = [["p",["r","i","n","t","l","n"]],["(",[[["\"",["a"," ","="," "],"\""]," "],[["+"," "],["`",["\"","a","\""],"`"]]],")"]]
PostfixExpr invoked. pos = 514
---ret = 537
---val = [["p",["r","i","n","t","l","n"]],["(",[[["\"",["a"," ","="," "],"\""]," "],[["+"," "],["`",["\"","a","\""],"`"]]],")"]]
COLON invoked. pos = 537
Ascription invoked. pos = 537
Expr1 invoked. pos = 514
---ret = 537
---val = [["p",["r","i","n","t","l","n"]],["(",[[["\"",["a"," ","="," "],"\""]," "],[["+"," "],["`",["\"","a","\""],"`"]]],")"]]
BlockStat invoked. pos = 514
---ret = 537
---val = [["p",["r","i","n","t","l","n"]],["(",[[["\"",["a"," ","="," "],"\""]," "],[["+"," "],["`",["\"","a","\""],"`"]]],")"]]
whitespace invoked. pos = 538
singleLineComment invoked. pos = 538
multiLineComment invoked. pos = 538
comment invoked. pos = 538
star[false]: pos = 538, val = null
__ invoked. pos = 538
SEMICOLON invoked. pos = 537
---ret = 538
---val = ";"
semi invoked. pos = 537
---ret = 538
---val = ";"
Import invoked. pos = 538
AT invoked. pos = 538
Annotation invoked. pos = 538
star[false]: pos = 538, val = null
IMPLICIT invoked. pos = 538
LAZY invoked. pos = 538
VAL invoked. pos = 538
VAR invoked. pos = 538
PatVarDef invoked. pos = 538
DEF invoked. pos = 538
TYPE invoked. pos = 538
CASE invoked. pos = 538
OBJECT invoked. pos = 538
TmplDef invoked. pos = 538
Def invoked. pos = 538
star[false]: pos = 538, val = null
LocalModifier invoked. pos = 538
star[false]: pos = 538, val = null
IF invoked. pos = 538
WHILE invoked. pos = 538
OPPAREN invoked. pos = 538
NEW invoked. pos = 538
OPBRACE invoked. pos = 538
BlockExpr invoked. pos = 538
EmptyElemTag invoked. pos = 538
STag invoked. pos = 538
Element invoked. pos = 538
CDStart invoked. pos = 538
CDSect invoked. pos = 538
PI invoked. pos = 538
Comment invoked. pos = 538
XmlContent invoked. pos = 538
XmlExpr invoked. pos = 538
upper invoked. pos = 538
lower invoked. pos = 538
varid invoked. pos = 538
opchar invoked. pos = 538
star[true]: pos = -1, val = null
op invoked. pos = 538
plainid invoked. pos = 538
id invoked. pos = 538
THIS invoked. pos = 538
StableId invoked. pos = 538
Path invoked. pos = 538
HYPHEN invoked. pos = 538
nonZeroDigit invoked. pos = 538
decimalNumeral invoked. pos = 538
hexNumeral invoked. pos = 538
octalNumeral invoked. pos = 538
integerLiteral invoked. pos = 538
digit invoked. pos = 538
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 538
booleanLiteral invoked. pos = 538
characterLiteral invoked. pos = 538
stringLiteral invoked. pos = 538
symbolLiteral invoked. pos = 538
Literal invoked. pos = 538
UNDER invoked. pos = 538
SimpleExpr1 invoked. pos = 538
PLUS invoked. pos = 538
SimpleExpr invoked. pos = 538
PrefixExpr invoked. pos = 538
InfixExpr invoked. pos = 538
PostfixExpr invoked. pos = 538
Expr1 invoked. pos = 538
Empty invoked. pos = 538
BlockStat invoked. pos = 538
SEMICOLON invoked. pos = 538
whitespace invoked. pos = 539
---ret = 540
---val = " "
whitespace invoked. pos = 540
---ret = 541
---val = " "
whitespace invoked. pos = 541
---ret = 542
---val = " "
whitespace invoked. pos = 542
---ret = 543
---val = " "
whitespace invoked. pos = 543
singleLineComment invoked. pos = 543
multiLineComment invoked. pos = 543
comment invoked. pos = 543
star[false]: pos = 543, val =  , , , 
__ invoked. pos = 539
---ret = 543
---val = [" "," "," "," "]
nl invoked. pos = 538
---ret = 543
---val = ["\n",[" "," "," "," "]]
nl invoked. pos = 543
star[true]: pos = 543, val = 
, , , , 
semi invoked. pos = 538
---ret = 543
---val = ["\n",[" "," "," "," "]]
Import invoked. pos = 543
AT invoked. pos = 543
Annotation invoked. pos = 543
star[false]: pos = 543, val = null
IMPLICIT invoked. pos = 543
LAZY invoked. pos = 543
VAL invoked. pos = 543
VAR invoked. pos = 543
PatVarDef invoked. pos = 543
DEF invoked. pos = 543
TYPE invoked. pos = 543
CASE invoked. pos = 543
OBJECT invoked. pos = 543
TmplDef invoked. pos = 543
Def invoked. pos = 543
star[false]: pos = 543, val = null
LocalModifier invoked. pos = 543
star[false]: pos = 543, val = null
IF invoked. pos = 543
WHILE invoked. pos = 543
OPPAREN invoked. pos = 543
NEW invoked. pos = 543
OPBRACE invoked. pos = 543
BlockExpr invoked. pos = 543
EmptyElemTag invoked. pos = 543
STag invoked. pos = 543
Element invoked. pos = 543
CDStart invoked. pos = 543
CDSect invoked. pos = 543
PI invoked. pos = 543
Comment invoked. pos = 543
XmlContent invoked. pos = 543
XmlExpr invoked. pos = 543
upper invoked. pos = 543
lower invoked. pos = 543
---ret = 544
---val = "p"
upper invoked. pos = 544
lower invoked. pos = 544
---ret = 545
---val = "r"
letter invoked. pos = 544
---ret = 545
---val = "r"
upper invoked. pos = 545
lower invoked. pos = 545
---ret = 546
---val = "i"
letter invoked. pos = 545
---ret = 546
---val = "i"
upper invoked. pos = 546
lower invoked. pos = 546
---ret = 547
---val = "n"
letter invoked. pos = 546
---ret = 547
---val = "n"
upper invoked. pos = 547
lower invoked. pos = 547
---ret = 548
---val = "t"
letter invoked. pos = 547
---ret = 548
---val = "t"
upper invoked. pos = 548
lower invoked. pos = 548
---ret = 549
---val = "l"
letter invoked. pos = 548
---ret = 549
---val = "l"
upper invoked. pos = 549
lower invoked. pos = 549
---ret = 550
---val = "n"
letter invoked. pos = 549
---ret = 550
---val = "n"
upper invoked. pos = 550
lower invoked. pos = 550
letter invoked. pos = 550
nonZeroDigit invoked. pos = 550
digit invoked. pos = 550
star[false]: pos = 550, val = r,i,n,t,l,n
whitespace invoked. pos = 550
singleLineComment invoked. pos = 550
multiLineComment invoked. pos = 550
comment invoked. pos = 550
star[false]: pos = 550, val = null
__ invoked. pos = 550
idrest invoked. pos = 544
---ret = 550
---val = ["r","i","n","t","l","n"]
varid invoked. pos = 543
---ret = 550
---val = ["p",["r","i","n","t","l","n"]]
plainid invoked. pos = 543
---ret = 550
---val = ["p",["r","i","n","t","l","n"]]
id invoked. pos = 543
---ret = 550
---val = ["p",["r","i","n","t","l","n"]]
DOT invoked. pos = 550
Empty invoked. pos = 550
_StableId invoked. pos = 550
StableId invoked. pos = 543
---ret = 550
---val = ["p",["r","i","n","t","l","n"]]
Path invoked. pos = 543
---ret = 550
---val = ["p",["r","i","n","t","l","n"]]
UNDER invoked. pos = 550
OPBRACKET invoked. pos = 550
TypeArgs invoked. pos = 550
whitespace invoked. pos = 551
singleLineComment invoked. pos = 551
multiLineComment invoked. pos = 551
comment invoked. pos = 551
star[false]: pos = 551, val = null
__ invoked. pos = 551
OPPAREN invoked. pos = 550
---ret = 551
---val = "("
OPPAREN invoked. pos = 551
Bindings invoked. pos = 551
IMPLICIT invoked. pos = 551
upper invoked. pos = 551
lower invoked. pos = 551
varid invoked. pos = 551
opchar invoked. pos = 551
---ret = 552
---val = "+"
opchar invoked. pos = 552
---ret = 553
---val = "+"
opchar invoked. pos = 553
---ret = 554
---val = "+"
opchar invoked. pos = 554
star[true]: pos = 554, val = +,+,+
whitespace invoked. pos = 554
singleLineComment invoked. pos = 554
multiLineComment invoked. pos = 554
comment invoked. pos = 554
star[false]: pos = 554, val = null
__ invoked. pos = 554
op invoked. pos = 551
---ret = 554
---val = ["+","+","+"]
plainid invoked. pos = 551
---ret = 554
---val = ["+","+","+"]
id invoked. pos = 551
---ret = 554
---val = ["+","+","+"]
ARROW invoked. pos = 554
IF invoked. pos = 551
WHILE invoked. pos = 551
NEW invoked. pos = 551
OPBRACE invoked. pos = 551
BlockExpr invoked. pos = 551
EmptyElemTag invoked. pos = 551
STag invoked. pos = 551
Element invoked. pos = 551
CDStart invoked. pos = 551
CDSect invoked. pos = 551
PI invoked. pos = 551
Comment invoked. pos = 551
XmlContent invoked. pos = 551
XmlExpr invoked. pos = 551
DOT invoked. pos = 554
Empty invoked. pos = 554
_StableId invoked. pos = 554
StableId invoked. pos = 551
---ret = 554
---val = ["+","+","+"]
Path invoked. pos = 551
---ret = 554
---val = ["+","+","+"]
UNDER invoked. pos = 554
OPBRACKET invoked. pos = 554
TypeArgs invoked. pos = 554
OPPAREN invoked. pos = 554
nl invoked. pos = 554
OPBRACE invoked. pos = 554
BlockExpr invoked. pos = 554
ArgumentExprs invoked. pos = 554
_SimpleExpr1 invoked. pos = 554
SimpleExpr1 invoked. pos = 551
---ret = 554
---val = ["+","+","+"]
HYPHEN invoked. pos = 551
whitespace invoked. pos = 552
singleLineComment invoked. pos = 552
multiLineComment invoked. pos = 552
comment invoked. pos = 552
star[false]: pos = 552, val = null
__ invoked. pos = 552
PLUS invoked. pos = 551
---ret = 552
---val = "+"
NEW invoked. pos = 552
OPBRACE invoked. pos = 552
BlockExpr invoked. pos = 552
OPPAREN invoked. pos = 552
EmptyElemTag invoked. pos = 552
STag invoked. pos = 552
Element invoked. pos = 552
CDStart invoked. pos = 552
CDSect invoked. pos = 552
PI invoked. pos = 552
Comment invoked. pos = 552
XmlContent invoked. pos = 552
XmlExpr invoked. pos = 552
upper invoked. pos = 552
lower invoked. pos = 552
varid invoked. pos = 552
star[true]: pos = 554, val = +,+
op invoked. pos = 552
---ret = 554
---val = ["+","+"]
plainid invoked. pos = 552
---ret = 554
---val = ["+","+"]
id invoked. pos = 552
---ret = 554
---val = ["+","+"]
StableId invoked. pos = 552
---ret = 554
---val = ["+","+"]
Path invoked. pos = 552
---ret = 554
---val = ["+","+"]
SimpleExpr1 invoked. pos = 552
---ret = 554
---val = ["+","+"]
SimpleExpr invoked. pos = 552
---ret = 554
---val = ["+","+"]
PrefixExpr invoked. pos = 551
---ret = 554
---val = ["+",["+","+"]]
upper invoked. pos = 554
lower invoked. pos = 554
varid invoked. pos = 554
star[true]: pos = -1, val = null
op invoked. pos = 554
plainid invoked. pos = 554
id invoked. pos = 554
_InfixExpr invoked. pos = 554
InfixExpr invoked. pos = 551
---ret = 554
---val = ["+",["+","+"]]
PostfixExpr invoked. pos = 551
---ret = 554
---val = ["+",["+","+"]]
COLON invoked. pos = 554
Ascription invoked. pos = 554
Expr1 invoked. pos = 551
---ret = 554
---val = ["+",["+","+"]]
Expr invoked. pos = 551
---ret = 554
---val = ["+",["+","+"]]
COMMA invoked. pos = 554
star[false]: pos = 554, val = null
Exprs invoked. pos = 551
---ret = 554
---val = ["+",["+","+"]]
whitespace invoked. pos = 555
singleLineComment invoked. pos = 555
multiLineComment invoked. pos = 555
comment invoked. pos = 555
star[false]: pos = 555, val = null
__ invoked. pos = 555
CLPAREN invoked. pos = 554
---ret = 555
---val = ")"
ArgumentExprs invoked. pos = 550
---ret = 555
---val = ["(",["+",["+","+"]],")"]
UNDER invoked. pos = 555
DOT invoked. pos = 555
OPBRACKET invoked. pos = 555
TypeArgs invoked. pos = 555
OPPAREN invoked. pos = 555
nl invoked. pos = 555
OPBRACE invoked. pos = 555
BlockExpr invoked. pos = 555
ArgumentExprs invoked. pos = 555
Empty invoked. pos = 555
_SimpleExpr1 invoked. pos = 555
_SimpleExpr1 invoked. pos = 550
---ret = 555
---val = ["(",["+",["+","+"]],")"]
SimpleExpr1 invoked. pos = 543
---ret = 555
---val = [["p",["r","i","n","t","l","n"]],["(",["+",["+","+"]],")"]]
HYPHEN invoked. pos = 543
PLUS invoked. pos = 543
SimpleExpr invoked. pos = 543
---ret = 555
---val = [["p",["r","i","n","t","l","n"]],["(",["+",["+","+"]],")"]]
PrefixExpr invoked. pos = 543
---ret = 555
---val = [["p",["r","i","n","t","l","n"]],["(",["+",["+","+"]],")"]]
upper invoked. pos = 555
lower invoked. pos = 555
varid invoked. pos = 555
opchar invoked. pos = 555
star[true]: pos = -1, val = null
op invoked. pos = 555
plainid invoked. pos = 555
id invoked. pos = 555
_InfixExpr invoked. pos = 555
InfixExpr invoked. pos = 543
---ret = 555
---val = [["p",["r","i","n","t","l","n"]],["(",["+",["+","+"]],")"]]
PostfixExpr invoked. pos = 543
---ret = 555
---val = [["p",["r","i","n","t","l","n"]],["(",["+",["+","+"]],")"]]
COLON invoked. pos = 555
Ascription invoked. pos = 555
Expr1 invoked. pos = 543
---ret = 555
---val = [["p",["r","i","n","t","l","n"]],["(",["+",["+","+"]],")"]]
BlockStat invoked. pos = 543
---ret = 555
---val = [["p",["r","i","n","t","l","n"]],["(",["+",["+","+"]],")"]]
whitespace invoked. pos = 556
singleLineComment invoked. pos = 556
multiLineComment invoked. pos = 556
comment invoked. pos = 556
star[false]: pos = 556, val = null
__ invoked. pos = 556
SEMICOLON invoked. pos = 555
---ret = 556
---val = ";"
semi invoked. pos = 555
---ret = 556
---val = ";"
Import invoked. pos = 556
AT invoked. pos = 556
Annotation invoked. pos = 556
star[false]: pos = 556, val = null
IMPLICIT invoked. pos = 556
LAZY invoked. pos = 556
VAL invoked. pos = 556
VAR invoked. pos = 556
PatVarDef invoked. pos = 556
DEF invoked. pos = 556
TYPE invoked. pos = 556
CASE invoked. pos = 556
OBJECT invoked. pos = 556
TmplDef invoked. pos = 556
Def invoked. pos = 556
star[false]: pos = 556, val = null
LocalModifier invoked. pos = 556
star[false]: pos = 556, val = null
IF invoked. pos = 556
WHILE invoked. pos = 556
OPPAREN invoked. pos = 556
NEW invoked. pos = 556
OPBRACE invoked. pos = 556
BlockExpr invoked. pos = 556
EmptyElemTag invoked. pos = 556
STag invoked. pos = 556
Element invoked. pos = 556
CDStart invoked. pos = 556
CDSect invoked. pos = 556
PI invoked. pos = 556
Comment invoked. pos = 556
XmlContent invoked. pos = 556
XmlExpr invoked. pos = 556
upper invoked. pos = 556
lower invoked. pos = 556
varid invoked. pos = 556
opchar invoked. pos = 556
star[true]: pos = -1, val = null
op invoked. pos = 556
plainid invoked. pos = 556
id invoked. pos = 556
THIS invoked. pos = 556
StableId invoked. pos = 556
Path invoked. pos = 556
HYPHEN invoked. pos = 556
nonZeroDigit invoked. pos = 556
decimalNumeral invoked. pos = 556
hexNumeral invoked. pos = 556
octalNumeral invoked. pos = 556
integerLiteral invoked. pos = 556
digit invoked. pos = 556
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 556
booleanLiteral invoked. pos = 556
characterLiteral invoked. pos = 556
stringLiteral invoked. pos = 556
symbolLiteral invoked. pos = 556
Literal invoked. pos = 556
UNDER invoked. pos = 556
SimpleExpr1 invoked. pos = 556
PLUS invoked. pos = 556
SimpleExpr invoked. pos = 556
PrefixExpr invoked. pos = 556
InfixExpr invoked. pos = 556
PostfixExpr invoked. pos = 556
Expr1 invoked. pos = 556
Empty invoked. pos = 556
BlockStat invoked. pos = 556
SEMICOLON invoked. pos = 556
whitespace invoked. pos = 557
singleLineComment invoked. pos = 557
multiLineComment invoked. pos = 557
comment invoked. pos = 557
star[false]: pos = 557, val = null
__ invoked. pos = 557
nl invoked. pos = 556
---ret = 557
---val = "\n"
whitespace invoked. pos = 558
---ret = 559
---val = " "
whitespace invoked. pos = 559
---ret = 560
---val = " "
whitespace invoked. pos = 560
---ret = 561
---val = " "
whitespace invoked. pos = 561
---ret = 562
---val = " "
whitespace invoked. pos = 562
singleLineComment invoked. pos = 562
multiLineComment invoked. pos = 562
comment invoked. pos = 562
star[false]: pos = 562, val =  , , , 
__ invoked. pos = 558
---ret = 562
---val = [" "," "," "," "]
nl invoked. pos = 557
---ret = 562
---val = ["\n",[" "," "," "," "]]
nl invoked. pos = 562
star[true]: pos = 562, val = 
,
, , , , 
semi invoked. pos = 556
---ret = 562
---val = ["\n",["\n",[" "," "," "," "]]]
Import invoked. pos = 562
AT invoked. pos = 562
Annotation invoked. pos = 562
star[false]: pos = 562, val = null
IMPLICIT invoked. pos = 562
LAZY invoked. pos = 562
VAL invoked. pos = 562
VAR invoked. pos = 562
PatVarDef invoked. pos = 562
DEF invoked. pos = 562
TYPE invoked. pos = 562
CASE invoked. pos = 562
OBJECT invoked. pos = 562
TmplDef invoked. pos = 562
Def invoked. pos = 562
star[false]: pos = 562, val = null
LocalModifier invoked. pos = 562
star[false]: pos = 562, val = null
IF invoked. pos = 562
WHILE invoked. pos = 562
whitespace invoked. pos = 565
singleLineComment invoked. pos = 565
multiLineComment invoked. pos = 565
comment invoked. pos = 565
star[false]: pos = 565, val = null
__ invoked. pos = 565
whitespace invoked. pos = 566
singleLineComment invoked. pos = 566
multiLineComment invoked. pos = 566
comment invoked. pos = 566
star[false]: pos = 566, val = null
__ invoked. pos = 566
OPPAREN invoked. pos = 565
---ret = 566
---val = "("
lower invoked. pos = 566
---ret = 567
---val = "i"
upper invoked. pos = 567
lower invoked. pos = 567
letter invoked. pos = 567
nonZeroDigit invoked. pos = 567
digit invoked. pos = 567
star[false]: pos = 567, val = null
whitespace invoked. pos = 567
---ret = 568
---val = " "
whitespace invoked. pos = 568
singleLineComment invoked. pos = 568
multiLineComment invoked. pos = 568
comment invoked. pos = 568
star[false]: pos = 568, val =  
__ invoked. pos = 567
---ret = 568
---val = " "
idrest invoked. pos = 567
---ret = 568
---val = " "
varid invoked. pos = 566
---ret = 568
---val = ["i"," "]
COLON invoked. pos = 568
UNDER invoked. pos = 566
AT invoked. pos = 568
Pattern2 invoked. pos = 566
---ret = 568
---val = ["i"," "]
Pattern1 invoked. pos = 566
---ret = 568
---val = ["i"," "]
whitespace invoked. pos = 570
---ret = 571
---val = " "
whitespace invoked. pos = 571
singleLineComment invoked. pos = 571
multiLineComment invoked. pos = 571
comment invoked. pos = 571
star[false]: pos = 571, val =  
__ invoked. pos = 570
---ret = 571
---val = " "
OPPAREN invoked. pos = 571
Bindings invoked. pos = 571
IMPLICIT invoked. pos = 571
upper invoked. pos = 571
lower invoked. pos = 571
---ret = 572
---val = "l"
upper invoked. pos = 572
lower invoked. pos = 572
---ret = 573
---val = "i"
letter invoked. pos = 572
---ret = 573
---val = "i"
upper invoked. pos = 573
lower invoked. pos = 573
---ret = 574
---val = "s"
letter invoked. pos = 573
---ret = 574
---val = "s"
upper invoked. pos = 574
lower invoked. pos = 574
---ret = 575
---val = "t"
letter invoked. pos = 574
---ret = 575
---val = "t"
upper invoked. pos = 575
lower invoked. pos = 575
letter invoked. pos = 575
nonZeroDigit invoked. pos = 575
digit invoked. pos = 575
star[false]: pos = 575, val = i,s,t
whitespace invoked. pos = 575
singleLineComment invoked. pos = 575
multiLineComment invoked. pos = 575
comment invoked. pos = 575
star[false]: pos = 575, val = null
__ invoked. pos = 575
idrest invoked. pos = 572
---ret = 575
---val = ["i","s","t"]
varid invoked. pos = 571
---ret = 575
---val = ["l",["i","s","t"]]
plainid invoked. pos = 571
---ret = 575
---val = ["l",["i","s","t"]]
id invoked. pos = 571
---ret = 575
---val = ["l",["i","s","t"]]
ARROW invoked. pos = 575
IF invoked. pos = 571
WHILE invoked. pos = 571
NEW invoked. pos = 571
OPBRACE invoked. pos = 571
BlockExpr invoked. pos = 571
EmptyElemTag invoked. pos = 571
STag invoked. pos = 571
Element invoked. pos = 571
CDStart invoked. pos = 571
CDSect invoked. pos = 571
PI invoked. pos = 571
Comment invoked. pos = 571
XmlContent invoked. pos = 571
XmlExpr invoked. pos = 571
DOT invoked. pos = 575
Empty invoked. pos = 575
_StableId invoked. pos = 575
StableId invoked. pos = 571
---ret = 575
---val = ["l",["i","s","t"]]
Path invoked. pos = 571
---ret = 575
---val = ["l",["i","s","t"]]
UNDER invoked. pos = 575
OPBRACKET invoked. pos = 575
TypeArgs invoked. pos = 575
OPPAREN invoked. pos = 575
nl invoked. pos = 575
OPBRACE invoked. pos = 575
BlockExpr invoked. pos = 575
ArgumentExprs invoked. pos = 575
_SimpleExpr1 invoked. pos = 575
SimpleExpr1 invoked. pos = 571
---ret = 575
---val = ["l",["i","s","t"]]
HYPHEN invoked. pos = 571
PLUS invoked. pos = 571
SimpleExpr invoked. pos = 571
---ret = 575
---val = ["l",["i","s","t"]]
PrefixExpr invoked. pos = 571
---ret = 575
---val = ["l",["i","s","t"]]
varid invoked. pos = 575
opchar invoked. pos = 575
star[true]: pos = -1, val = null
op invoked. pos = 575
plainid invoked. pos = 575
id invoked. pos = 575
_InfixExpr invoked. pos = 575
InfixExpr invoked. pos = 571
---ret = 575
---val = ["l",["i","s","t"]]
PostfixExpr invoked. pos = 571
---ret = 575
---val = ["l",["i","s","t"]]
COLON invoked. pos = 575
Ascription invoked. pos = 575
Expr1 invoked. pos = 571
---ret = 575
---val = ["l",["i","s","t"]]
Expr invoked. pos = 571
---ret = 575
---val = ["l",["i","s","t"]]
IF invoked. pos = 575
Guard invoked. pos = 575
Generator invoked. pos = 566
---ret = 575
---val = [["i"," "],"<-"," ",["l",["i","s","t"]]]
SEMICOLON invoked. pos = 575
star[true]: pos = -1, val = null
semi invoked. pos = 575
star[false]: pos = 575, val = null
Enumerators invoked. pos = 566
---ret = 575
---val = [["i"," "],"<-"," ",["l",["i","s","t"]]]
whitespace invoked. pos = 576
singleLineComment invoked. pos = 576
multiLineComment invoked. pos = 576
comment invoked. pos = 576
star[false]: pos = 576, val = null
__ invoked. pos = 576
CLPAREN invoked. pos = 575
---ret = 576
---val = ")"
nl invoked. pos = 576
star[false]: pos = 576, val = null
OPPAREN invoked. pos = 576
Bindings invoked. pos = 576
IMPLICIT invoked. pos = 576
upper invoked. pos = 576
lower invoked. pos = 576
varid invoked. pos = 576
opchar invoked. pos = 576
star[true]: pos = -1, val = null
op invoked. pos = 576
plainid invoked. pos = 576
id invoked. pos = 576
UNDER invoked. pos = 576
IF invoked. pos = 576
WHILE invoked. pos = 576
NEW invoked. pos = 576
whitespace invoked. pos = 577
singleLineComment invoked. pos = 577
multiLineComment invoked. pos = 577
comment invoked. pos = 577
star[false]: pos = 577, val = null
__ invoked. pos = 577
OPBRACE invoked. pos = 576
---ret = 577
---val = "{"
CASE invoked. pos = 577
CaseClause invoked. pos = 577
star[true]: pos = -1, val = null
CaseClauses invoked. pos = 577
Import invoked. pos = 577
AT invoked. pos = 577
Annotation invoked. pos = 577
star[false]: pos = 577, val = null
IMPLICIT invoked. pos = 577
LAZY invoked. pos = 577
VAL invoked. pos = 577
VAR invoked. pos = 577
PatVarDef invoked. pos = 577
DEF invoked. pos = 577
TYPE invoked. pos = 577
OBJECT invoked. pos = 577
TmplDef invoked. pos = 577
Def invoked. pos = 577
star[false]: pos = 577, val = null
LocalModifier invoked. pos = 577
star[false]: pos = 577, val = null
IF invoked. pos = 577
WHILE invoked. pos = 577
OPPAREN invoked. pos = 577
NEW invoked. pos = 577
OPBRACE invoked. pos = 577
BlockExpr invoked. pos = 577
EmptyElemTag invoked. pos = 577
STag invoked. pos = 577
Element invoked. pos = 577
CDStart invoked. pos = 577
CDSect invoked. pos = 577
PI invoked. pos = 577
Comment invoked. pos = 577
XmlContent invoked. pos = 577
XmlExpr invoked. pos = 577
upper invoked. pos = 577
lower invoked. pos = 577
varid invoked. pos = 577
opchar invoked. pos = 577
star[true]: pos = -1, val = null
op invoked. pos = 577
plainid invoked. pos = 577
id invoked. pos = 577
THIS invoked. pos = 577
StableId invoked. pos = 577
Path invoked. pos = 577
HYPHEN invoked. pos = 577
nonZeroDigit invoked. pos = 577
decimalNumeral invoked. pos = 577
hexNumeral invoked. pos = 577
octalNumeral invoked. pos = 577
integerLiteral invoked. pos = 577
digit invoked. pos = 577
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 577
booleanLiteral invoked. pos = 577
characterLiteral invoked. pos = 577
stringLiteral invoked. pos = 577
symbolLiteral invoked. pos = 577
Literal invoked. pos = 577
UNDER invoked. pos = 577
SimpleExpr1 invoked. pos = 577
PLUS invoked. pos = 577
SimpleExpr invoked. pos = 577
PrefixExpr invoked. pos = 577
InfixExpr invoked. pos = 577
PostfixExpr invoked. pos = 577
Expr1 invoked. pos = 577
Empty invoked. pos = 577
BlockStat invoked. pos = 577
SEMICOLON invoked. pos = 577
whitespace invoked. pos = 578
---ret = 579
---val = " "
whitespace invoked. pos = 579
---ret = 580
---val = " "
whitespace invoked. pos = 580
---ret = 581
---val = " "
whitespace invoked. pos = 581
---ret = 582
---val = " "
whitespace invoked. pos = 582
---ret = 583
---val = " "
whitespace invoked. pos = 583
---ret = 584
---val = " "
whitespace invoked. pos = 584
nl invoked. pos = 586
nl invoked. pos = 587
nl invoked. pos = 588
nl invoked. pos = 589
nl invoked. pos = 590
nl invoked. pos = 591
nl invoked. pos = 592
nl invoked. pos = 593
nl invoked. pos = 594
nl invoked. pos = 595
nl invoked. pos = 596
nl invoked. pos = 597
nl invoked. pos = 598
nl invoked. pos = 599
nl invoked. pos = 600
nl invoked. pos = 601
nl invoked. pos = 602
nl invoked. pos = 603
nl invoked. pos = 604
nl invoked. pos = 605
nl invoked. pos = 606
nl invoked. pos = 607
nl invoked. pos = 608
nl invoked. pos = 609
nl invoked. pos = 610
nl invoked. pos = 611
nl invoked. pos = 612
nl invoked. pos = 613
nl invoked. pos = 614
nl invoked. pos = 615
nl invoked. pos = 616
nl invoked. pos = 617
nl invoked. pos = 618
nl invoked. pos = 619
nl invoked. pos = 620
nl invoked. pos = 621
whitespace invoked. pos = 623
---ret = 624
---val = " "
whitespace invoked. pos = 624
---ret = 625
---val = " "
whitespace invoked. pos = 625
---ret = 626
---val = " "
whitespace invoked. pos = 626
---ret = 627
---val = " "
whitespace invoked. pos = 627
---ret = 628
---val = " "
whitespace invoked. pos = 628
---ret = 629
---val = " "
whitespace invoked. pos = 629
singleLineComment invoked. pos = 629
multiLineComment invoked. pos = 629
comment invoked. pos = 629
star[false]: pos = 629, val =  , , , , , 
__ invoked. pos = 623
---ret = 629
---val = [" "," "," "," "," "," "]
nl invoked. pos = 622
---ret = 629
---val = ["\n",[" "," "," "," "," "," "]]
star[false]: pos = 622, val = v,a,l, ,i,n,p,u,t, ,=, ,s,c,.,n,e,x,t,(,),.,t,o,C,h,a,r,A,r,r,a,y,(,),;
nl invoked. pos = 629
star[true]: pos = 629, val = 
, , , , , , 
singleLineComment invoked. pos = 584
---ret = 629
---val = ["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]
comment invoked. pos = 584
---ret = 629
---val = ["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]
star[false]: pos = 629, val =  , , , , , ,//,v,a,l, ,i,n,p,u,t, ,=, ,s,c,.,n,e,x,t,(,),.,t,o,C,h,a,r,A,r,r,a,y,(,),;,
, , , , , , 
__ invoked. pos = 578
---ret = 629
---val = [" "," "," "," "," "," ",["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]]
nl invoked. pos = 577
---ret = 629
---val = ["\n",[" "," "," "," "," "," ",["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]]]
star[true]: pos = 629, val = 
, , , , , , ,//,v,a,l, ,i,n,p,u,t, ,=, ,s,c,.,n,e,x,t,(,),.,t,o,C,h,a,r,A,r,r,a,y,(,),;,
, , , , , , 
semi invoked. pos = 577
---ret = 629
---val = ["\n",[" "," "," "," "," "," ",["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]]]
Import invoked. pos = 629
AT invoked. pos = 629
Annotation invoked. pos = 629
star[false]: pos = 629, val = null
IMPLICIT invoked. pos = 629
LAZY invoked. pos = 629
whitespace invoked. pos = 632
---ret = 633
---val = " "
whitespace invoked. pos = 633
singleLineComment invoked. pos = 633
multiLineComment invoked. pos = 633
comment invoked. pos = 633
star[false]: pos = 633, val =  
__ invoked. pos = 632
---ret = 633
---val = " "
VAL invoked. pos = 629
---ret = 633
---val = ["val"," "]
lower invoked. pos = 633
---ret = 634
---val = "f"
upper invoked. pos = 634
lower invoked. pos = 634
letter invoked. pos = 634
nonZeroDigit invoked. pos = 634
digit invoked. pos = 634
star[false]: pos = 634, val = null
whitespace invoked. pos = 634
---ret = 635
---val = " "
whitespace invoked. pos = 635
singleLineComment invoked. pos = 635
multiLineComment invoked. pos = 635
comment invoked. pos = 635
star[false]: pos = 635, val =  
__ invoked. pos = 634
---ret = 635
---val = " "
idrest invoked. pos = 634
---ret = 635
---val = " "
varid invoked. pos = 633
---ret = 635
---val = ["f"," "]
AT invoked. pos = 635
Pattern2 invoked. pos = 633
---ret = 635
---val = ["f"," "]
COMMA invoked. pos = 635
star[false]: pos = 635, val = null
COLON invoked. pos = 635
whitespace invoked. pos = 636
---ret = 637
---val = " "
whitespace invoked. pos = 637
singleLineComment invoked. pos = 637
multiLineComment invoked. pos = 637
comment invoked. pos = 637
star[false]: pos = 637, val =  
__ invoked. pos = 636
---ret = 637
---val = " "
EQUAL invoked. pos = 635
---ret = 637
---val = ["="," "]
OPPAREN invoked. pos = 637
Bindings invoked. pos = 637
IMPLICIT invoked. pos = 637
upper invoked. pos = 637
lower invoked. pos = 637
---ret = 638
---val = "c"
upper invoked. pos = 638
lower invoked. pos = 638
---ret = 639
---val = "o"
letter invoked. pos = 638
---ret = 639
---val = "o"
upper invoked. pos = 639
lower invoked. pos = 639
---ret = 640
---val = "n"
letter invoked. pos = 639
---ret = 640
---val = "n"
upper invoked. pos = 640
lower invoked. pos = 640
---ret = 641
---val = "v"
letter invoked. pos = 640
---ret = 641
---val = "v"
upper invoked. pos = 641
lower invoked. pos = 641
letter invoked. pos = 641
nonZeroDigit invoked. pos = 641
digit invoked. pos = 641
star[false]: pos = 641, val = o,n,v
whitespace invoked. pos = 641
singleLineComment invoked. pos = 641
multiLineComment invoked. pos = 641
comment invoked. pos = 641
star[false]: pos = 641, val = null
__ invoked. pos = 641
idrest invoked. pos = 638
---ret = 641
---val = ["o","n","v"]
varid invoked. pos = 637
---ret = 641
---val = ["c",["o","n","v"]]
plainid invoked. pos = 637
---ret = 641
---val = ["c",["o","n","v"]]
id invoked. pos = 637
---ret = 641
---val = ["c",["o","n","v"]]
ARROW invoked. pos = 641
IF invoked. pos = 637
WHILE invoked. pos = 637
NEW invoked. pos = 637
OPBRACE invoked. pos = 637
BlockExpr invoked. pos = 637
EmptyElemTag invoked. pos = 637
STag invoked. pos = 637
Element invoked. pos = 637
CDStart invoked. pos = 637
CDSect invoked. pos = 637
PI invoked. pos = 637
Comment invoked. pos = 637
XmlContent invoked. pos = 637
XmlExpr invoked. pos = 637
DOT invoked. pos = 641
Empty invoked. pos = 641
_StableId invoked. pos = 641
StableId invoked. pos = 637
---ret = 641
---val = ["c",["o","n","v"]]
Path invoked. pos = 637
---ret = 641
---val = ["c",["o","n","v"]]
UNDER invoked. pos = 641
OPBRACKET invoked. pos = 641
TypeArgs invoked. pos = 641
whitespace invoked. pos = 642
singleLineComment invoked. pos = 642
multiLineComment invoked. pos = 642
comment invoked. pos = 642
star[false]: pos = 642, val = null
__ invoked. pos = 642
OPPAREN invoked. pos = 641
---ret = 642
---val = "("
OPPAREN invoked. pos = 642
Bindings invoked. pos = 642
IMPLICIT invoked. pos = 642
upper invoked. pos = 642
---ret = 643
---val = "_"
upper invoked. pos = 643
lower invoked. pos = 643
letter invoked. pos = 643
nonZeroDigit invoked. pos = 643
digit invoked. pos = 643
star[false]: pos = 643, val = null
whitespace invoked. pos = 643
singleLineComment invoked. pos = 643
multiLineComment invoked. pos = 643
comment invoked. pos = 643
star[false]: pos = 643, val = null
__ invoked. pos = 643
idrest invoked. pos = 643
plainid invoked. pos = 642
---ret = 643
---val = "_"
id invoked. pos = 642
---ret = 643
---val = "_"
ARROW invoked. pos = 643
IF invoked. pos = 642
WHILE invoked. pos = 642
NEW invoked. pos = 642
OPBRACE invoked. pos = 642
BlockExpr invoked. pos = 642
EmptyElemTag invoked. pos = 642
STag invoked. pos = 642
Element invoked. pos = 642
CDStart invoked. pos = 642
CDSect invoked. pos = 642
PI invoked. pos = 642
Comment invoked. pos = 642
XmlContent invoked. pos = 642
XmlExpr invoked. pos = 642
DOT invoked. pos = 643
Empty invoked. pos = 643
_StableId invoked. pos = 643
StableId invoked. pos = 642
---ret = 643
---val = "_"
Path invoked. pos = 642
---ret = 643
---val = "_"
UNDER invoked. pos = 643
OPBRACKET invoked. pos = 643
TypeArgs invoked. pos = 643
OPPAREN invoked. pos = 643
nl invoked. pos = 643
OPBRACE invoked. pos = 643
BlockExpr invoked. pos = 643
ArgumentExprs invoked. pos = 643
_SimpleExpr1 invoked. pos = 643
SimpleExpr1 invoked. pos = 642
---ret = 643
---val = "_"
HYPHEN invoked. pos = 642
PLUS invoked. pos = 642
SimpleExpr invoked. pos = 642
---ret = 643
---val = "_"
PrefixExpr invoked. pos = 642
---ret = 643
---val = "_"
varid invoked. pos = 643
opchar invoked. pos = 643
---ret = 644
---val = ":"
opchar invoked. pos = 644
---ret = 645
---val = "C"
opchar invoked. pos = 645
---ret = 646
---val = "h"
opchar invoked. pos = 646
---ret = 647
---val = "a"
opchar invoked. pos = 647
---ret = 648
---val = "r"
opchar invoked. pos = 648
star[true]: pos = 648, val = :,C,h,a,r
whitespace invoked. pos = 648
singleLineComment invoked. pos = 648
multiLineComment invoked. pos = 648
comment invoked. pos = 648
star[false]: pos = 648, val = null
__ invoked. pos = 648
op invoked. pos = 643
---ret = 648
---val = [":","C","h","a","r"]
plainid invoked. pos = 643
---ret = 648
---val = [":","C","h","a","r"]
id invoked. pos = 643
---ret = 648
---val = [":","C","h","a","r"]
nl invoked. pos = 648
HYPHEN invoked. pos = 648
PLUS invoked. pos = 648
NEW invoked. pos = 648
OPBRACE invoked. pos = 648
BlockExpr invoked. pos = 648
OPPAREN invoked. pos = 648
EmptyElemTag invoked. pos = 648
STag invoked. pos = 648
Element invoked. pos = 648
CDStart invoked. pos = 648
CDSect invoked. pos = 648
PI invoked. pos = 648
Comment invoked. pos = 648
XmlContent invoked. pos = 648
XmlExpr invoked. pos = 648
upper invoked. pos = 648
lower invoked. pos = 648
varid invoked. pos = 648
star[true]: pos = -1, val = null
op invoked. pos = 648
plainid invoked. pos = 648
id invoked. pos = 648
THIS invoked. pos = 648
StableId invoked. pos = 648
Path invoked. pos = 648
nonZeroDigit invoked. pos = 648
decimalNumeral invoked. pos = 648
hexNumeral invoked. pos = 648
octalNumeral invoked. pos = 648
integerLiteral invoked. pos = 648
digit invoked. pos = 648
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 648
booleanLiteral invoked. pos = 648
characterLiteral invoked. pos = 648
stringLiteral invoked. pos = 648
symbolLiteral invoked. pos = 648
Literal invoked. pos = 648
UNDER invoked. pos = 648
SimpleExpr1 invoked. pos = 648
SimpleExpr invoked. pos = 648
PrefixExpr invoked. pos = 648
InfixExpr invoked. pos = 648
_InfixExpr invoked. pos = 643
InfixExpr invoked. pos = 642
---ret = 643
---val = "_"
PostfixExpr invoked. pos = 642
---ret = 648
---val = ["_",[":","C","h","a","r"]]
COLON invoked. pos = 648
Ascription invoked. pos = 648
Expr1 invoked. pos = 642
---ret = 648
---val = ["_",[":","C","h","a","r"]]
Expr invoked. pos = 642
---ret = 648
---val = ["_",[":","C","h","a","r"]]
whitespace invoked. pos = 649
---ret = 650
---val = " "
whitespace invoked. pos = 650
singleLineComment invoked. pos = 650
multiLineComment invoked. pos = 650
comment invoked. pos = 650
star[false]: pos = 650, val =  
__ invoked. pos = 649
---ret = 650
---val = " "
COMMA invoked. pos = 648
---ret = 650
---val = [","," "]
OPPAREN invoked. pos = 650
Bindings invoked. pos = 650
IMPLICIT invoked. pos = 650
upper invoked. pos = 650
lower invoked. pos = 650
---ret = 651
---val = "m"
upper invoked. pos = 651
lower invoked. pos = 651
letter invoked. pos = 651
nonZeroDigit invoked. pos = 651
digit invoked. pos = 651
star[false]: pos = 651, val = null
whitespace invoked. pos = 651
singleLineComment invoked. pos = 651
multiLineComment invoked. pos = 651
comment invoked. pos = 651
star[false]: pos = 651, val = null
__ invoked. pos = 651
idrest invoked. pos = 651
varid invoked. pos = 650
---ret = 651
---val = "m"
plainid invoked. pos = 650
---ret = 651
---val = "m"
id invoked. pos = 650
---ret = 651
---val = "m"
ARROW invoked. pos = 651
IF invoked. pos = 650
WHILE invoked. pos = 650
NEW invoked. pos = 650
OPBRACE invoked. pos = 650
BlockExpr invoked. pos = 650
EmptyElemTag invoked. pos = 650
STag invoked. pos = 650
Element invoked. pos = 650
CDStart invoked. pos = 650
CDSect invoked. pos = 650
PI invoked. pos = 650
Comment invoked. pos = 650
XmlContent invoked. pos = 650
XmlExpr invoked. pos = 650
DOT invoked. pos = 651
Empty invoked. pos = 651
_StableId invoked. pos = 651
StableId invoked. pos = 650
---ret = 651
---val = "m"
Path invoked. pos = 650
---ret = 651
---val = "m"
UNDER invoked. pos = 651
OPBRACKET invoked. pos = 651
TypeArgs invoked. pos = 651
OPPAREN invoked. pos = 651
nl invoked. pos = 651
OPBRACE invoked. pos = 651
BlockExpr invoked. pos = 651
ArgumentExprs invoked. pos = 651
_SimpleExpr1 invoked. pos = 651
SimpleExpr1 invoked. pos = 650
---ret = 651
---val = "m"
HYPHEN invoked. pos = 650
PLUS invoked. pos = 650
SimpleExpr invoked. pos = 650
---ret = 651
---val = "m"
PrefixExpr invoked. pos = 650
---ret = 651
---val = "m"
varid invoked. pos = 651
opchar invoked. pos = 651
star[true]: pos = -1, val = null
op invoked. pos = 651
plainid invoked. pos = 651
id invoked. pos = 651
_InfixExpr invoked. pos = 651
InfixExpr invoked. pos = 650
---ret = 651
---val = "m"
PostfixExpr invoked. pos = 650
---ret = 651
---val = "m"
COLON invoked. pos = 651
Ascription invoked. pos = 651
Expr1 invoked. pos = 650
---ret = 651
---val = "m"
Expr invoked. pos = 650
---ret = 651
---val = "m"
COMMA invoked. pos = 651
star[false]: pos = 651, val = ,, ,m
Exprs invoked. pos = 642
---ret = 651
---val = [["_",[":","C","h","a","r"]],[[","," "],"m"]]
whitespace invoked. pos = 652
singleLineComment invoked. pos = 652
multiLineComment invoked. pos = 652
comment invoked. pos = 652
star[false]: pos = 652, val = null
__ invoked. pos = 652
CLPAREN invoked. pos = 651
---ret = 652
---val = ")"
ArgumentExprs invoked. pos = 641
---ret = 652
---val = ["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]
UNDER invoked. pos = 652
DOT invoked. pos = 652
OPBRACKET invoked. pos = 652
TypeArgs invoked. pos = 652
OPPAREN invoked. pos = 652
nl invoked. pos = 652
OPBRACE invoked. pos = 652
BlockExpr invoked. pos = 652
ArgumentExprs invoked. pos = 652
Empty invoked. pos = 652
_SimpleExpr1 invoked. pos = 652
_SimpleExpr1 invoked. pos = 641
---ret = 652
---val = ["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]
SimpleExpr1 invoked. pos = 637
---ret = 652
---val = [["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]
HYPHEN invoked. pos = 637
PLUS invoked. pos = 637
SimpleExpr invoked. pos = 637
---ret = 652
---val = [["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]
PrefixExpr invoked. pos = 637
---ret = 652
---val = [["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]
upper invoked. pos = 652
lower invoked. pos = 652
varid invoked. pos = 652
opchar invoked. pos = 652
star[true]: pos = -1, val = null
op invoked. pos = 652
plainid invoked. pos = 652
id invoked. pos = 652
_InfixExpr invoked. pos = 652
InfixExpr invoked. pos = 637
---ret = 652
---val = [["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]
PostfixExpr invoked. pos = 637
---ret = 652
---val = [["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]
COLON invoked. pos = 652
Ascription invoked. pos = 652
Expr1 invoked. pos = 637
---ret = 652
---val = [["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]
Expr invoked. pos = 637
---ret = 652
---val = [["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]
PatDef invoked. pos = 633
---ret = 652
---val = [["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]
PatVarDef invoked. pos = 629
---ret = 652
---val = [["val"," "],[["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]]
Def invoked. pos = 629
---ret = 652
---val = [["val"," "],[["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]]
BlockStat invoked. pos = 629
---ret = 652
---val = [["val"," "],[["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]]
whitespace invoked. pos = 653
singleLineComment invoked. pos = 653
multiLineComment invoked. pos = 653
comment invoked. pos = 653
star[false]: pos = 653, val = null
__ invoked. pos = 653
SEMICOLON invoked. pos = 652
---ret = 653
---val = ";"
semi invoked. pos = 652
---ret = 653
---val = ";"
Import invoked. pos = 653
AT invoked. pos = 653
Annotation invoked. pos = 653
star[false]: pos = 653, val = null
IMPLICIT invoked. pos = 653
LAZY invoked. pos = 653
VAL invoked. pos = 653
VAR invoked. pos = 653
PatVarDef invoked. pos = 653
DEF invoked. pos = 653
TYPE invoked. pos = 653
CASE invoked. pos = 653
OBJECT invoked. pos = 653
TmplDef invoked. pos = 653
Def invoked. pos = 653
star[false]: pos = 653, val = null
LocalModifier invoked. pos = 653
star[false]: pos = 653, val = null
IF invoked. pos = 653
WHILE invoked. pos = 653
OPPAREN invoked. pos = 653
NEW invoked. pos = 653
OPBRACE invoked. pos = 653
BlockExpr invoked. pos = 653
EmptyElemTag invoked. pos = 653
STag invoked. pos = 653
Element invoked. pos = 653
CDStart invoked. pos = 653
CDSect invoked. pos = 653
PI invoked. pos = 653
Comment invoked. pos = 653
XmlContent invoked. pos = 653
XmlExpr invoked. pos = 653
upper invoked. pos = 653
lower invoked. pos = 653
varid invoked. pos = 653
opchar invoked. pos = 653
star[true]: pos = -1, val = null
op invoked. pos = 653
plainid invoked. pos = 653
id invoked. pos = 653
THIS invoked. pos = 653
StableId invoked. pos = 653
Path invoked. pos = 653
HYPHEN invoked. pos = 653
nonZeroDigit invoked. pos = 653
decimalNumeral invoked. pos = 653
hexNumeral invoked. pos = 653
octalNumeral invoked. pos = 653
integerLiteral invoked. pos = 653
digit invoked. pos = 653
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 653
booleanLiteral invoked. pos = 653
characterLiteral invoked. pos = 653
stringLiteral invoked. pos = 653
symbolLiteral invoked. pos = 653
Literal invoked. pos = 653
UNDER invoked. pos = 653
SimpleExpr1 invoked. pos = 653
PLUS invoked. pos = 653
SimpleExpr invoked. pos = 653
PrefixExpr invoked. pos = 653
InfixExpr invoked. pos = 653
PostfixExpr invoked. pos = 653
Expr1 invoked. pos = 653
Empty invoked. pos = 653
BlockStat invoked. pos = 653
SEMICOLON invoked. pos = 653
whitespace invoked. pos = 654
---ret = 655
---val = " "
whitespace invoked. pos = 655
---ret = 656
---val = " "
whitespace invoked. pos = 656
---ret = 657
---val = " "
whitespace invoked. pos = 657
---ret = 658
---val = " "
whitespace invoked. pos = 658
---ret = 659
---val = " "
whitespace invoked. pos = 659
---ret = 660
---val = " "
whitespace invoked. pos = 660
singleLineComment invoked. pos = 660
multiLineComment invoked. pos = 660
comment invoked. pos = 660
star[false]: pos = 660, val =  , , , , , 
__ invoked. pos = 654
---ret = 660
---val = [" "," "," "," "," "," "]
nl invoked. pos = 653
---ret = 660
---val = ["\n",[" "," "," "," "," "," "]]
nl invoked. pos = 660
star[true]: pos = 660, val = 
, , , , , , 
semi invoked. pos = 653
---ret = 660
---val = ["\n",[" "," "," "," "," "," "]]
Import invoked. pos = 660
AT invoked. pos = 660
Annotation invoked. pos = 660
star[false]: pos = 660, val = null
IMPLICIT invoked. pos = 660
LAZY invoked. pos = 660
whitespace invoked. pos = 663
---ret = 664
---val = " "
whitespace invoked. pos = 664
singleLineComment invoked. pos = 664
multiLineComment invoked. pos = 664
comment invoked. pos = 664
star[false]: pos = 664, val =  
__ invoked. pos = 663
---ret = 664
---val = " "
VAL invoked. pos = 660
---ret = 664
---val = ["val"," "]
lower invoked. pos = 664
---ret = 665
---val = "a"
upper invoked. pos = 665
lower invoked. pos = 665
---ret = 666
---val = "n"
letter invoked. pos = 665
---ret = 666
---val = "n"
upper invoked. pos = 666
lower invoked. pos = 666
---ret = 667
---val = "s"
letter invoked. pos = 666
---ret = 667
---val = "s"
upper invoked. pos = 667
lower invoked. pos = 667
letter invoked. pos = 667
nonZeroDigit invoked. pos = 667
digit invoked. pos = 667
star[false]: pos = 667, val = n,s
whitespace invoked. pos = 667
---ret = 668
---val = " "
whitespace invoked. pos = 668
singleLineComment invoked. pos = 668
multiLineComment invoked. pos = 668
comment invoked. pos = 668
star[false]: pos = 668, val =  
__ invoked. pos = 667
---ret = 668
---val = " "
idrest invoked. pos = 665
---ret = 668
---val = [["n","s"]," "]
varid invoked. pos = 664
---ret = 668
---val = ["a",[["n","s"]," "]]
AT invoked. pos = 668
Pattern2 invoked. pos = 664
---ret = 668
---val = ["a",[["n","s"]," "]]
COMMA invoked. pos = 668
star[false]: pos = 668, val = null
COLON invoked. pos = 668
whitespace invoked. pos = 669
---ret = 670
---val = " "
whitespace invoked. pos = 670
singleLineComment invoked. pos = 670
multiLineComment invoked. pos = 670
comment invoked. pos = 670
star[false]: pos = 670, val =  
__ invoked. pos = 669
---ret = 670
---val = " "
EQUAL invoked. pos = 668
---ret = 670
---val = ["="," "]
OPPAREN invoked. pos = 670
Bindings invoked. pos = 670
IMPLICIT invoked. pos = 670
upper invoked. pos = 670
lower invoked. pos = 670
---ret = 671
---val = "i"
upper invoked. pos = 671
lower invoked. pos = 671
---ret = 672
---val = "n"
letter invoked. pos = 671
---ret = 672
---val = "n"
upper invoked. pos = 672
lower invoked. pos = 672
---ret = 673
---val = "p"
letter invoked. pos = 672
---ret = 673
---val = "p"
upper invoked. pos = 673
lower invoked. pos = 673
---ret = 674
---val = "u"
letter invoked. pos = 673
---ret = 674
---val = "u"
upper invoked. pos = 674
lower invoked. pos = 674
---ret = 675
---val = "t"
letter invoked. pos = 674
---ret = 675
---val = "t"
upper invoked. pos = 675
lower invoked. pos = 675
letter invoked. pos = 675
nonZeroDigit invoked. pos = 675
digit invoked. pos = 675
star[false]: pos = 675, val = n,p,u,t
whitespace invoked. pos = 675
singleLineComment invoked. pos = 675
multiLineComment invoked. pos = 675
comment invoked. pos = 675
star[false]: pos = 675, val = null
__ invoked. pos = 675
idrest invoked. pos = 671
---ret = 675
---val = ["n","p","u","t"]
varid invoked. pos = 670
---ret = 675
---val = ["i",["n","p","u","t"]]
plainid invoked. pos = 670
---ret = 675
---val = ["i",["n","p","u","t"]]
id invoked. pos = 670
---ret = 675
---val = ["i",["n","p","u","t"]]
ARROW invoked. pos = 675
IF invoked. pos = 670
WHILE invoked. pos = 670
NEW invoked. pos = 670
OPBRACE invoked. pos = 670
BlockExpr invoked. pos = 670
EmptyElemTag invoked. pos = 670
STag invoked. pos = 670
Element invoked. pos = 670
CDStart invoked. pos = 670
CDSect invoked. pos = 670
PI invoked. pos = 670
Comment invoked. pos = 670
XmlContent invoked. pos = 670
XmlExpr invoked. pos = 670
whitespace invoked. pos = 676
singleLineComment invoked. pos = 676
multiLineComment invoked. pos = 676
comment invoked. pos = 676
star[false]: pos = 676, val = null
__ invoked. pos = 676
DOT invoked. pos = 675
---ret = 676
---val = "."
upper invoked. pos = 676
lower invoked. pos = 676
---ret = 677
---val = "m"
upper invoked. pos = 677
lower invoked. pos = 677
---ret = 678
---val = "a"
letter invoked. pos = 677
---ret = 678
---val = "a"
upper invoked. pos = 678
lower invoked. pos = 678
---ret = 679
---val = "p"
letter invoked. pos = 678
---ret = 679
---val = "p"
upper invoked. pos = 679
lower invoked. pos = 679
letter invoked. pos = 679
nonZeroDigit invoked. pos = 679
digit invoked. pos = 679
star[false]: pos = 679, val = a,p
whitespace invoked. pos = 679
singleLineComment invoked. pos = 679
multiLineComment invoked. pos = 679
comment invoked. pos = 679
star[false]: pos = 679, val = null
__ invoked. pos = 679
idrest invoked. pos = 677
---ret = 679
---val = ["a","p"]
varid invoked. pos = 676
---ret = 679
---val = ["m",["a","p"]]
plainid invoked. pos = 676
---ret = 679
---val = ["m",["a","p"]]
id invoked. pos = 676
---ret = 679
---val = ["m",["a","p"]]
DOT invoked. pos = 679
Empty invoked. pos = 679
_StableId invoked. pos = 679
_StableId invoked. pos = 675
---ret = 679
---val = [".",["m",["a","p"]]]
StableId invoked. pos = 670
---ret = 679
---val = [["i",["n","p","u","t"]],[".",["m",["a","p"]]]]
Path invoked. pos = 670
---ret = 679
---val = [["i",["n","p","u","t"]],[".",["m",["a","p"]]]]
UNDER invoked. pos = 679
OPBRACKET invoked. pos = 679
TypeArgs invoked. pos = 679
whitespace invoked. pos = 680
singleLineComment invoked. pos = 680
multiLineComment invoked. pos = 680
comment invoked. pos = 680
star[false]: pos = 680, val = null
__ invoked. pos = 680
OPPAREN invoked. pos = 679
---ret = 680
---val = "("
OPPAREN invoked. pos = 680
Bindings invoked. pos = 680
IMPLICIT invoked. pos = 680
upper invoked. pos = 680
lower invoked. pos = 680
---ret = 681
---val = "f"
upper invoked. pos = 681
lower invoked. pos = 681
letter invoked. pos = 681
nonZeroDigit invoked. pos = 681
digit invoked. pos = 681
star[false]: pos = 681, val = null
whitespace invoked. pos = 681
singleLineComment invoked. pos = 681
multiLineComment invoked. pos = 681
comment invoked. pos = 681
star[false]: pos = 681, val = null
__ invoked. pos = 681
idrest invoked. pos = 681
varid invoked. pos = 680
---ret = 681
---val = "f"
plainid invoked. pos = 680
---ret = 681
---val = "f"
id invoked. pos = 680
---ret = 681
---val = "f"
ARROW invoked. pos = 681
IF invoked. pos = 680
WHILE invoked. pos = 680
NEW invoked. pos = 680
OPBRACE invoked. pos = 680
BlockExpr invoked. pos = 680
EmptyElemTag invoked. pos = 680
STag invoked. pos = 680
Element invoked. pos = 680
CDStart invoked. pos = 680
CDSect invoked. pos = 680
PI invoked. pos = 680
Comment invoked. pos = 680
XmlContent invoked. pos = 680
XmlExpr invoked. pos = 680
DOT invoked. pos = 681
Empty invoked. pos = 681
_StableId invoked. pos = 681
StableId invoked. pos = 680
---ret = 681
---val = "f"
Path invoked. pos = 680
---ret = 681
---val = "f"
UNDER invoked. pos = 681
OPBRACKET invoked. pos = 681
TypeArgs invoked. pos = 681
OPPAREN invoked. pos = 681
nl invoked. pos = 681
OPBRACE invoked. pos = 681
BlockExpr invoked. pos = 681
ArgumentExprs invoked. pos = 681
_SimpleExpr1 invoked. pos = 681
SimpleExpr1 invoked. pos = 680
---ret = 681
---val = "f"
HYPHEN invoked. pos = 680
PLUS invoked. pos = 680
SimpleExpr invoked. pos = 680
---ret = 681
---val = "f"
PrefixExpr invoked. pos = 680
---ret = 681
---val = "f"
varid invoked. pos = 681
opchar invoked. pos = 681
star[true]: pos = -1, val = null
op invoked. pos = 681
plainid invoked. pos = 681
id invoked. pos = 681
_InfixExpr invoked. pos = 681
InfixExpr invoked. pos = 680
---ret = 681
---val = "f"
PostfixExpr invoked. pos = 680
---ret = 681
---val = "f"
COLON invoked. pos = 681
Ascription invoked. pos = 681
Expr1 invoked. pos = 680
---ret = 681
---val = "f"
Expr invoked. pos = 680
---ret = 681
---val = "f"
COMMA invoked. pos = 681
star[false]: pos = 681, val = null
Exprs invoked. pos = 680
---ret = 681
---val = "f"
whitespace invoked. pos = 682
singleLineComment invoked. pos = 682
multiLineComment invoked. pos = 682
comment invoked. pos = 682
star[false]: pos = 682, val = null
__ invoked. pos = 682
CLPAREN invoked. pos = 681
---ret = 682
---val = ")"
ArgumentExprs invoked. pos = 679
---ret = 682
---val = ["(","f",")"]
UNDER invoked. pos = 682
DOT invoked. pos = 682
OPBRACKET invoked. pos = 682
TypeArgs invoked. pos = 682
OPPAREN invoked. pos = 682
nl invoked. pos = 682
OPBRACE invoked. pos = 682
BlockExpr invoked. pos = 682
ArgumentExprs invoked. pos = 682
Empty invoked. pos = 682
_SimpleExpr1 invoked. pos = 682
_SimpleExpr1 invoked. pos = 679
---ret = 682
---val = ["(","f",")"]
SimpleExpr1 invoked. pos = 670
---ret = 682
---val = [[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]
HYPHEN invoked. pos = 670
PLUS invoked. pos = 670
SimpleExpr invoked. pos = 670
---ret = 682
---val = [[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]
PrefixExpr invoked. pos = 670
---ret = 682
---val = [[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]
upper invoked. pos = 682
lower invoked. pos = 682
varid invoked. pos = 682
opchar invoked. pos = 682
star[true]: pos = -1, val = null
op invoked. pos = 682
plainid invoked. pos = 682
id invoked. pos = 682
_InfixExpr invoked. pos = 682
InfixExpr invoked. pos = 670
---ret = 682
---val = [[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]
PostfixExpr invoked. pos = 670
---ret = 682
---val = [[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]
COLON invoked. pos = 682
Ascription invoked. pos = 682
Expr1 invoked. pos = 670
---ret = 682
---val = [[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]
Expr invoked. pos = 670
---ret = 682
---val = [[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]
PatDef invoked. pos = 664
---ret = 682
---val = [["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]
PatVarDef invoked. pos = 660
---ret = 682
---val = [["val"," "],[["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]]
Def invoked. pos = 660
---ret = 682
---val = [["val"," "],[["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]]
BlockStat invoked. pos = 660
---ret = 682
---val = [["val"," "],[["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]]
whitespace invoked. pos = 683
singleLineComment invoked. pos = 683
multiLineComment invoked. pos = 683
comment invoked. pos = 683
star[false]: pos = 683, val = null
__ invoked. pos = 683
SEMICOLON invoked. pos = 682
---ret = 683
---val = ";"
semi invoked. pos = 682
---ret = 683
---val = ";"
Import invoked. pos = 683
AT invoked. pos = 683
Annotation invoked. pos = 683
star[false]: pos = 683, val = null
IMPLICIT invoked. pos = 683
LAZY invoked. pos = 683
VAL invoked. pos = 683
VAR invoked. pos = 683
PatVarDef invoked. pos = 683
DEF invoked. pos = 683
TYPE invoked. pos = 683
CASE invoked. pos = 683
OBJECT invoked. pos = 683
TmplDef invoked. pos = 683
Def invoked. pos = 683
star[false]: pos = 683, val = null
LocalModifier invoked. pos = 683
star[false]: pos = 683, val = null
IF invoked. pos = 683
WHILE invoked. pos = 683
OPPAREN invoked. pos = 683
NEW invoked. pos = 683
OPBRACE invoked. pos = 683
BlockExpr invoked. pos = 683
EmptyElemTag invoked. pos = 683
STag invoked. pos = 683
Element invoked. pos = 683
CDStart invoked. pos = 683
CDSect invoked. pos = 683
PI invoked. pos = 683
Comment invoked. pos = 683
XmlContent invoked. pos = 683
XmlExpr invoked. pos = 683
upper invoked. pos = 683
lower invoked. pos = 683
varid invoked. pos = 683
opchar invoked. pos = 683
star[true]: pos = -1, val = null
op invoked. pos = 683
plainid invoked. pos = 683
id invoked. pos = 683
THIS invoked. pos = 683
StableId invoked. pos = 683
Path invoked. pos = 683
HYPHEN invoked. pos = 683
nonZeroDigit invoked. pos = 683
decimalNumeral invoked. pos = 683
hexNumeral invoked. pos = 683
octalNumeral invoked. pos = 683
integerLiteral invoked. pos = 683
digit invoked. pos = 683
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 683
booleanLiteral invoked. pos = 683
characterLiteral invoked. pos = 683
stringLiteral invoked. pos = 683
symbolLiteral invoked. pos = 683
Literal invoked. pos = 683
UNDER invoked. pos = 683
SimpleExpr1 invoked. pos = 683
PLUS invoked. pos = 683
SimpleExpr invoked. pos = 683
PrefixExpr invoked. pos = 683
InfixExpr invoked. pos = 683
PostfixExpr invoked. pos = 683
Expr1 invoked. pos = 683
Empty invoked. pos = 683
BlockStat invoked. pos = 683
SEMICOLON invoked. pos = 683
whitespace invoked. pos = 684
---ret = 685
---val = " "
whitespace invoked. pos = 685
---ret = 686
---val = " "
whitespace invoked. pos = 686
---ret = 687
---val = " "
whitespace invoked. pos = 687
---ret = 688
---val = " "
whitespace invoked. pos = 688
---ret = 689
---val = " "
whitespace invoked. pos = 689
---ret = 690
---val = " "
whitespace invoked. pos = 690
singleLineComment invoked. pos = 690
multiLineComment invoked. pos = 690
comment invoked. pos = 690
star[false]: pos = 690, val =  , , , , , 
__ invoked. pos = 684
---ret = 690
---val = [" "," "," "," "," "," "]
nl invoked. pos = 683
---ret = 690
---val = ["\n",[" "," "," "," "," "," "]]
nl invoked. pos = 690
star[true]: pos = 690, val = 
, , , , , , 
semi invoked. pos = 683
---ret = 690
---val = ["\n",[" "," "," "," "," "," "]]
Import invoked. pos = 690
AT invoked. pos = 690
Annotation invoked. pos = 690
star[false]: pos = 690, val = null
IMPLICIT invoked. pos = 690
LAZY invoked. pos = 690
VAL invoked. pos = 690
VAR invoked. pos = 690
PatVarDef invoked. pos = 690
DEF invoked. pos = 690
TYPE invoked. pos = 690
CASE invoked. pos = 690
OBJECT invoked. pos = 690
TmplDef invoked. pos = 690
Def invoked. pos = 690
star[false]: pos = 690, val = null
LocalModifier invoked. pos = 690
star[false]: pos = 690, val = null
IF invoked. pos = 690
WHILE invoked. pos = 690
OPPAREN invoked. pos = 690
NEW invoked. pos = 690
OPBRACE invoked. pos = 690
BlockExpr invoked. pos = 690
EmptyElemTag invoked. pos = 690
STag invoked. pos = 690
Element invoked. pos = 690
CDStart invoked. pos = 690
CDSect invoked. pos = 690
PI invoked. pos = 690
Comment invoked. pos = 690
XmlContent invoked. pos = 690
XmlExpr invoked. pos = 690
upper invoked. pos = 690
lower invoked. pos = 690
---ret = 691
---val = "p"
upper invoked. pos = 691
lower invoked. pos = 691
---ret = 692
---val = "r"
letter invoked. pos = 691
---ret = 692
---val = "r"
upper invoked. pos = 692
lower invoked. pos = 692
---ret = 693
---val = "i"
letter invoked. pos = 692
---ret = 693
---val = "i"
upper invoked. pos = 693
lower invoked. pos = 693
---ret = 694
---val = "n"
letter invoked. pos = 693
---ret = 694
---val = "n"
upper invoked. pos = 694
lower invoked. pos = 694
---ret = 695
---val = "t"
letter invoked. pos = 694
---ret = 695
---val = "t"
upper invoked. pos = 695
lower invoked. pos = 695
---ret = 696
---val = "l"
letter invoked. pos = 695
---ret = 696
---val = "l"
upper invoked. pos = 696
lower invoked. pos = 696
---ret = 697
---val = "n"
letter invoked. pos = 696
---ret = 697
---val = "n"
upper invoked. pos = 697
lower invoked. pos = 697
letter invoked. pos = 697
nonZeroDigit invoked. pos = 697
digit invoked. pos = 697
star[false]: pos = 697, val = r,i,n,t,l,n
whitespace invoked. pos = 697
singleLineComment invoked. pos = 697
multiLineComment invoked. pos = 697
comment invoked. pos = 697
star[false]: pos = 697, val = null
__ invoked. pos = 697
idrest invoked. pos = 691
---ret = 697
---val = ["r","i","n","t","l","n"]
varid invoked. pos = 690
---ret = 697
---val = ["p",["r","i","n","t","l","n"]]
plainid invoked. pos = 690
---ret = 697
---val = ["p",["r","i","n","t","l","n"]]
id invoked. pos = 690
---ret = 697
---val = ["p",["r","i","n","t","l","n"]]
DOT invoked. pos = 697
Empty invoked. pos = 697
_StableId invoked. pos = 697
StableId invoked. pos = 690
---ret = 697
---val = ["p",["r","i","n","t","l","n"]]
Path invoked. pos = 690
---ret = 697
---val = ["p",["r","i","n","t","l","n"]]
UNDER invoked. pos = 697
OPBRACKET invoked. pos = 697
TypeArgs invoked. pos = 697
whitespace invoked. pos = 698
singleLineComment invoked. pos = 698
multiLineComment invoked. pos = 698
comment invoked. pos = 698
star[false]: pos = 698, val = null
__ invoked. pos = 698
OPPAREN invoked. pos = 697
---ret = 698
---val = "("
OPPAREN invoked. pos = 698
Bindings invoked. pos = 698
IMPLICIT invoked. pos = 698
upper invoked. pos = 698
lower invoked. pos = 698
---ret = 699
---val = "i"
upper invoked. pos = 699
lower invoked. pos = 699
letter invoked. pos = 699
nonZeroDigit invoked. pos = 699
digit invoked. pos = 699
star[false]: pos = 699, val = null
whitespace invoked. pos = 699
singleLineComment invoked. pos = 699
multiLineComment invoked. pos = 699
comment invoked. pos = 699
star[false]: pos = 699, val = null
__ invoked. pos = 699
idrest invoked. pos = 699
varid invoked. pos = 698
---ret = 699
---val = "i"
plainid invoked. pos = 698
---ret = 699
---val = "i"
id invoked. pos = 698
---ret = 699
---val = "i"
ARROW invoked. pos = 699
IF invoked. pos = 698
WHILE invoked. pos = 698
NEW invoked. pos = 698
OPBRACE invoked. pos = 698
BlockExpr invoked. pos = 698
EmptyElemTag invoked. pos = 698
STag invoked. pos = 698
Element invoked. pos = 698
CDStart invoked. pos = 698
CDSect invoked. pos = 698
PI invoked. pos = 698
Comment invoked. pos = 698
XmlContent invoked. pos = 698
XmlExpr invoked. pos = 698
DOT invoked. pos = 699
Empty invoked. pos = 699
_StableId invoked. pos = 699
StableId invoked. pos = 698
---ret = 699
---val = "i"
Path invoked. pos = 698
---ret = 699
---val = "i"
UNDER invoked. pos = 699
OPBRACKET invoked. pos = 699
TypeArgs invoked. pos = 699
OPPAREN invoked. pos = 699
nl invoked. pos = 699
OPBRACE invoked. pos = 699
BlockExpr invoked. pos = 699
ArgumentExprs invoked. pos = 699
_SimpleExpr1 invoked. pos = 699
SimpleExpr1 invoked. pos = 698
---ret = 699
---val = "i"
HYPHEN invoked. pos = 698
PLUS invoked. pos = 698
SimpleExpr invoked. pos = 698
---ret = 699
---val = "i"
PrefixExpr invoked. pos = 698
---ret = 699
---val = "i"
varid invoked. pos = 699
opchar invoked. pos = 699
star[true]: pos = -1, val = null
op invoked. pos = 699
plainid invoked. pos = 699
id invoked. pos = 699
_InfixExpr invoked. pos = 699
InfixExpr invoked. pos = 698
---ret = 699
---val = "i"
PostfixExpr invoked. pos = 698
---ret = 699
---val = "i"
COLON invoked. pos = 699
Ascription invoked. pos = 699
Expr1 invoked. pos = 698
---ret = 699
---val = "i"
Expr invoked. pos = 698
---ret = 699
---val = "i"
COMMA invoked. pos = 699
star[false]: pos = 699, val = null
Exprs invoked. pos = 698
---ret = 699
---val = "i"
whitespace invoked. pos = 700
singleLineComment invoked. pos = 700
multiLineComment invoked. pos = 700
comment invoked. pos = 700
star[false]: pos = 700, val = null
__ invoked. pos = 700
CLPAREN invoked. pos = 699
---ret = 700
---val = ")"
ArgumentExprs invoked. pos = 697
---ret = 700
---val = ["(","i",")"]
UNDER invoked. pos = 700
DOT invoked. pos = 700
OPBRACKET invoked. pos = 700
TypeArgs invoked. pos = 700
OPPAREN invoked. pos = 700
nl invoked. pos = 700
OPBRACE invoked. pos = 700
BlockExpr invoked. pos = 700
ArgumentExprs invoked. pos = 700
Empty invoked. pos = 700
_SimpleExpr1 invoked. pos = 700
_SimpleExpr1 invoked. pos = 697
---ret = 700
---val = ["(","i",")"]
SimpleExpr1 invoked. pos = 690
---ret = 700
---val = [["p",["r","i","n","t","l","n"]],["(","i",")"]]
HYPHEN invoked. pos = 690
PLUS invoked. pos = 690
SimpleExpr invoked. pos = 690
---ret = 700
---val = [["p",["r","i","n","t","l","n"]],["(","i",")"]]
PrefixExpr invoked. pos = 690
---ret = 700
---val = [["p",["r","i","n","t","l","n"]],["(","i",")"]]
upper invoked. pos = 700
lower invoked. pos = 700
varid invoked. pos = 700
opchar invoked. pos = 700
star[true]: pos = -1, val = null
op invoked. pos = 700
plainid invoked. pos = 700
id invoked. pos = 700
_InfixExpr invoked. pos = 700
InfixExpr invoked. pos = 690
---ret = 700
---val = [["p",["r","i","n","t","l","n"]],["(","i",")"]]
PostfixExpr invoked. pos = 690
---ret = 700
---val = [["p",["r","i","n","t","l","n"]],["(","i",")"]]
COLON invoked. pos = 700
Ascription invoked. pos = 700
Expr1 invoked. pos = 690
---ret = 700
---val = [["p",["r","i","n","t","l","n"]],["(","i",")"]]
BlockStat invoked. pos = 690
---ret = 700
---val = [["p",["r","i","n","t","l","n"]],["(","i",")"]]
whitespace invoked. pos = 701
singleLineComment invoked. pos = 701
multiLineComment invoked. pos = 701
comment invoked. pos = 701
star[false]: pos = 701, val = null
__ invoked. pos = 701
SEMICOLON invoked. pos = 700
---ret = 701
---val = ";"
semi invoked. pos = 700
---ret = 701
---val = ";"
Import invoked. pos = 701
AT invoked. pos = 701
Annotation invoked. pos = 701
star[false]: pos = 701, val = null
IMPLICIT invoked. pos = 701
LAZY invoked. pos = 701
VAL invoked. pos = 701
VAR invoked. pos = 701
PatVarDef invoked. pos = 701
DEF invoked. pos = 701
TYPE invoked. pos = 701
CASE invoked. pos = 701
OBJECT invoked. pos = 701
TmplDef invoked. pos = 701
Def invoked. pos = 701
star[false]: pos = 701, val = null
LocalModifier invoked. pos = 701
star[false]: pos = 701, val = null
IF invoked. pos = 701
WHILE invoked. pos = 701
OPPAREN invoked. pos = 701
NEW invoked. pos = 701
OPBRACE invoked. pos = 701
BlockExpr invoked. pos = 701
EmptyElemTag invoked. pos = 701
STag invoked. pos = 701
Element invoked. pos = 701
CDStart invoked. pos = 701
CDSect invoked. pos = 701
PI invoked. pos = 701
Comment invoked. pos = 701
XmlContent invoked. pos = 701
XmlExpr invoked. pos = 701
upper invoked. pos = 701
lower invoked. pos = 701
varid invoked. pos = 701
opchar invoked. pos = 701
star[true]: pos = -1, val = null
op invoked. pos = 701
plainid invoked. pos = 701
id invoked. pos = 701
THIS invoked. pos = 701
StableId invoked. pos = 701
Path invoked. pos = 701
HYPHEN invoked. pos = 701
nonZeroDigit invoked. pos = 701
decimalNumeral invoked. pos = 701
hexNumeral invoked. pos = 701
octalNumeral invoked. pos = 701
integerLiteral invoked. pos = 701
digit invoked. pos = 701
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 701
booleanLiteral invoked. pos = 701
characterLiteral invoked. pos = 701
stringLiteral invoked. pos = 701
symbolLiteral invoked. pos = 701
Literal invoked. pos = 701
UNDER invoked. pos = 701
SimpleExpr1 invoked. pos = 701
PLUS invoked. pos = 701
SimpleExpr invoked. pos = 701
PrefixExpr invoked. pos = 701
InfixExpr invoked. pos = 701
PostfixExpr invoked. pos = 701
Expr1 invoked. pos = 701
Empty invoked. pos = 701
BlockStat invoked. pos = 701
SEMICOLON invoked. pos = 701
whitespace invoked. pos = 702
singleLineComment invoked. pos = 702
multiLineComment invoked. pos = 702
comment invoked. pos = 702
star[false]: pos = 702, val = null
__ invoked. pos = 702
nl invoked. pos = 701
---ret = 702
---val = "\n"
whitespace invoked. pos = 703
---ret = 704
---val = " "
whitespace invoked. pos = 704
---ret = 705
---val = " "
whitespace invoked. pos = 705
singleLineComment invoked. pos = 705
multiLineComment invoked. pos = 705
comment invoked. pos = 705
star[false]: pos = 705, val =  , 
__ invoked. pos = 703
---ret = 705
---val = [" "," "]
nl invoked. pos = 702
---ret = 705
---val = ["\n",[" "," "]]
nl invoked. pos = 705
star[true]: pos = 705, val = 
,
, , 
semi invoked. pos = 701
---ret = 705
---val = ["\n",["\n",[" "," "]]]
Import invoked. pos = 705
AT invoked. pos = 705
Annotation invoked. pos = 705
star[false]: pos = 705, val = null
IMPLICIT invoked. pos = 705
LAZY invoked. pos = 705
VAL invoked. pos = 705
VAR invoked. pos = 705
PatVarDef invoked. pos = 705
DEF invoked. pos = 705
TYPE invoked. pos = 705
CASE invoked. pos = 705
OBJECT invoked. pos = 705
TmplDef invoked. pos = 705
Def invoked. pos = 705
star[false]: pos = 705, val = null
LocalModifier invoked. pos = 705
star[false]: pos = 705, val = null
IF invoked. pos = 705
WHILE invoked. pos = 705
OPPAREN invoked. pos = 705
NEW invoked. pos = 705
OPBRACE invoked. pos = 705
BlockExpr invoked. pos = 705
EmptyElemTag invoked. pos = 705
STag invoked. pos = 705
Element invoked. pos = 705
CDStart invoked. pos = 705
CDSect invoked. pos = 705
PI invoked. pos = 705
Comment invoked. pos = 705
XmlContent invoked. pos = 705
XmlExpr invoked. pos = 705
upper invoked. pos = 705
lower invoked. pos = 705
varid invoked. pos = 705
opchar invoked. pos = 705
star[true]: pos = -1, val = null
op invoked. pos = 705
plainid invoked. pos = 705
id invoked. pos = 705
THIS invoked. pos = 705
StableId invoked. pos = 705
Path invoked. pos = 705
HYPHEN invoked. pos = 705
nonZeroDigit invoked. pos = 705
decimalNumeral invoked. pos = 705
hexNumeral invoked. pos = 705
octalNumeral invoked. pos = 705
integerLiteral invoked. pos = 705
digit invoked. pos = 705
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 705
booleanLiteral invoked. pos = 705
characterLiteral invoked. pos = 705
stringLiteral invoked. pos = 705
symbolLiteral invoked. pos = 705
Literal invoked. pos = 705
UNDER invoked. pos = 705
SimpleExpr1 invoked. pos = 705
PLUS invoked. pos = 705
SimpleExpr invoked. pos = 705
PrefixExpr invoked. pos = 705
InfixExpr invoked. pos = 705
PostfixExpr invoked. pos = 705
Expr1 invoked. pos = 705
Empty invoked. pos = 705
BlockStat invoked. pos = 705
SEMICOLON invoked. pos = 705
star[true]: pos = -1, val = null
semi invoked. pos = 705
star[false]: pos = 705, val = 
, , , , , , ,//,v,a,l, ,i,n,p,u,t, ,=, ,s,c,.,n,e,x,t,(,),.,t,o,C,h,a,r,A,r,r,a,y,(,),;,
, , , , , , ,val, ,f, ,=, ,c,o,n,v,(,_,:,C,h,a,r,,, ,m,),;,
, , , , , , ,val, ,a,n,s, ,=, ,i,n,p,u,t,.,m,a,p,(,f,),;,
, , , , , , ,p,r,i,n,t,l,n,(,i,),;,
,
, , 
Bindings invoked. pos = 705
ResultExpr invoked. pos = 705
Block invoked. pos = 577
---ret = 705
---val = [["\n",[" "," "," "," "," "," ",["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]]],[[["val"," "],[["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["val"," "],[["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["p",["r","i","n","t","l","n"]],["(","i",")"]],";"],["\n",["\n",[" "," "]]]]
whitespace invoked. pos = 706
singleLineComment invoked. pos = 706
multiLineComment invoked. pos = 706
comment invoked. pos = 706
star[false]: pos = 706, val = null
__ invoked. pos = 706
CLBRACE invoked. pos = 705
---ret = 706
---val = "}"
BlockExpr invoked. pos = 576
---ret = 706
---val = ["{",[["\n",[" "," "," "," "," "," ",["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]]],[[["val"," "],[["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["val"," "],[["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["p",["r","i","n","t","l","n"]],["(","i",")"]],";"],["\n",["\n",[" "," "]]]],"}"]
DOT invoked. pos = 706
OPBRACKET invoked. pos = 706
TypeArgs invoked. pos = 706
EmptyElemTag invoked. pos = 576
STag invoked. pos = 576
Element invoked. pos = 576
CDStart invoked. pos = 576
CDSect invoked. pos = 576
PI invoked. pos = 576
Comment invoked. pos = 576
XmlContent invoked. pos = 576
XmlExpr invoked. pos = 576
THIS invoked. pos = 576
StableId invoked. pos = 576
Path invoked. pos = 576
HYPHEN invoked. pos = 576
nonZeroDigit invoked. pos = 576
decimalNumeral invoked. pos = 576
hexNumeral invoked. pos = 576
octalNumeral invoked. pos = 576
integerLiteral invoked. pos = 576
digit invoked. pos = 576
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 576
booleanLiteral invoked. pos = 576
characterLiteral invoked. pos = 576
stringLiteral invoked. pos = 576
symbolLiteral invoked. pos = 576
Literal invoked. pos = 576
SimpleExpr1 invoked. pos = 576
PLUS invoked. pos = 576
SimpleExpr invoked. pos = 576
---ret = 706
---val = ["{",[["\n",[" "," "," "," "," "," ",["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]]],[[["val"," "],[["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["val"," "],[["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["p",["r","i","n","t","l","n"]],["(","i",")"]],";"],["\n",["\n",[" "," "]]]],"}"]
PrefixExpr invoked. pos = 576
---ret = 706
---val = ["{",[["\n",[" "," "," "," "," "," ",["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]]],[[["val"," "],[["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["val"," "],[["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["p",["r","i","n","t","l","n"]],["(","i",")"]],";"],["\n",["\n",[" "," "]]]],"}"]
whitespace invoked. pos = 707
---ret = 708
---val = " "
whitespace invoked. pos = 708
---ret = 709
---val = " "
whitespace invoked. pos = 709
singleLineComment invoked. pos = 709
multiLineComment invoked. pos = 709
comment invoked. pos = 709
star[false]: pos = 709, val =  , 
__ invoked. pos = 707
---ret = 709
---val = [" "," "]
nl invoked. pos = 706
---ret = 709
---val = ["\n",[" "," "]]
upper invoked. pos = 709
lower invoked. pos = 709
---ret = 710
---val = "d"
upper invoked. pos = 710
lower invoked. pos = 710
---ret = 711
---val = "e"
letter invoked. pos = 710
---ret = 711
---val = "e"
upper invoked. pos = 711
lower invoked. pos = 711
---ret = 712
---val = "f"
letter invoked. pos = 711
---ret = 712
---val = "f"
upper invoked. pos = 712
lower invoked. pos = 712
letter invoked. pos = 712
nonZeroDigit invoked. pos = 712
digit invoked. pos = 712
star[false]: pos = 712, val = e,f
whitespace invoked. pos = 712
---ret = 713
---val = " "
whitespace invoked. pos = 713
singleLineComment invoked. pos = 713
multiLineComment invoked. pos = 713
comment invoked. pos = 713
star[false]: pos = 713, val =  
__ invoked. pos = 712
---ret = 713
---val = " "
idrest invoked. pos = 710
---ret = 713
---val = [["e","f"]," "]
varid invoked. pos = 709
---ret = 713
---val = ["d",[["e","f"]," "]]
plainid invoked. pos = 709
---ret = 713
---val = ["d",[["e","f"]," "]]
id invoked. pos = 709
---ret = 713
---val = ["d",[["e","f"]," "]]
nl invoked. pos = 713
HYPHEN invoked. pos = 713
PLUS invoked. pos = 713
NEW invoked. pos = 713
OPBRACE invoked. pos = 713
BlockExpr invoked. pos = 713
OPPAREN invoked. pos = 713
EmptyElemTag invoked. pos = 713
STag invoked. pos = 713
Element invoked. pos = 713
CDStart invoked. pos = 713
CDSect invoked. pos = 713
PI invoked. pos = 713
Comment invoked. pos = 713
XmlContent invoked. pos = 713
XmlExpr invoked. pos = 713
upper invoked. pos = 713
lower invoked. pos = 713
---ret = 714
---val = "c"
upper invoked. pos = 714
lower invoked. pos = 714
---ret = 715
---val = "o"
letter invoked. pos = 714
---ret = 715
---val = "o"
upper invoked. pos = 715
lower invoked. pos = 715
---ret = 716
---val = "n"
letter invoked. pos = 715
---ret = 716
---val = "n"
upper invoked. pos = 716
lower invoked. pos = 716
---ret = 717
---val = "v"
letter invoked. pos = 716
---ret = 717
---val = "v"
upper invoked. pos = 717
lower invoked. pos = 717
letter invoked. pos = 717
nonZeroDigit invoked. pos = 717
digit invoked. pos = 717
star[false]: pos = 717, val = o,n,v
whitespace invoked. pos = 717
singleLineComment invoked. pos = 717
multiLineComment invoked. pos = 717
comment invoked. pos = 717
star[false]: pos = 717, val = null
__ invoked. pos = 717
idrest invoked. pos = 714
---ret = 717
---val = ["o","n","v"]
varid invoked. pos = 713
---ret = 717
---val = ["c",["o","n","v"]]
plainid invoked. pos = 713
---ret = 717
---val = ["c",["o","n","v"]]
id invoked. pos = 713
---ret = 717
---val = ["c",["o","n","v"]]
DOT invoked. pos = 717
Empty invoked. pos = 717
_StableId invoked. pos = 717
StableId invoked. pos = 713
---ret = 717
---val = ["c",["o","n","v"]]
Path invoked. pos = 713
---ret = 717
---val = ["c",["o","n","v"]]
UNDER invoked. pos = 717
OPBRACKET invoked. pos = 717
TypeArgs invoked. pos = 717
whitespace invoked. pos = 718
singleLineComment invoked. pos = 718
multiLineComment invoked. pos = 718
comment invoked. pos = 718
star[false]: pos = 718, val = null
__ invoked. pos = 718
OPPAREN invoked. pos = 717
---ret = 718
---val = "("
OPPAREN invoked. pos = 718
Bindings invoked. pos = 718
IMPLICIT invoked. pos = 718
upper invoked. pos = 718
lower invoked. pos = 718
---ret = 719
---val = "c"
upper invoked. pos = 719
lower invoked. pos = 719
letter invoked. pos = 719
nonZeroDigit invoked. pos = 719
digit invoked. pos = 719
star[false]: pos = 719, val = null
whitespace invoked. pos = 719
singleLineComment invoked. pos = 719
multiLineComment invoked. pos = 719
comment invoked. pos = 719
star[false]: pos = 719, val = null
__ invoked. pos = 719
idrest invoked. pos = 719
varid invoked. pos = 718
---ret = 719
---val = "c"
plainid invoked. pos = 718
---ret = 719
---val = "c"
id invoked. pos = 718
---ret = 719
---val = "c"
ARROW invoked. pos = 719
IF invoked. pos = 718
WHILE invoked. pos = 718
NEW invoked. pos = 718
OPBRACE invoked. pos = 718
BlockExpr invoked. pos = 718
EmptyElemTag invoked. pos = 718
STag invoked. pos = 718
Element invoked. pos = 718
CDStart invoked. pos = 718
CDSect invoked. pos = 718
PI invoked. pos = 718
Comment invoked. pos = 718
XmlContent invoked. pos = 718
XmlExpr invoked. pos = 718
DOT invoked. pos = 719
Empty invoked. pos = 719
_StableId invoked. pos = 719
StableId invoked. pos = 718
---ret = 719
---val = "c"
Path invoked. pos = 718
---ret = 719
---val = "c"
UNDER invoked. pos = 719
OPBRACKET invoked. pos = 719
TypeArgs invoked. pos = 719
OPPAREN invoked. pos = 719
nl invoked. pos = 719
OPBRACE invoked. pos = 719
BlockExpr invoked. pos = 719
ArgumentExprs invoked. pos = 719
_SimpleExpr1 invoked. pos = 719
SimpleExpr1 invoked. pos = 718
---ret = 719
---val = "c"
HYPHEN invoked. pos = 718
PLUS invoked. pos = 718
SimpleExpr invoked. pos = 718
---ret = 719
---val = "c"
PrefixExpr invoked. pos = 718
---ret = 719
---val = "c"
varid invoked. pos = 719
opchar invoked. pos = 719
---ret = 720
---val = ":"
opchar invoked. pos = 720
star[true]: pos = 720, val = :
whitespace invoked. pos = 720
---ret = 721
---val = " "
whitespace invoked. pos = 721
singleLineComment invoked. pos = 721
multiLineComment invoked. pos = 721
comment invoked. pos = 721
star[false]: pos = 721, val =  
__ invoked. pos = 720
---ret = 721
---val = " "
op invoked. pos = 719
---ret = 721
---val = [":"," "]
plainid invoked. pos = 719
---ret = 721
---val = [":"," "]
id invoked. pos = 719
---ret = 721
---val = [":"," "]
nl invoked. pos = 721
HYPHEN invoked. pos = 721
PLUS invoked. pos = 721
NEW invoked. pos = 721
OPBRACE invoked. pos = 721
BlockExpr invoked. pos = 721
OPPAREN invoked. pos = 721
EmptyElemTag invoked. pos = 721
STag invoked. pos = 721
Element invoked. pos = 721
CDStart invoked. pos = 721
CDSect invoked. pos = 721
PI invoked. pos = 721
Comment invoked. pos = 721
XmlContent invoked. pos = 721
XmlExpr invoked. pos = 721
upper invoked. pos = 721
---ret = 722
---val = "C"
upper invoked. pos = 722
lower invoked. pos = 722
---ret = 723
---val = "h"
letter invoked. pos = 722
---ret = 723
---val = "h"
upper invoked. pos = 723
lower invoked. pos = 723
---ret = 724
---val = "a"
letter invoked. pos = 723
---ret = 724
---val = "a"
upper invoked. pos = 724
lower invoked. pos = 724
---ret = 725
---val = "r"
letter invoked. pos = 724
---ret = 725
---val = "r"
upper invoked. pos = 725
lower invoked. pos = 725
letter invoked. pos = 725
nonZeroDigit invoked. pos = 725
digit invoked. pos = 725
star[false]: pos = 725, val = h,a,r
whitespace invoked. pos = 725
singleLineComment invoked. pos = 725
multiLineComment invoked. pos = 725
comment invoked. pos = 725
star[false]: pos = 725, val = null
__ invoked. pos = 725
idrest invoked. pos = 722
---ret = 725
---val = ["h","a","r"]
plainid invoked. pos = 721
---ret = 725
---val = ["C",["h","a","r"]]
id invoked. pos = 721
---ret = 725
---val = ["C",["h","a","r"]]
DOT invoked. pos = 725
Empty invoked. pos = 725
_StableId invoked. pos = 725
StableId invoked. pos = 721
---ret = 725
---val = ["C",["h","a","r"]]
Path invoked. pos = 721
---ret = 725
---val = ["C",["h","a","r"]]
UNDER invoked. pos = 725
OPBRACKET invoked. pos = 725
TypeArgs invoked. pos = 725
OPPAREN invoked. pos = 725
nl invoked. pos = 725
OPBRACE invoked. pos = 725
BlockExpr invoked. pos = 725
ArgumentExprs invoked. pos = 725
_SimpleExpr1 invoked. pos = 725
SimpleExpr1 invoked. pos = 721
---ret = 725
---val = ["C",["h","a","r"]]
SimpleExpr invoked. pos = 721
---ret = 725
---val = ["C",["h","a","r"]]
PrefixExpr invoked. pos = 721
---ret = 725
---val = ["C",["h","a","r"]]
varid invoked. pos = 725
opchar invoked. pos = 725
star[true]: pos = -1, val = null
op invoked. pos = 725
plainid invoked. pos = 725
id invoked. pos = 725
_InfixExpr invoked. pos = 725
InfixExpr invoked. pos = 721
---ret = 725
---val = ["C",["h","a","r"]]
_InfixExpr invoked. pos = 719
---ret = 725
---val = [[":"," "],["C",["h","a","r"]]]
InfixExpr invoked. pos = 718
---ret = 725
---val = ["c",[[":"," "],["C",["h","a","r"]]]]
PostfixExpr invoked. pos = 718
---ret = 725
---val = ["c",[[":"," "],["C",["h","a","r"]]]]
COLON invoked. pos = 725
Ascription invoked. pos = 725
Expr1 invoked. pos = 718
---ret = 725
---val = ["c",[[":"," "],["C",["h","a","r"]]]]
Expr invoked. pos = 718
---ret = 725
---val = ["c",[[":"," "],["C",["h","a","r"]]]]
whitespace invoked. pos = 726
---ret = 727
---val = " "
whitespace invoked. pos = 727
singleLineComment invoked. pos = 727
multiLineComment invoked. pos = 727
comment invoked. pos = 727
star[false]: pos = 727, val =  
__ invoked. pos = 726
---ret = 727
---val = " "
COMMA invoked. pos = 725
---ret = 727
---val = [","," "]
OPPAREN invoked. pos = 727
Bindings invoked. pos = 727
IMPLICIT invoked. pos = 727
upper invoked. pos = 727
lower invoked. pos = 727
---ret = 728
---val = "m"
upper invoked. pos = 728
lower invoked. pos = 728
letter invoked. pos = 728
nonZeroDigit invoked. pos = 728
digit invoked. pos = 728
star[false]: pos = 728, val = null
whitespace invoked. pos = 728
singleLineComment invoked. pos = 728
multiLineComment invoked. pos = 728
comment invoked. pos = 728
star[false]: pos = 728, val = null
__ invoked. pos = 728
idrest invoked. pos = 728
varid invoked. pos = 727
---ret = 728
---val = "m"
plainid invoked. pos = 727
---ret = 728
---val = "m"
id invoked. pos = 727
---ret = 728
---val = "m"
ARROW invoked. pos = 728
IF invoked. pos = 727
WHILE invoked. pos = 727
NEW invoked. pos = 727
OPBRACE invoked. pos = 727
BlockExpr invoked. pos = 727
EmptyElemTag invoked. pos = 727
STag invoked. pos = 727
Element invoked. pos = 727
CDStart invoked. pos = 727
CDSect invoked. pos = 727
PI invoked. pos = 727
Comment invoked. pos = 727
XmlContent invoked. pos = 727
XmlExpr invoked. pos = 727
DOT invoked. pos = 728
Empty invoked. pos = 728
_StableId invoked. pos = 728
StableId invoked. pos = 727
---ret = 728
---val = "m"
Path invoked. pos = 727
---ret = 728
---val = "m"
UNDER invoked. pos = 728
OPBRACKET invoked. pos = 728
TypeArgs invoked. pos = 728
OPPAREN invoked. pos = 728
nl invoked. pos = 728
OPBRACE invoked. pos = 728
BlockExpr invoked. pos = 728
ArgumentExprs invoked. pos = 728
_SimpleExpr1 invoked. pos = 728
SimpleExpr1 invoked. pos = 727
---ret = 728
---val = "m"
HYPHEN invoked. pos = 727
PLUS invoked. pos = 727
SimpleExpr invoked. pos = 727
---ret = 728
---val = "m"
PrefixExpr invoked. pos = 727
---ret = 728
---val = "m"
varid invoked. pos = 728
opchar invoked. pos = 728
---ret = 729
---val = ":"
opchar invoked. pos = 729
---ret = 730
---val = "A"
opchar invoked. pos = 730
---ret = 731
---val = "r"
opchar invoked. pos = 731
---ret = 732
---val = "r"
opchar invoked. pos = 732
---ret = 733
---val = "a"
opchar invoked. pos = 733
---ret = 734
---val = "y"
opchar invoked. pos = 734
star[true]: pos = 734, val = :,A,r,r,a,y
whitespace invoked. pos = 734
singleLineComment invoked. pos = 734
multiLineComment invoked. pos = 734
comment invoked. pos = 734
star[false]: pos = 734, val = null
__ invoked. pos = 734
op invoked. pos = 728
---ret = 734
---val = [":","A","r","r","a","y"]
plainid invoked. pos = 728
---ret = 734
---val = [":","A","r","r","a","y"]
id invoked. pos = 728
---ret = 734
---val = [":","A","r","r","a","y"]
nl invoked. pos = 734
HYPHEN invoked. pos = 734
PLUS invoked. pos = 734
NEW invoked. pos = 734
OPBRACE invoked. pos = 734
BlockExpr invoked. pos = 734
OPPAREN invoked. pos = 734
EmptyElemTag invoked. pos = 734
STag invoked. pos = 734
Element invoked. pos = 734
CDStart invoked. pos = 734
CDSect invoked. pos = 734
PI invoked. pos = 734
Comment invoked. pos = 734
XmlContent invoked. pos = 734
XmlExpr invoked. pos = 734
upper invoked. pos = 734
lower invoked. pos = 734
varid invoked. pos = 734
star[true]: pos = -1, val = null
op invoked. pos = 734
plainid invoked. pos = 734
id invoked. pos = 734
THIS invoked. pos = 734
StableId invoked. pos = 734
Path invoked. pos = 734
nonZeroDigit invoked. pos = 734
decimalNumeral invoked. pos = 734
hexNumeral invoked. pos = 734
octalNumeral invoked. pos = 734
integerLiteral invoked. pos = 734
digit invoked. pos = 734
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 734
booleanLiteral invoked. pos = 734
characterLiteral invoked. pos = 734
stringLiteral invoked. pos = 734
symbolLiteral invoked. pos = 734
Literal invoked. pos = 734
UNDER invoked. pos = 734
SimpleExpr1 invoked. pos = 734
SimpleExpr invoked. pos = 734
PrefixExpr invoked. pos = 734
InfixExpr invoked. pos = 734
_InfixExpr invoked. pos = 728
InfixExpr invoked. pos = 727
---ret = 728
---val = "m"
PostfixExpr invoked. pos = 727
---ret = 734
---val = ["m",[":","A","r","r","a","y"]]
COLON invoked. pos = 734
Ascription invoked. pos = 734
Expr1 invoked. pos = 727
---ret = 734
---val = ["m",[":","A","r","r","a","y"]]
Expr invoked. pos = 727
---ret = 734
---val = ["m",[":","A","r","r","a","y"]]
COMMA invoked. pos = 734
star[false]: pos = 734, val = ,, ,m,:,A,r,r,a,y
Exprs invoked. pos = 718
---ret = 734
---val = [["c",[[":"," "],["C",["h","a","r"]]]],[[","," "],["m",[":","A","r","r","a","y"]]]]
CLPAREN invoked. pos = 734
nl invoked. pos = 717
OPBRACE invoked. pos = 717
BlockExpr invoked. pos = 717
ArgumentExprs invoked. pos = 717
_SimpleExpr1 invoked. pos = 717
SimpleExpr1 invoked. pos = 713
---ret = 717
---val = ["c",["o","n","v"]]
SimpleExpr invoked. pos = 713
---ret = 717
---val = ["c",["o","n","v"]]
PrefixExpr invoked. pos = 713
---ret = 717
---val = ["c",["o","n","v"]]
varid invoked. pos = 717
opchar invoked. pos = 717
star[true]: pos = -1, val = null
op invoked. pos = 717
plainid invoked. pos = 717
id invoked. pos = 717
_InfixExpr invoked. pos = 717
InfixExpr invoked. pos = 713
---ret = 717
---val = ["c",["o","n","v"]]
_InfixExpr invoked. pos = 706
---ret = 717
---val = [["\n",[" "," "]],["d",[["e","f"]," "]],["c",["o","n","v"]]]
InfixExpr invoked. pos = 576
---ret = 717
---val = [["{",[["\n",[" "," "," "," "," "," ",["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]]],[[["val"," "],[["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["val"," "],[["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["p",["r","i","n","t","l","n"]],["(","i",")"]],";"],["\n",["\n",[" "," "]]]],"}"],[["\n",[" "," "]],["d",[["e","f"]," "]],["c",["o","n","v"]]]]
PostfixExpr invoked. pos = 576
---ret = 717
---val = [["{",[["\n",[" "," "," "," "," "," ",["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]]],[[["val"," "],[["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["val"," "],[["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["p",["r","i","n","t","l","n"]],["(","i",")"]],";"],["\n",["\n",[" "," "]]]],"}"],[["\n",[" "," "]],["d",[["e","f"]," "]],["c",["o","n","v"]]]]
COLON invoked. pos = 717
Ascription invoked. pos = 717
Expr1 invoked. pos = 576
---ret = 717
---val = [["{",[["\n",[" "," "," "," "," "," ",["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]]],[[["val"," "],[["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["val"," "],[["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["p",["r","i","n","t","l","n"]],["(","i",")"]],";"],["\n",["\n",[" "," "]]]],"}"],[["\n",[" "," "]],["d",[["e","f"]," "]],["c",["o","n","v"]]]]
Expr invoked. pos = 576
---ret = 717
---val = [["{",[["\n",[" "," "," "," "," "," ",["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]]],[[["val"," "],[["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["val"," "],[["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["p",["r","i","n","t","l","n"]],["(","i",")"]],";"],["\n",["\n",[" "," "]]]],"}"],[["\n",[" "," "]],["d",[["e","f"]," "]],["c",["o","n","v"]]]]
Expr1 invoked. pos = 562
---ret = 717
---val = ["for",["(",[["i"," "],"<-"," ",["l",["i","s","t"]]],")"],[["{",[["\n",[" "," "," "," "," "," ",["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]]],[[["val"," "],[["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["val"," "],[["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["p",["r","i","n","t","l","n"]],["(","i",")"]],";"],["\n",["\n",[" "," "]]]],"}"],[["\n",[" "," "]],["d",[["e","f"]," "]],["c",["o","n","v"]]]]]
BlockStat invoked. pos = 562
---ret = 717
---val = ["for",["(",[["i"," "],"<-"," ",["l",["i","s","t"]]],")"],[["{",[["\n",[" "," "," "," "," "," ",["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]]],[[["val"," "],[["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["val"," "],[["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["p",["r","i","n","t","l","n"]],["(","i",")"]],";"],["\n",["\n",[" "," "]]]],"}"],[["\n",[" "," "]],["d",[["e","f"]," "]],["c",["o","n","v"]]]]]
SEMICOLON invoked. pos = 717
star[true]: pos = -1, val = null
semi invoked. pos = 717
star[false]: pos = 562, val = 
,
, , , , ,val, ,m, ,=, ,s,c,.,n,e,x,t,(,),.,t,o,C,h,a,r,A,r,r,a,y,(,),;,
, , , , ,val, ,s,c, ,=, ,new, ,S,c,a,n,n,e,r,(,S,y,s,t,e,m,.,i,n,),;,
, , , , ,//, ,v,a,l, ,t, ,=, ,s,c,.,n,e,x,t,I,n,t,(,),;,
, , , , ,val, ,l,i,s,t, ,=, ,L,i,s,t,(,3,,,4,,,5,),
, , , , ,v,a,l, ,+,+,+, ,=, ,1,;,
, , , , ,//,v,a,l, ,;,;,;, ,=, ,1,;,
, , , , ,val, ,`,",a,",`, ,=, ,1,0,0,0,;,
, , , , ,//,v,a,l, ,',",b,",', ,=, ,1,0,0,0,;, ,/,/,c,a,n,n,o,t,
, , , , ,//,v,a,l, ,",c,", ,=, ,2,0,0,0,;, ,/,/,c,a,n,n,o,t,
, , , , ,//,v,a,l, ,',d,', ,=, ,3,0,0,0,;, ,/,/,c,a,n, ,c,o,m,p,i,l,e,,, ,b,u,t, ,c,a,n,n,o,t, ,u,s,e,?,
, , , , ,//,v,a,l, ,`,',e,a,',`, ,=, ,4,0,0,0,;, ,/,/,動,く,け,ど,、,仕,様,上,は,駄,目,な,は,ず,・,・,・,
, , , , ,//,p,r,i,n,t,l,n,(,`,',e,a,',`,),;,
, , , , ,//,p,r,i,n,t,l,n,(,`,',a,',`,),;, ,/,/,c,a,n,n,o,t,
, , , , ,p,r,i,n,t,l,n,(,",a, ,=, ,", ,+, ,`,",a,",`,),;,
, , , , ,p,r,i,n,t,l,n,(,+,+,+,),;,
,
, , , , 
ResultExpr invoked. pos = 562
---ret = 717
---val = ["for",["(",[["i"," "],"<-"," ",["l",["i","s","t"]]],")"],[["{",[["\n",[" "," "," "," "," "," ",["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]]],[[["val"," "],[["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["val"," "],[["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["p",["r","i","n","t","l","n"]],["(","i",")"]],";"],["\n",["\n",[" "," "]]]],"}"],[["\n",[" "," "]],["d",[["e","f"]," "]],["c",["o","n","v"]]]]]
Block invoked. pos = 104
---ret = 717
---val = [[["\n",["\n",[" "," "," "," "]]],[[["val"," "],[["m"," "],["="," "],[[["s","c"],[".",["n",["e","x","t"]]]],[["(",")"],[".",["t",["o","C","h","a","r","A","r","r","a","y"]],["(",")"]]]]]],";"],["\n",[" "," "," "," "]],[[["val"," "],[["s",["c"," "]],["="," "],[["new"," "],[["S",["c","a","n","n","e","r"]],["(",[["S",["y","s","t","e","m"]],[".",["i","n"]]],")"]]]]],";"],["\n",[" "," "," "," ",["//",[" ","v","a","l"," ","t"," ","="," ","s","c",".","n","e","x","t","I","n","t","(",")",";"],["\n",[" "," "," "," "]]]]],[[["val"," "],[["l",[["i","s","t"]," "]],["="," "],[[["L",["i","s","t"]],["(",["3",[[",","4"],[",","5"]]],")"]],[["\n",[" "," "," "," "]],["v",[["a","l"]," "]],[["+",[["+","+"]," "]],[["="," "],"1"]]]]]],";"],["\n",[" "," "," "," ",["//",["v","a","l"," ",";",";",";"," ","="," ","1",";"],["\n",[" "," "," "," "]]]]],[[["val"," "],[["`",["\"","a","\""],"`"," "],["="," "],["1","0","0","0"]]],";"],["\n",[" "," "," "," ",["//",["v","a","l"," ","'","\"","b","\"","'"," ","="," ","1","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","\"","c","\""," ","="," ","2","0","0","0",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," ",["//",["v","a","l"," ","'","d","'"," ","="," ","3","0","0","0",";"," ","/","/","c","a","n"," ","c","o","m","p","i","l","e",","," ","b","u","t"," ","c","a","n","n","o","t"," ","u","s","e","?"],["\n",[" "," "," "," ",["//",["v","a","l"," ","`","'","e","a","'","`"," ","="," ","4","0","0","0",";"," ","/","/","動","く","け","ど","、","仕","様","上","は","駄","目","な","は","ず","・","・","・"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","e","a","'","`",")",";"],["\n",[" "," "," "," ",["//",["p","r","i","n","t","l","n","(","`","'","a","'","`",")",";"," ","/","/","c","a","n","n","o","t"],["\n",[" "," "," "," "]]]]]]]]]]]]]]]]]]]],[[["p",["r","i","n","t","l","n"]],["(",[[["\"",["a"," ","="," "],"\""]," "],[["+"," "],["`",["\"","a","\""],"`"]]],")"]],";"],["\n",[" "," "," "," "]],[[["p",["r","i","n","t","l","n"]],["(",["+",["+","+"]],")"]],";"],["\n",["\n",[" "," "," "," "]]]],["for",["(",[["i"," "],"<-"," ",["l",["i","s","t"]]],")"],[["{",[["\n",[" "," "," "," "," "," ",["//",["v","a","l"," ","i","n","p","u","t"," ","="," ","s","c",".","n","e","x","t","(",")",".","t","o","C","h","a","r","A","r","r","a","y","(",")",";"],["\n",[" "," "," "," "," "," "]]]]],[[["val"," "],[["f"," "],["="," "],[["c",["o","n","v"]],["(",[["_",[":","C","h","a","r"]],[[","," "],"m"]],")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["val"," "],[["a",[["n","s"]," "]],["="," "],[[["i",["n","p","u","t"]],[".",["m",["a","p"]]]],["(","f",")"]]]],";"],["\n",[" "," "," "," "," "," "]],[[["p",["r","i","n","t","l","n"]],["(","i",")"]],";"],["\n",["\n",[" "," "]]]],"}"],[["\n",[" "," "]],["d",[["e","f"]," "]],["c",["o","n","v"]]]]]]
CLBRACE invoked. pos = 717
THIS invoked. pos = 97
FunDef invoked. pos = 97
TYPE invoked. pos = 93
CASE invoked. pos = 93
OBJECT invoked. pos = 93
TmplDef invoked. pos = 93
Def invoked. pos = 93
star[false]: pos = 93, val = null
star[false]: pos = 93, val = null
FunDcl invoked. pos = 97
---ret = 103
---val = [["d",["o","I","t"]],["(",")"]]
Dcl invoked. pos = 93
---ret = 103
---val = [["def"," "],[["d",["o","I","t"]],["(",")"]]]
TemplateStat invoked. pos = 93
---ret = 103
---val = [["def"," "],[["d",["o","I","t"]],["(",")"]]]
SEMICOLON invoked. pos = 103
star[true]: pos = -1, val = null
semi invoked. pos = 103
star[false]: pos = 103, val = 
,
, , ,def, ,m,a,i,n,(,a,r,g,s,:, ,A,r,r,a,y,[,S,t,r,i,n,g,],),:, ,U,n,i,t, ,=, ,{,d,o,I,t,(,),},
,
, , ,def, ,d,o,I,t,(,)
CLBRACE invoked. pos = 103
TemplateBody invoked. pos = 38
ClassTemplateOpt invoked. pos = 38
ObjectDef invoked. pos = 33
---ret = 38
---val = ["M",[["a","i","n"]," "]]
TmplDef invoked. pos = 26
---ret = 38
---val = [["object"," "],["M",[["a","i","n"]," "]]]
TopStat invoked. pos = 26
---ret = 38
---val = [["object"," "],["M",[["a","i","n"]," "]]]
SEMICOLON invoked. pos = 38
star[true]: pos = -1, val = null
semi invoked. pos = 38
star[false]: pos = 38, val = 
,
,object, ,M,a,i,n, 
TopStatSeq invoked. pos = 0
---ret = 38
---val = [["import"," ",[["j",["a","v","a"]],[".",["u",["t","i","l"]],[".",["S",["c","a","n","n","e","r"]]]]]],[["\n","\n"],[["object"," "],["M",[["a","i","n"]," "]]]]]
{ pos: 38,
  val: [ [ 'import', ' ', [Object] ], [ [Object], [Object] ] ] }
{"pos":38,"val":[["import"," ",[["j",["a","v","a"]],[".",["u",["t","i","l"]],[".",["S",["c","a","n","n","e","r"]]]]]],[["\n","\n"],[["object"," "],["M",[["a","i","n"]," "]]]]]}
