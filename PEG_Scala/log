grammar is ./scala.pegjs
parser built!
input length = 85
whitespace invoked. pos = 0
singleLineComment invoked. pos = 0
multiLineComment invoked. pos = 0
comment invoked. pos = 0
star[false]: pos = 0, val = null
__ invoked. pos = 0
PACKAGE invoked. pos = 0
star[false]: pos = 0, val = null
AT invoked. pos = 0
Annotation invoked. pos = 0
star[false]: pos = 0, val = null
IMPLICIT invoked. pos = 0
LAZY invoked. pos = 0
LocalModifier invoked. pos = 0
AccessModifier invoked. pos = 0
Modifier invoked. pos = 0
star[false]: pos = 0, val = null
CASE invoked. pos = 0
OBJECT invoked. pos = 0
TmplDef invoked. pos = 0
whitespace invoked. pos = 6
---ret = 7
---val = " "
whitespace invoked. pos = 7
singleLineComment invoked. pos = 7
multiLineComment invoked. pos = 7
comment invoked. pos = 7
star[false]: pos = 7, val =  
__ invoked. pos = 6
---ret = 7
---val = " "
upper invoked. pos = 7
lower invoked. pos = 7
---ret = 8
---val = "j"
upper invoked. pos = 8
lower invoked. pos = 8
---ret = 9
---val = "a"
letter invoked. pos = 8
---ret = 9
---val = "a"
upper invoked. pos = 9
lower invoked. pos = 9
---ret = 10
---val = "v"
letter invoked. pos = 9
---ret = 10
---val = "v"
upper invoked. pos = 10
lower invoked. pos = 10
---ret = 11
---val = "a"
letter invoked. pos = 10
---ret = 11
---val = "a"
upper invoked. pos = 11
lower invoked. pos = 11
letter invoked. pos = 11
nonZeroDigit invoked. pos = 11
digit invoked. pos = 11
star[false]: pos = 11, val = a,v,a
whitespace invoked. pos = 11
singleLineComment invoked. pos = 11
multiLineComment invoked. pos = 11
comment invoked. pos = 11
star[false]: pos = 11, val = null
__ invoked. pos = 11
idrest invoked. pos = 8
---ret = 11
---val = ["a","v","a"]
varid invoked. pos = 7
---ret = 11
---val = ["j",["a","v","a"]]
plainid invoked. pos = 7
---ret = 11
---val = ["j",["a","v","a"]]
id invoked. pos = 7
---ret = 11
---val = ["j",["a","v","a"]]
whitespace invoked. pos = 12
singleLineComment invoked. pos = 12
multiLineComment invoked. pos = 12
comment invoked. pos = 12
star[false]: pos = 12, val = null
__ invoked. pos = 12
DOT invoked. pos = 11
---ret = 12
---val = "."
upper invoked. pos = 12
lower invoked. pos = 12
---ret = 13
---val = "u"
upper invoked. pos = 13
lower invoked. pos = 13
---ret = 14
---val = "t"
letter invoked. pos = 13
---ret = 14
---val = "t"
upper invoked. pos = 14
lower invoked. pos = 14
---ret = 15
---val = "i"
letter invoked. pos = 14
---ret = 15
---val = "i"
upper invoked. pos = 15
lower invoked. pos = 15
---ret = 16
---val = "l"
letter invoked. pos = 15
---ret = 16
---val = "l"
upper invoked. pos = 16
lower invoked. pos = 16
letter invoked. pos = 16
nonZeroDigit invoked. pos = 16
digit invoked. pos = 16
star[false]: pos = 16, val = t,i,l
whitespace invoked. pos = 16
singleLineComment invoked. pos = 16
multiLineComment invoked. pos = 16
comment invoked. pos = 16
star[false]: pos = 16, val = null
__ invoked. pos = 16
idrest invoked. pos = 13
---ret = 16
---val = ["t","i","l"]
varid invoked. pos = 12
---ret = 16
---val = ["u",["t","i","l"]]
plainid invoked. pos = 12
---ret = 16
---val = ["u",["t","i","l"]]
id invoked. pos = 12
---ret = 16
---val = ["u",["t","i","l"]]
whitespace invoked. pos = 17
singleLineComment invoked. pos = 17
multiLineComment invoked. pos = 17
comment invoked. pos = 17
star[false]: pos = 17, val = null
__ invoked. pos = 17
DOT invoked. pos = 16
---ret = 17
---val = "."
upper invoked. pos = 17
---ret = 18
---val = "S"
upper invoked. pos = 18
lower invoked. pos = 18
---ret = 19
---val = "c"
letter invoked. pos = 18
---ret = 19
---val = "c"
upper invoked. pos = 19
lower invoked. pos = 19
---ret = 20
---val = "a"
letter invoked. pos = 19
---ret = 20
---val = "a"
upper invoked. pos = 20
lower invoked. pos = 20
---ret = 21
---val = "n"
letter invoked. pos = 20
---ret = 21
---val = "n"
upper invoked. pos = 21
lower invoked. pos = 21
---ret = 22
---val = "n"
letter invoked. pos = 21
---ret = 22
---val = "n"
upper invoked. pos = 22
lower invoked. pos = 22
---ret = 23
---val = "e"
letter invoked. pos = 22
---ret = 23
---val = "e"
upper invoked. pos = 23
lower invoked. pos = 23
---ret = 24
---val = "r"
letter invoked. pos = 23
---ret = 24
---val = "r"
upper invoked. pos = 24
lower invoked. pos = 24
letter invoked. pos = 24
nonZeroDigit invoked. pos = 24
digit invoked. pos = 24
star[false]: pos = 24, val = c,a,n,n,e,r
whitespace invoked. pos = 24
singleLineComment invoked. pos = 24
multiLineComment invoked. pos = 24
comment invoked. pos = 24
star[false]: pos = 24, val = null
__ invoked. pos = 24
idrest invoked. pos = 18
---ret = 24
---val = ["c","a","n","n","e","r"]
plainid invoked. pos = 17
---ret = 24
---val = ["S",["c","a","n","n","e","r"]]
id invoked. pos = 17
---ret = 24
---val = ["S",["c","a","n","n","e","r"]]
DOT invoked. pos = 24
Empty invoked. pos = 24
_StableId invoked. pos = 24
_StableId invoked. pos = 16
---ret = 24
---val = [".",["S",["c","a","n","n","e","r"]]]
_StableId invoked. pos = 11
---ret = 24
---val = [".",["u",["t","i","l"]],[".",["S",["c","a","n","n","e","r"]]]]
StableId invoked. pos = 7
---ret = 24
---val = [["j",["a","v","a"]],[".",["u",["t","i","l"]],[".",["S",["c","a","n","n","e","r"]]]]]
ImportExpr invoked. pos = 7
---ret = 24
---val = [["j",["a","v","a"]],[".",["u",["t","i","l"]],[".",["S",["c","a","n","n","e","r"]]]]]
COMMA invoked. pos = 24
star[false]: pos = 24, val = null
Import invoked. pos = 0
---ret = 24
---val = ["import"," ",[["j",["a","v","a"]],[".",["u",["t","i","l"]],[".",["S",["c","a","n","n","e","r"]]]]]]
TopStat invoked. pos = 0
---ret = 24
---val = ["import"," ",[["j",["a","v","a"]],[".",["u",["t","i","l"]],[".",["S",["c","a","n","n","e","r"]]]]]]
SEMICOLON invoked. pos = 24
whitespace invoked. pos = 25
singleLineComment invoked. pos = 25
multiLineComment invoked. pos = 25
comment invoked. pos = 25
star[false]: pos = 25, val = null
__ invoked. pos = 25
nl invoked. pos = 24
---ret = 25
---val = "\n"
whitespace invoked. pos = 26
singleLineComment invoked. pos = 26
multiLineComment invoked. pos = 26
comment invoked. pos = 26
star[false]: pos = 26, val = null
__ invoked. pos = 26
nl invoked. pos = 25
---ret = 26
---val = "\n"
nl invoked. pos = 26
star[true]: pos = 26, val = 
,

semi invoked. pos = 24
---ret = 26
---val = ["\n","\n"]
AT invoked. pos = 26
Annotation invoked. pos = 26
star[false]: pos = 26, val = null
IMPLICIT invoked. pos = 26
LAZY invoked. pos = 26
LocalModifier invoked. pos = 26
AccessModifier invoked. pos = 26
Modifier invoked. pos = 26
star[false]: pos = 26, val = null
CASE invoked. pos = 26
whitespace invoked. pos = 32
---ret = 33
---val = " "
whitespace invoked. pos = 33
singleLineComment invoked. pos = 33
multiLineComment invoked. pos = 33
comment invoked. pos = 33
star[false]: pos = 33, val =  
__ invoked. pos = 32
---ret = 33
---val = " "
OBJECT invoked. pos = 26
---ret = 33
---val = ["object"," "]
upper invoked. pos = 33
---ret = 34
---val = "M"
upper invoked. pos = 34
lower invoked. pos = 34
---ret = 35
---val = "a"
letter invoked. pos = 34
---ret = 35
---val = "a"
upper invoked. pos = 35
lower invoked. pos = 35
---ret = 36
---val = "i"
letter invoked. pos = 35
---ret = 36
---val = "i"
upper invoked. pos = 36
lower invoked. pos = 36
---ret = 37
---val = "n"
letter invoked. pos = 36
---ret = 37
---val = "n"
upper invoked. pos = 37
lower invoked. pos = 37
letter invoked. pos = 37
nonZeroDigit invoked. pos = 37
digit invoked. pos = 37
star[false]: pos = 37, val = a,i,n
whitespace invoked. pos = 37
---ret = 38
---val = " "
whitespace invoked. pos = 38
singleLineComment invoked. pos = 38
multiLineComment invoked. pos = 38
comment invoked. pos = 38
star[false]: pos = 38, val =  
__ invoked. pos = 37
---ret = 38
---val = " "
idrest invoked. pos = 34
---ret = 38
---val = [["a","i","n"]," "]
plainid invoked. pos = 33
---ret = 38
---val = ["M",[["a","i","n"]," "]]
id invoked. pos = 33
---ret = 38
---val = ["M",[["a","i","n"]," "]]
EXTENDS invoked. pos = 38
nl invoked. pos = 38
whitespace invoked. pos = 39
singleLineComment invoked. pos = 39
multiLineComment invoked. pos = 39
comment invoked. pos = 39
star[false]: pos = 39, val = null
__ invoked. pos = 39
OPBRACE invoked. pos = 38
---ret = 39
---val = "{"
upper invoked. pos = 39
lower invoked. pos = 39
varid invoked. pos = 39
opchar invoked. pos = 39
star[true]: pos = -1, val = null
op invoked. pos = 39
plainid invoked. pos = 39
id invoked. pos = 39
THIS invoked. pos = 39
SelfType invoked. pos = 39
Import invoked. pos = 39
AT invoked. pos = 39
Annotation invoked. pos = 39
star[false]: pos = 39, val = null
IMPLICIT invoked. pos = 39
LAZY invoked. pos = 39
LocalModifier invoked. pos = 39
AccessModifier invoked. pos = 39
Modifier invoked. pos = 39
star[false]: pos = 39, val = null
VAL invoked. pos = 39
VAR invoked. pos = 39
PatVarDef invoked. pos = 39
DEF invoked. pos = 39
TYPE invoked. pos = 39
CASE invoked. pos = 39
OBJECT invoked. pos = 39
TmplDef invoked. pos = 39
Def invoked. pos = 39
star[false]: pos = 39, val = null
star[false]: pos = 39, val = null
Dcl invoked. pos = 39
OPPAREN invoked. pos = 39
Bindings invoked. pos = 39
UNDER invoked. pos = 39
IF invoked. pos = 39
WHILE invoked. pos = 39
NEW invoked. pos = 39
OPBRACE invoked. pos = 39
BlockExpr invoked. pos = 39
EmptyElemTag invoked. pos = 39
STag invoked. pos = 39
Element invoked. pos = 39
CDStart invoked. pos = 39
CDSect invoked. pos = 39
PI invoked. pos = 39
Comment invoked. pos = 39
XmlContent invoked. pos = 39
XmlExpr invoked. pos = 39
HYPHEN invoked. pos = 39
nonZeroDigit invoked. pos = 39
decimalNumeral invoked. pos = 39
hexNumeral invoked. pos = 39
octalNumeral invoked. pos = 39
integerLiteral invoked. pos = 39
digit invoked. pos = 39
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 39
booleanLiteral invoked. pos = 39
characterLiteral invoked. pos = 39
stringLiteral invoked. pos = 39
symbolLiteral invoked. pos = 39
Literal invoked. pos = 39
StableId invoked. pos = 39
Path invoked. pos = 39
SimpleExpr1 invoked. pos = 39
SimpleExpr invoked. pos = 39
PLUS invoked. pos = 39
PrefixExpr invoked. pos = 39
InfixExpr invoked. pos = 39
PostfixExpr invoked. pos = 39
Expr1 invoked. pos = 39
Expr invoked. pos = 39
Empty invoked. pos = 39
TemplateStat invoked. pos = 39
SEMICOLON invoked. pos = 39
whitespace invoked. pos = 40
---ret = 41
---val = " "
whitespace invoked. pos = 41
---ret = 42
---val = " "
whitespace invoked. pos = 42
singleLineComment invoked. pos = 42
multiLineComment invoked. pos = 42
comment invoked. pos = 42
star[false]: pos = 42, val =  , 
__ invoked. pos = 40
---ret = 42
---val = [" "," "]
nl invoked. pos = 39
---ret = 42
---val = ["\n",[" "," "]]
nl invoked. pos = 42
star[true]: pos = 42, val = 
, , 
semi invoked. pos = 39
---ret = 42
---val = ["\n",[" "," "]]
Import invoked. pos = 42
AT invoked. pos = 42
Annotation invoked. pos = 42
star[false]: pos = 42, val = null
IMPLICIT invoked. pos = 42
LAZY invoked. pos = 42
LocalModifier invoked. pos = 42
AccessModifier invoked. pos = 42
Modifier invoked. pos = 42
star[false]: pos = 42, val = null
VAL invoked. pos = 42
VAR invoked. pos = 42
PatVarDef invoked. pos = 42
whitespace invoked. pos = 45
---ret = 46
---val = " "
whitespace invoked. pos = 46
singleLineComment invoked. pos = 46
multiLineComment invoked. pos = 46
comment invoked. pos = 46
star[false]: pos = 46, val =  
__ invoked. pos = 45
---ret = 46
---val = " "
DEF invoked. pos = 42
---ret = 46
---val = ["def"," "]
upper invoked. pos = 46
lower invoked. pos = 46
---ret = 47
---val = "d"
upper invoked. pos = 47
lower invoked. pos = 47
---ret = 48
---val = "o"
letter invoked. pos = 47
---ret = 48
---val = "o"
upper invoked. pos = 48
---ret = 49
---val = "I"
letter invoked. pos = 48
---ret = 49
---val = "I"
upper invoked. pos = 49
lower invoked. pos = 49
---ret = 50
---val = "t"
letter invoked. pos = 49
---ret = 50
---val = "t"
upper invoked. pos = 50
lower invoked. pos = 50
letter invoked. pos = 50
nonZeroDigit invoked. pos = 50
digit invoked. pos = 50
star[false]: pos = 50, val = o,I,t
whitespace invoked. pos = 50
singleLineComment invoked. pos = 50
multiLineComment invoked. pos = 50
comment invoked. pos = 50
star[false]: pos = 50, val = null
__ invoked. pos = 50
idrest invoked. pos = 47
---ret = 50
---val = ["o","I","t"]
varid invoked. pos = 46
---ret = 50
---val = ["d",["o","I","t"]]
plainid invoked. pos = 46
---ret = 50
---val = ["d",["o","I","t"]]
id invoked. pos = 46
---ret = 50
---val = ["d",["o","I","t"]]
OPBRACKET invoked. pos = 50
FunTypeParamClause invoked. pos = 50
nl invoked. pos = 50
whitespace invoked. pos = 51
singleLineComment invoked. pos = 51
multiLineComment invoked. pos = 51
comment invoked. pos = 51
star[false]: pos = 51, val = null
__ invoked. pos = 51
OPPAREN invoked. pos = 50
---ret = 51
---val = "("
AT invoked. pos = 51
Annotation invoked. pos = 51
star[false]: pos = 51, val = null
upper invoked. pos = 51
lower invoked. pos = 51
varid invoked. pos = 51
opchar invoked. pos = 51
star[true]: pos = -1, val = null
op invoked. pos = 51
plainid invoked. pos = 51
id invoked. pos = 51
Param invoked. pos = 51
Params invoked. pos = 51
whitespace invoked. pos = 52
singleLineComment invoked. pos = 52
multiLineComment invoked. pos = 52
comment invoked. pos = 52
star[false]: pos = 52, val = null
__ invoked. pos = 52
CLPAREN invoked. pos = 51
---ret = 52
---val = ")"
ParamClause invoked. pos = 50
---ret = 52
---val = ["(",")"]
nl invoked. pos = 52
OPPAREN invoked. pos = 52
ParamClause invoked. pos = 52
star[false]: pos = 52, val = (,)
ParamClauses invoked. pos = 50
---ret = 52
---val = ["(",")"]
FunSig invoked. pos = 46
---ret = 52
---val = [["d",["o","I","t"]],["(",")"]]
COLON invoked. pos = 52
EQUAL invoked. pos = 52
whitespace invoked. pos = 53
singleLineComment invoked. pos = 53
multiLineComment invoked. pos = 53
comment invoked. pos = 53
star[false]: pos = 53, val = null
__ invoked. pos = 53
OPBRACE invoked. pos = 52
---ret = 53
---val = "{"
Import invoked. pos = 53
AT invoked. pos = 53
Annotation invoked. pos = 53
star[false]: pos = 53, val = null
IMPLICIT invoked. pos = 53
LAZY invoked. pos = 53
VAL invoked. pos = 53
VAR invoked. pos = 53
PatVarDef invoked. pos = 53
DEF invoked. pos = 53
TYPE invoked. pos = 53
CASE invoked. pos = 53
OBJECT invoked. pos = 53
TmplDef invoked. pos = 53
Def invoked. pos = 53
star[false]: pos = 53, val = null
LocalModifier invoked. pos = 53
star[false]: pos = 53, val = null
IF invoked. pos = 53
WHILE invoked. pos = 53
NEW invoked. pos = 53
OPBRACE invoked. pos = 53
BlockExpr invoked. pos = 53
OPPAREN invoked. pos = 53
EmptyElemTag invoked. pos = 53
STag invoked. pos = 53
Element invoked. pos = 53
CDStart invoked. pos = 53
CDSect invoked. pos = 53
PI invoked. pos = 53
Comment invoked. pos = 53
XmlContent invoked. pos = 53
XmlExpr invoked. pos = 53
HYPHEN invoked. pos = 53
nonZeroDigit invoked. pos = 53
decimalNumeral invoked. pos = 53
hexNumeral invoked. pos = 53
octalNumeral invoked. pos = 53
integerLiteral invoked. pos = 53
digit invoked. pos = 53
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 53
booleanLiteral invoked. pos = 53
characterLiteral invoked. pos = 53
stringLiteral invoked. pos = 53
symbolLiteral invoked. pos = 53
Literal invoked. pos = 53
upper invoked. pos = 53
lower invoked. pos = 53
varid invoked. pos = 53
opchar invoked. pos = 53
star[true]: pos = -1, val = null
op invoked. pos = 53
plainid invoked. pos = 53
id invoked. pos = 53
THIS invoked. pos = 53
StableId invoked. pos = 53
Path invoked. pos = 53
UNDER invoked. pos = 53
SimpleExpr1 invoked. pos = 53
SimpleExpr invoked. pos = 53
PLUS invoked. pos = 53
PrefixExpr invoked. pos = 53
InfixExpr invoked. pos = 53
PostfixExpr invoked. pos = 53
Expr1 invoked. pos = 53
Empty invoked. pos = 53
BlockStat invoked. pos = 53
SEMICOLON invoked. pos = 53
whitespace invoked. pos = 54
---ret = 55
---val = " "
whitespace invoked. pos = 55
---ret = 56
---val = " "
whitespace invoked. pos = 56
---ret = 57
---val = " "
whitespace invoked. pos = 57
---ret = 58
---val = " "
whitespace invoked. pos = 58
singleLineComment invoked. pos = 58
multiLineComment invoked. pos = 58
comment invoked. pos = 58
star[false]: pos = 58, val =  , , , 
__ invoked. pos = 54
---ret = 58
---val = [" "," "," "," "]
nl invoked. pos = 53
---ret = 58
---val = ["\n",[" "," "," "," "]]
nl invoked. pos = 58
star[true]: pos = 58, val = 
, , , , 
semi invoked. pos = 53
---ret = 58
---val = ["\n",[" "," "," "," "]]
Import invoked. pos = 58
AT invoked. pos = 58
Annotation invoked. pos = 58
star[false]: pos = 58, val = null
IMPLICIT invoked. pos = 58
LAZY invoked. pos = 58
VAL invoked. pos = 58
VAR invoked. pos = 58
PatVarDef invoked. pos = 58
DEF invoked. pos = 58
TYPE invoked. pos = 58
CASE invoked. pos = 58
OBJECT invoked. pos = 58
TmplDef invoked. pos = 58
Def invoked. pos = 58
star[false]: pos = 58, val = null
LocalModifier invoked. pos = 58
star[false]: pos = 58, val = null
IF invoked. pos = 58
WHILE invoked. pos = 58
NEW invoked. pos = 58
OPBRACE invoked. pos = 58
BlockExpr invoked. pos = 58
OPPAREN invoked. pos = 58
EmptyElemTag invoked. pos = 58
STag invoked. pos = 58
Element invoked. pos = 58
CDStart invoked. pos = 58
CDSect invoked. pos = 58
PI invoked. pos = 58
Comment invoked. pos = 58
XmlContent invoked. pos = 58
XmlExpr invoked. pos = 58
HYPHEN invoked. pos = 58
nonZeroDigit invoked. pos = 58
decimalNumeral invoked. pos = 58
hexNumeral invoked. pos = 58
octalNumeral invoked. pos = 58
integerLiteral invoked. pos = 58
digit invoked. pos = 58
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 58
booleanLiteral invoked. pos = 58
characterLiteral invoked. pos = 58
stringLiteral invoked. pos = 58
symbolLiteral invoked. pos = 58
Literal invoked. pos = 58
upper invoked. pos = 58
lower invoked. pos = 58
---ret = 59
---val = "p"
upper invoked. pos = 59
lower invoked. pos = 59
---ret = 60
---val = "r"
letter invoked. pos = 59
---ret = 60
---val = "r"
upper invoked. pos = 60
lower invoked. pos = 60
---ret = 61
---val = "i"
letter invoked. pos = 60
---ret = 61
---val = "i"
upper invoked. pos = 61
lower invoked. pos = 61
---ret = 62
---val = "n"
letter invoked. pos = 61
---ret = 62
---val = "n"
upper invoked. pos = 62
lower invoked. pos = 62
---ret = 63
---val = "t"
letter invoked. pos = 62
---ret = 63
---val = "t"
upper invoked. pos = 63
lower invoked. pos = 63
---ret = 64
---val = "f"
letter invoked. pos = 63
---ret = 64
---val = "f"
upper invoked. pos = 64
lower invoked. pos = 64
letter invoked. pos = 64
nonZeroDigit invoked. pos = 64
digit invoked. pos = 64
star[false]: pos = 64, val = r,i,n,t,f
whitespace invoked. pos = 64
singleLineComment invoked. pos = 64
multiLineComment invoked. pos = 64
comment invoked. pos = 64
star[false]: pos = 64, val = null
__ invoked. pos = 64
idrest invoked. pos = 59
---ret = 64
---val = ["r","i","n","t","f"]
varid invoked. pos = 58
---ret = 64
---val = ["p",["r","i","n","t","f"]]
plainid invoked. pos = 58
---ret = 64
---val = ["p",["r","i","n","t","f"]]
id invoked. pos = 58
---ret = 64
---val = ["p",["r","i","n","t","f"]]
DOT invoked. pos = 64
Empty invoked. pos = 64
_StableId invoked. pos = 64
StableId invoked. pos = 58
---ret = 64
---val = ["p",["r","i","n","t","f"]]
Path invoked. pos = 58
---ret = 64
---val = ["p",["r","i","n","t","f"]]
UNDER invoked. pos = 64
OPBRACKET invoked. pos = 64
TypeArgs invoked. pos = 64
_SimpleExpr invoked. pos = 64
UNDER invoked. pos = 58
whitespace invoked. pos = 65
singleLineComment invoked. pos = 65
multiLineComment invoked. pos = 65
comment invoked. pos = 65
star[false]: pos = 65, val = null
__ invoked. pos = 65
OPPAREN invoked. pos = 64
---ret = 65
---val = "("
OPPAREN invoked. pos = 65
Bindings invoked. pos = 65
IMPLICIT invoked. pos = 65
upper invoked. pos = 65
lower invoked. pos = 65
varid invoked. pos = 65
opchar invoked. pos = 65
star[true]: pos = -1, val = null
op invoked. pos = 65
plainid invoked. pos = 65
id invoked. pos = 65
UNDER invoked. pos = 65
IF invoked. pos = 65
WHILE invoked. pos = 65
NEW invoked. pos = 65
OPBRACE invoked. pos = 65
BlockExpr invoked. pos = 65
EmptyElemTag invoked. pos = 65
STag invoked. pos = 65
Element invoked. pos = 65
CDStart invoked. pos = 65
CDSect invoked. pos = 65
PI invoked. pos = 65
Comment invoked. pos = 65
XmlContent invoked. pos = 65
XmlExpr invoked. pos = 65
HYPHEN invoked. pos = 65
nonZeroDigit invoked. pos = 65
decimalNumeral invoked. pos = 65
hexNumeral invoked. pos = 65
octalNumeral invoked. pos = 65
integerLiteral invoked. pos = 65
digit invoked. pos = 65
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
star[true]: pos = -1, val = null
floatingPointLiteral invoked. pos = 65
booleanLiteral invoked. pos = 65
characterLiteral invoked. pos = 65
charEscapeSeq invoked. pos = 66
printableChar invoked. pos = 66
---ret = 67
---val = "%"
printableCharNoDoubleQuote invoked. pos = 66
---ret = 67
---val = "%"
stringElement invoked. pos = 66
---ret = 67
---val = "%"
charEscapeSeq invoked. pos = 67
printableChar invoked. pos = 67
---ret = 68
---val = "d"
printableCharNoDoubleQuote invoked. pos = 67
---ret = 68
---val = "d"
stringElement invoked. pos = 67
---ret = 68
---val = "d"
charEscapeSeq invoked. pos = 68
---ret = 70
---val = "\\n"
printableChar invoked. pos = 68
---ret = 71
---val = ["\\n","\""]
printableCharNoDoubleQuote invoked. pos = 68
---ret = 71
---val = ["\\n","\""]
stringElement invoked. pos = 68
---ret = 71
---val = ["\\n","\""]
charEscapeSeq invoked. pos = 71
printableChar invoked. pos = 71
---ret = 72
---val = ","
printableCharNoDoubleQuote invoked. pos = 71
---ret = 72
---val = ","
stringElement invoked. pos = 71
---ret = 72
---val = ","
charEscapeSeq invoked. pos = 72
printableChar invoked. pos = 72
---ret = 73
---val = " "
printableCharNoDoubleQuote invoked. pos = 72
---ret = 73
---val = " "
stringElement invoked. pos = 72
---ret = 73
---val = " "
charEscapeSeq invoked. pos = 73
printableChar invoked. pos = 73
---ret = 74
---val = "x"
printableCharNoDoubleQuote invoked. pos = 73
---ret = 74
---val = "x"
stringElement invoked. pos = 73
---ret = 74
---val = "x"
charEscapeSeq invoked. pos = 74
printableChar invoked. pos = 74
---ret = 75
---val = "+"
printableCharNoDoubleQuote invoked. pos = 74
---ret = 75
---val = "+"
stringElement invoked. pos = 74
---ret = 75
---val = "+"
charEscapeSeq invoked. pos = 75
printableChar invoked. pos = 75
---ret = 76
---val = "y"
printableCharNoDoubleQuote invoked. pos = 75
---ret = 76
---val = "y"
stringElement invoked. pos = 75
---ret = 76
---val = "y"
charEscapeSeq invoked. pos = 76
printableChar invoked. pos = 76
---ret = 77
---val = ")"
printableCharNoDoubleQuote invoked. pos = 76
---ret = 77
---val = ")"
stringElement invoked. pos = 76
---ret = 77
---val = ")"
charEscapeSeq invoked. pos = 77
printableChar invoked. pos = 77
---ret = 78
---val = ";"
printableCharNoDoubleQuote invoked. pos = 77
---ret = 78
---val = ";"
stringElement invoked. pos = 77
---ret = 78
---val = ";"
charEscapeSeq invoked. pos = 78
printableChar invoked. pos = 78
---ret = 79
---val = "\n"
printableCharNoDoubleQuote invoked. pos = 78
---ret = 79
---val = "\n"
stringElement invoked. pos = 78
---ret = 79
---val = "\n"
charEscapeSeq invoked. pos = 79
printableChar invoked. pos = 79
---ret = 80
---val = " "
printableCharNoDoubleQuote invoked. pos = 79
---ret = 80
---val = " "
stringElement invoked. pos = 79
---ret = 80
---val = " "
charEscapeSeq invoked. pos = 80
printableChar invoked. pos = 80
---ret = 81
---val = " "
printableCharNoDoubleQuote invoked. pos = 80
---ret = 81
---val = " "
stringElement invoked. pos = 80
---ret = 81
---val = " "
charEscapeSeq invoked. pos = 81
printableChar invoked. pos = 81
---ret = 82
---val = "}"
printableCharNoDoubleQuote invoked. pos = 81
---ret = 82
---val = "}"
stringElement invoked. pos = 81
---ret = 82
---val = "}"
charEscapeSeq invoked. pos = 82
printableChar invoked. pos = 82
---ret = 83
---val = "\n"
printableCharNoDoubleQuote invoked. pos = 82
---ret = 83
---val = "\n"
stringElement invoked. pos = 82
---ret = 83
---val = "\n"
charEscapeSeq invoked. pos = 83
printableChar invoked. pos = 83
---ret = 84
---val = "}"
printableCharNoDoubleQuote invoked. pos = 83
---ret = 84
---val = "}"
stringElement invoked. pos = 83
---ret = 84
---val = "}"
charEscapeSeq invoked. pos = 84
printableChar invoked. pos = 84
---ret = END_INPUT [85]
---val = "\n"
printableCharNoDoubleQuote invoked. pos = 84
---ret = END_INPUT [85]
---val = "\n"
stringElement invoked. pos = 84
---ret = END_INPUT [85]
---val = "\n"
charEscapeSeq invoked. pos = -2
printableChar invoked. pos = -2
printableCharNoDoubleQuote invoked. pos = -2
stringElement invoked. pos = -2
star[false]: pos = -2, val = %,d,\n,",,, ,x,+,y,),;,
, , ,},
,},

stringLiteral invoked. pos = 65
symbolLiteral invoked. pos = 65
Literal invoked. pos = 65
THIS invoked. pos = 65
StableId invoked. pos = 65
Path invoked. pos = 65
SimpleExpr1 invoked. pos = 65
SimpleExpr invoked. pos = 65
PLUS invoked. pos = 65
PrefixExpr invoked. pos = 65
InfixExpr invoked. pos = 65
PostfixExpr invoked. pos = 65
Expr1 invoked. pos = 65
Expr invoked. pos = 65
Exprs invoked. pos = 65
CLPAREN invoked. pos = 65
nl invoked. pos = 64
OPBRACE invoked. pos = 64
BlockExpr invoked. pos = 64
ArgumentExprs invoked. pos = 64
_SimpleExpr1 invoked. pos = 64
SimpleExpr1 invoked. pos = 58
---ret = 64
---val = ["p",["r","i","n","t","f"]]
SimpleExpr invoked. pos = 58
---ret = 64
---val = ["p",["r","i","n","t","f"]]
EQUAL invoked. pos = 64
PLUS invoked. pos = 58
PrefixExpr invoked. pos = 58
---ret = 64
---val = ["p",["r","i","n","t","f"]]
varid invoked. pos = 64
opchar invoked. pos = 64
star[true]: pos = -1, val = null
op invoked. pos = 64
plainid invoked. pos = 64
id invoked. pos = 64
_InfixExpr invoked. pos = 64
InfixExpr invoked. pos = 58
---ret = 64
---val = ["p",["r","i","n","t","f"]]
PostfixExpr invoked. pos = 58
---ret = 64
---val = ["p",["r","i","n","t","f"]]
COLON invoked. pos = 64
Ascription invoked. pos = 64
Expr1 invoked. pos = 58
---ret = 64
---val = ["p",["r","i","n","t","f"]]
BlockStat invoked. pos = 58
---ret = 64
---val = ["p",["r","i","n","t","f"]]
SEMICOLON invoked. pos = 64
star[true]: pos = -1, val = null
semi invoked. pos = 64
star[false]: pos = 58, val = 
, , , , 
ResultExpr invoked. pos = 58
---ret = 64
---val = ["p",["r","i","n","t","f"]]
Block invoked. pos = 53
---ret = 64
---val = [["\n",[" "," "," "," "]],["p",["r","i","n","t","f"]]]
CLBRACE invoked. pos = 64
THIS invoked. pos = 46
FunDef invoked. pos = 46
TYPE invoked. pos = 42
CASE invoked. pos = 42
OBJECT invoked. pos = 42
TmplDef invoked. pos = 42
Def invoked. pos = 42
star[false]: pos = 42, val = null
star[false]: pos = 42, val = null
FunDcl invoked. pos = 46
---ret = 52
---val = [["d",["o","I","t"]],["(",")"]]
Dcl invoked. pos = 42
---ret = 52
---val = [["def"," "],[["d",["o","I","t"]],["(",")"]]]
TemplateStat invoked. pos = 42
---ret = 52
---val = [["def"," "],[["d",["o","I","t"]],["(",")"]]]
SEMICOLON invoked. pos = 52
star[true]: pos = -1, val = null
semi invoked. pos = 52
star[false]: pos = 52, val = 
, , ,def, ,d,o,I,t,(,)
CLBRACE invoked. pos = 52
TemplateBody invoked. pos = 38
ClassTemplateOpt invoked. pos = 38
ObjectDef invoked. pos = 33
---ret = 38
---val = ["M",[["a","i","n"]," "]]
TmplDef invoked. pos = 26
---ret = 38
---val = [["object"," "],["M",[["a","i","n"]," "]]]
TopStat invoked. pos = 26
---ret = 38
---val = [["object"," "],["M",[["a","i","n"]," "]]]
SEMICOLON invoked. pos = 38
star[true]: pos = -1, val = null
semi invoked. pos = 38
star[false]: pos = 38, val = 
,
,object, ,M,a,i,n, 
TopStatSeq invoked. pos = 0
---ret = 38
---val = [["import"," ",[["j",["a","v","a"]],[".",["u",["t","i","l"]],[".",["S",["c","a","n","n","e","r"]]]]]],[["\n","\n"],[["object"," "],["M",[["a","i","n"]," "]]]]]
{ pos: 38,
  val: [ [ 'import', ' ', [Object] ], [ [Object], [Object] ] ] }
{"pos":38,"val":[["import"," ",[["j",["a","v","a"]],[".",["u",["t","i","l"]],[".",["S",["c","a","n","n","e","r"]]]]]],[["\n","\n"],[["object"," "],["M",[["a","i","n"]," "]]]]]}
