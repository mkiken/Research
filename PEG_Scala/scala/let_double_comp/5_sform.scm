(begin (define-syntax Let-Macro (syntax-rules (V-=) ((_ ("Scala" "Paren" (V-id V-= V-e  V-id2 V-= V-e2)) ("Scala" "Brace" (V-body))) (("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" (("Scala" "AnonymousFunction" (lambda (V-id V-id2) (#\nul #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-body #\nul) #\nul)) #\nul #\nul) #\nul))))) ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-e #\nul) #\nul)) #\nul #\nul) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-e2 #\nul) #\nul)) #\nul #\nul) #\nul)))) #\nul)) #\nul)) #\nul #\nul) #\nul))))) ("Scala" "TopStat" #\nul #\nul ("Scala" "ObjectTemplateDefinition" #\nul ("Scala" "ObjectDefinition" V-Append1 ("Scala" "ClassTemplateOpt" #\nul ("Scala" "TemplateBody" (letrec* () #\nul (("Scala" "TemplateStatement" #\nul #\nul ("Scala" "Definition" ("Scala" "FunctionDefinition" ("Scala" "FunctionSignature" V-main #\nul ("Scala" "ParamClauses" (("Scala" "ParamClause" ("Scala" "Params" (("Scala" "Param" #\nul V-args ("Scala" "RepeatedParamType" ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (V-Array)) (("Scala" "TypeArgs" ("Scala" "Types" (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (V-String)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))))))) #\nul) #\nul #\nul) #\nul #\nul)) #\nul) #\nul))))) #\nul)) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (V-Unit)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "BlockExpression" ("Scala" "Block" (letrec* ((V-a ((val variable) (#\nul) (#\nul (Let-Macro ("Scala" "Paren" (V-x V-= ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 3 #\nul) #\nul)) (V-+) (("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 5 #\nul) #\nul)) (V-*) (("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 7 #\nul) #\nul)) (V--) (("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 9 #\nul) #\nul)) #\nul #\nul))))))) #\nul)  V-y V-= ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 10 #\nul) #\nul)) #\nul #\nul) #\nul))) ("Scala" "Brace" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-x #\nul) #\nul)) #\nul #\nul) #\nul)))) #\nul)))) (("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-println ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-args ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 2 #\nul) #\nul)) #\nul #\nul) #\nul)))) #\nul)) #\nul)) #\nul #\nul) #\nul)))) #\nul)) #\nul)) #\nul #\nul) #\nul) ("Scala" "BlockStat" #\nul #\nul #\nul)) #\nul)))) #\nul #\nul) #\nul)))) #\nul))))))) #\nul)
