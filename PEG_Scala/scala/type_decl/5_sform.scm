(begin (define-syntax Decl-Macro (syntax-rules (V-) ((_ ("Scala" "Paren" (V-base  V-miss  V-tp))) (("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "TupleExpression" ("Scala" "Exprs" (("Scala" "AnonymousFunction" (lambda (V-f) (#\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "BlockExpression" ("Scala" "Block" (letrec* ((V-tb ((type TypeDefinition) (#\nul) V-tp)) (V-d ((val variable) (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (V-tb)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 3 #\nul) #\nul)) #\nul #\nul) #\nul) #\nul))) (("Scala" "BlockStat" #\nul #\nul #\nul) ("Scala" "BlockStat" #\nul #\nul [object Object]) ("Scala" "IfStatement" ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-f #\nul) #\nul)) #\nul #\nul) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-base #\nul) #\nul)) #\nul #\nul) #\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-d #\nul) #\nul)) #\nul #\nul) #\nul))) #\nul)))) #\nul #\nul) #\nul))))) ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-base #\nul) #\nul)) #\nul #\nul) #\nul)))) #\nul)) #\nul)) #\nul #\nul) #\nul))))) ("Scala" "TopStat" #\nul #\nul ("Scala" "ObjectTemplateDefinition" #\nul ("Scala" "ObjectDefinition" V-Append1 ("Scala" "ClassTemplateOpt" #\nul ("Scala" "TemplateBody" (letrec* ((V-ta ((type TypeDeclaration) (#\nul #\nul #\nul) #\nul)) (V-tta ((val variable) (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (V-Int)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 3 #\nul) #\nul)) #\nul #\nul) #\nul) #\nul)) (V-ttb ((var variable) (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (V-Int)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))) #\nul)) (V-main ((lambda () (function FunctionDefinition) ("Scala" "FunctionSignature" V-main #\nul ("Scala" "ParamClauses" (("Scala" "ParamClause" ("Scala" "Params" (("Scala" "Param" #\nul V-args ("Scala" "RepeatedParamType" ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (V-Array)) (("Scala" "TypeArgs" ("Scala" "Types" (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (V-String)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))))))) #\nul) #\nul #\nul) #\nul #\nul)) #\nul) #\nul))))) #\nul)) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (V-Unit)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "BlockExpression" ("Scala" "Block" (letrec* ((V-tb ((type TypeDefinition) (#\nul) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (V-Int)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)))) (V-f ((type TypeDefinition) (#\nul) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (V-Int)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)))) (V-b ((val variable) (#\nul) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 1000 #\nul) #\nul)) #\nul #\nul) #\nul) #\nul)) (V-a ((val variable) (#\nul) (#\nul (Decl-Macro ("Scala" "Paren" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 10 #\nul) #\nul)) #\nul #\nul) #\nul)  V-f  ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (V-tb)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))))) #\nul) #\nul))) (("Scala" "BlockStat" #\nul #\nul #\nul) ("Scala" "BlockStat" #\nul #\nul #\nul) ("Scala" "BlockStat" #\nul ("Scala" "Keyword" "lazy") [object Object]) #\nul ("Scala" "BlockStat" #\nul #\nul [object Object]) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-println ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-a #\nul) #\nul)) #\nul #\nul) #\nul)))) #\nul)) #\nul)) #\nul #\nul) #\nul)) #\nul)))) #\nul #\nul) #\nul))))) #\nul (("Scala" "TemplateStatement" #\nul #\nul #\nul) ("Scala" "TemplateStatement" #\nul #\nul [object Object]) ("Scala" "TemplateStatement" #\nul (("Scala" "AccessModifier" ("Scala" "Keyword" "private") #\nul)) #\nul) ("Scala" "TemplateStatement" #\nul #\nul ("Scala" "Definition" #\nul)) #\nul))))))) #\nul)
