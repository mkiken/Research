(begin (define-syntax Or-Macro (syntax-rules (V-) ((_ ("Scala" "Paren" (V-miss))) (("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-miss #\nul) #\nul)) #\nul #\nul) #\nul))))) ("Scala" "TopStat" #\nul #\nul ("Scala" "ObjectTemplateDefinition" #\nul ("Scala" "ObjectDefinition" V-Append1 ("Scala" "ClassTemplateOpt" #\nul ("Scala" "TemplateBody" #\nul (("Scala" "TemplateStatement" #\nul #\nul ("Scala" "Definition" ("Scala" "FunctionDefinition" ("Scala" "FunctionSignature" V-main #\nul ("Scala" "ParamClauses" (("Scala" "ParamClause" ("Scala" "Params" (("Scala" "Param" #\nul V-args ("Scala" "RepeatedParamType" ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (V-Array)) (("Scala" "TypeArgs" ("Scala" "Types" (("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (V-String)) #\nul) #\nul) #\nul #\nul) #\nul #\nul))))))) #\nul) #\nul #\nul) #\nul #\nul)) #\nul) #\nul))))) #\nul)) ("Scala" "Type" #\nul ("Scala" "InfixType" ("Scala" "CompoundType" ("Scala" "AnnotType" ("Scala" "SimpleType" ("Scala" "StableId" (V-Unit)) #\nul) #\nul) #\nul #\nul) #\nul #\nul)) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "BlockExpression" ("Scala" "Block" (("Scala" "BlockStat" #\nul #\nul ("Scala" "PatValDef" ("Scala" "PatDef" (("Scala" "PatternBinder" "a" #\nul)) #\nul ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" ("Scala" "booleanLiteral" "false") #\nul) #\nul)) #\nul #\nul) #\nul)))) ("Scala" "BlockStat" #\nul #\nul ("Scala" "PatVarDef" ("Scala" "PatDef" (("Scala" "PatternBinder" "f" #\nul)) #\nul ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" ("Scala" "Keyword" "-") ("Scala" "SimpleExpression" ("Scala" "literalSimpleExpression" 1 #\nul) #\nul)) #\nul #\nul) #\nul)))) ("Scala" "BlockStat" #\nul #\nul ("Scala" "PatValDef" ("Scala" "PatDef" (("Scala" "PatternBinder" "b" #\nul)) #\nul (#\nul (Or-Macro ("Scala" "Paren" (V-f))) #\nul)))) ("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-println ("Scala" "FunctionApplicationPostfix" ("Scala" "ArgumentExpression" ("Scala" "Exprs" (("Scala" "PostfixExpression" ("Scala" "InfixExpression" ("Scala" "PrefixExpression" #\nul ("Scala" "SimpleExpression" ("Scala" "idSeqSimpleExpression" V-b #\nul) #\nul)) #\nul #\nul) #\nul)))) #\nul)) #\nul)) #\nul #\nul) #\nul)) #\nul))) #\nul #\nul) #\nul)))) #\nul)))))) #\nul)
